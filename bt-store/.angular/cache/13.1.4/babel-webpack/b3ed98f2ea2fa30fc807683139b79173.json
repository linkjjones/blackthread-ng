{"ast":null,"code":"import _asyncToGenerator from \"C:\\\\Dev\\\\blackthread-ng\\\\bt-store\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\asyncToGenerator.js\";\nimport { _registerComponent, registerVersion, _getProvider, getApp, _removeServiceInstance, SDK_VERSION } from '@firebase/app';\nimport { Component } from '@firebase/component';\nimport { Logger, LogLevel } from '@firebase/logger';\nimport { FirebaseError, createMockUserToken, getModularInstance } from '@firebase/util';\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Simple wrapper around a nullable UID. Mostly exists to make code more\n * readable.\n */\n\nclass l {\n  constructor(t) {\n    this.uid = t;\n  }\n\n  isAuthenticated() {\n    return null != this.uid;\n  }\n  /**\n   * Returns a key representing this user, suitable for inclusion in a\n   * dictionary.\n   */\n\n\n  toKey() {\n    return this.isAuthenticated() ? \"uid:\" + this.uid : \"anonymous-user\";\n  }\n\n  isEqual(t) {\n    return t.uid === this.uid;\n  }\n\n}\n/** A user with a null UID. */\n\n\nl.UNAUTHENTICATED = new l(null), // TODO(mikelehen): Look into getting a proper uid-equivalent for\n// non-FirebaseAuth providers.\nl.GOOGLE_CREDENTIALS = new l(\"google-credentials-uid\"), l.FIRST_PARTY = new l(\"first-party-uid\"), l.MOCK_USER = new l(\"mock-user\");\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nlet f = \"9.6.7\";\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nconst d = new Logger(\"@firebase/firestore\");\n/**\n * Sets the verbosity of Cloud Firestore logs (debug, error, or silent).\n *\n * @param logLevel - The verbosity you set for activity and error logging. Can\n *   be any of the following values:\n *\n *   <ul>\n *     <li>`debug` for the most verbose logging level, primarily for\n *     debugging.</li>\n *     <li>`error` to log errors only.</li>\n *     <li><code>`silent` to turn off logging.</li>\n *   </ul>\n */\n\nfunction w(t) {\n  d.setLogLevel(t);\n}\n\nfunction m(t, ...e) {\n  if (d.logLevel <= LogLevel.DEBUG) {\n    const n = e.map(_);\n    d.debug(`Firestore (${f}): ${t}`, ...n);\n  }\n}\n\nfunction p(t, ...e) {\n  if (d.logLevel <= LogLevel.ERROR) {\n    const n = e.map(_);\n    d.error(`Firestore (${f}): ${t}`, ...n);\n  }\n}\n/**\n * @internal\n */\n\n\nfunction y(t, ...e) {\n  if (d.logLevel <= LogLevel.WARN) {\n    const n = e.map(_);\n    d.warn(`Firestore (${f}): ${t}`, ...n);\n  }\n}\n/**\n * Converts an additional log parameter to a string representation.\n */\n\n\nfunction _(t) {\n  if (\"string\" == typeof t) return t;\n\n  try {\n    return e = t, JSON.stringify(e);\n  } catch (e) {\n    // Converting to JSON failed, just log the object directly\n    return t;\n  }\n  /**\n  * @license\n  * Copyright 2020 Google LLC\n  *\n  * Licensed under the Apache License, Version 2.0 (the \"License\");\n  * you may not use this file except in compliance with the License.\n  * You may obtain a copy of the License at\n  *\n  *   http://www.apache.org/licenses/LICENSE-2.0\n  *\n  * Unless required by applicable law or agreed to in writing, software\n  * distributed under the License is distributed on an \"AS IS\" BASIS,\n  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  * See the License for the specific language governing permissions and\n  * limitations under the License.\n  */\n\n  /** Formats an object as a JSON string, suitable for logging. */\n\n\n  var e;\n}\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Unconditionally fails, throwing an Error with the given message.\n * Messages are stripped in production builds.\n *\n * Returns `never` and can be used in expressions:\n * @example\n * let futureVar = fail('not implemented yet');\n */\n\n\nfunction g(t = \"Unexpected state\") {\n  // Log the failure in addition to throw an exception, just in case the\n  // exception is swallowed.\n  const e = `FIRESTORE (${f}) INTERNAL ASSERTION FAILED: ` + t; // NOTE: We don't use FirestoreError here because these are internal failures\n  // that cannot be handled by the user. (Also it would create a circular\n  // dependency between the error and assert modules which doesn't work.)\n\n  throw p(e), new Error(e);\n}\n/**\n * Fails if the given assertion condition is false, throwing an Error with the\n * given message if it did.\n *\n * Messages are stripped in production builds.\n */\n\n\nfunction v(t, e) {\n  t || g();\n}\n/**\n * Casts `obj` to `T`. In non-production builds, verifies that `obj` is an\n * instance of `T` before casting.\n */\n\n\nfunction b(t, // eslint-disable-next-line @typescript-eslint/no-explicit-any\ne) {\n  return t;\n}\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\nconst E = \"ok\",\n      T = \"cancelled\",\n      I = \"unknown\",\n      A = \"invalid-argument\",\n      R = \"deadline-exceeded\",\n      P = \"not-found\",\n      V = \"already-exists\",\n      D = \"permission-denied\",\n      N = \"unauthenticated\",\n      $ = \"resource-exhausted\",\n      S = \"failed-precondition\",\n      F = \"aborted\",\n      x = \"out-of-range\",\n      q = \"unimplemented\",\n      O = \"internal\",\n      C = \"unavailable\",\n      L = \"data-loss\";\n/** An error returned by a Firestore operation. */\n\nclass U extends FirebaseError {\n  /** @hideconstructor */\n  constructor(\n  /**\n   * The backend error code associated with this error.\n   */\n  t,\n  /**\n   * A custom error description.\n   */\n  e) {\n    super(t, e), this.code = t, this.message = e, // HACK: We write a toString property directly because Error is not a real\n    // class and so inheritance does not work correctly. We could alternatively\n    // do the same \"back-door inheritance\" trick that FirebaseError does.\n    this.toString = () => `${this.name}: [code=${this.code}]: ${this.message}`;\n  }\n\n}\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\nclass k {\n  constructor() {\n    this.promise = new Promise((t, e) => {\n      this.resolve = t, this.reject = e;\n    });\n  }\n\n}\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\nclass j {\n  constructor(t, e) {\n    this.user = e, this.type = \"OAuth\", this.headers = new Map(), this.headers.set(\"Authorization\", `Bearer ${t}`);\n  }\n\n}\n/**\n * A CredentialsProvider that always yields an empty token.\n * @internal\n */\n\n\nclass M {\n  getToken() {\n    return Promise.resolve(null);\n  }\n\n  invalidateToken() {}\n\n  start(t, e) {\n    // Fire with initial user.\n    t.enqueueRetryable(() => e(l.UNAUTHENTICATED));\n  }\n\n  shutdown() {}\n\n}\n/**\n * A CredentialsProvider that always returns a constant token. Used for\n * emulator token mocking.\n */\n\n\nclass B {\n  constructor(t) {\n    this.token = t,\n    /**\n     * Stores the listener registered with setChangeListener()\n     * This isn't actually necessary since the UID never changes, but we use this\n     * to verify the listen contract is adhered to in tests.\n     */\n    this.changeListener = null;\n  }\n\n  getToken() {\n    return Promise.resolve(this.token);\n  }\n\n  invalidateToken() {}\n\n  start(t, e) {\n    this.changeListener = e, // Fire with initial user.\n    t.enqueueRetryable(() => e(this.token.user));\n  }\n\n  shutdown() {\n    this.changeListener = null;\n  }\n\n}\n/** Credential provider for the Lite SDK. */\n\n\nclass z {\n  constructor(t) {\n    this.auth = null, t.onInit(t => {\n      this.auth = t;\n    });\n  }\n\n  getToken() {\n    return this.auth ? this.auth.getToken().then(t => t ? (v(\"string\" == typeof t.accessToken), new j(t.accessToken, new l(this.auth.getUid()))) : null) : Promise.resolve(null);\n  }\n\n  invalidateToken() {}\n\n  start(t, e) {}\n\n  shutdown() {}\n\n}\n/*\n * FirstPartyToken provides a fresh token each time its value\n * is requested, because if the token is too old, requests will be rejected.\n * Technically this may no longer be necessary since the SDK should gracefully\n * recover from unauthenticated errors (see b/33147818 for context), but it's\n * safer to keep the implementation as-is.\n */\n\n\nclass G {\n  constructor(t, e, n) {\n    this.type = \"FirstParty\", this.user = l.FIRST_PARTY, this.headers = new Map(), this.headers.set(\"X-Goog-AuthUser\", e);\n    const r = t.auth.getAuthHeaderValueForFirstParty([]);\n    r && this.headers.set(\"Authorization\", r), n && this.headers.set(\"X-Goog-Iam-Authorization-Token\", n);\n  }\n\n}\n/*\n * Provides user credentials required for the Firestore JavaScript SDK\n * to authenticate the user, using technique that is only available\n * to applications hosted by Google.\n */\n\n\nclass Q {\n  constructor(t, e, n) {\n    this.t = t, this.i = e, this.o = n;\n  }\n\n  getToken() {\n    return Promise.resolve(new G(this.t, this.i, this.o));\n  }\n\n  start(t, e) {\n    // Fire with initial uid.\n    t.enqueueRetryable(() => e(l.FIRST_PARTY));\n  }\n\n  shutdown() {}\n\n  invalidateToken() {}\n\n}\n\nclass W {\n  constructor(t) {\n    this.value = t, this.type = \"AppCheck\", this.headers = new Map(), t && t.length > 0 && this.headers.set(\"x-firebase-appcheck\", this.value);\n  }\n\n}\n/** AppCheck token provider for the Lite SDK. */\n\n\nclass Y {\n  constructor(t) {\n    this.u = t, this.appCheck = null, t.onInit(t => {\n      this.appCheck = t;\n    });\n  }\n\n  getToken() {\n    return this.appCheck ? this.appCheck.getToken().then(t => t ? (v(\"string\" == typeof t.token), new W(t.token)) : null) : Promise.resolve(null);\n  }\n\n  invalidateToken() {}\n\n  start(t, e) {}\n\n  shutdown() {}\n\n}\n/**\n * Builds a CredentialsProvider depending on the type of\n * the credentials passed in.\n */\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\nclass H {\n  /**\n   * Constructs a DatabaseInfo using the provided host, databaseId and\n   * persistenceKey.\n   *\n   * @param databaseId - The database to use.\n   * @param appId - The Firebase App Id.\n   * @param persistenceKey - A unique identifier for this Firestore's local\n   * storage (used in conjunction with the databaseId).\n   * @param host - The Firestore backend host to connect to.\n   * @param ssl - Whether to use SSL when connecting.\n   * @param forceLongPolling - Whether to use the forceLongPolling option\n   * when using WebChannel as the network transport.\n   * @param autoDetectLongPolling - Whether to use the detectBufferingProxy\n   * option when using WebChannel as the network transport.\n   * @param useFetchStreams Whether to use the Fetch API instead of\n   * XMLHTTPRequest\n   */\n  constructor(t, e, n, r, s, i, o, u) {\n    this.databaseId = t, this.appId = e, this.persistenceKey = n, this.host = r, this.ssl = s, this.forceLongPolling = i, this.autoDetectLongPolling = o, this.useFetchStreams = u;\n  }\n\n}\n/** The default database name for a project. */\n\n/**\n * Represents the database ID a Firestore client is associated with.\n * @internal\n */\n\n\nclass K {\n  constructor(t, e) {\n    this.projectId = t, this.database = e || \"(default)\";\n  }\n\n  static empty() {\n    return new K(\"\", \"\");\n  }\n\n  get isDefaultDatabase() {\n    return \"(default)\" === this.database;\n  }\n\n  isEqual(t) {\n    return t instanceof K && t.projectId === this.projectId && t.database === this.database;\n  }\n\n}\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Path represents an ordered sequence of string segments.\n */\n\n\nclass J {\n  constructor(t, e, n) {\n    void 0 === e ? e = 0 : e > t.length && g(), void 0 === n ? n = t.length - e : n > t.length - e && g(), this.segments = t, this.offset = e, this.len = n;\n  }\n\n  get length() {\n    return this.len;\n  }\n\n  isEqual(t) {\n    return 0 === J.comparator(this, t);\n  }\n\n  child(t) {\n    const e = this.segments.slice(this.offset, this.limit());\n    return t instanceof J ? t.forEach(t => {\n      e.push(t);\n    }) : e.push(t), this.construct(e);\n  }\n  /** The index of one past the last segment of the path. */\n\n\n  limit() {\n    return this.offset + this.length;\n  }\n\n  popFirst(t) {\n    return t = void 0 === t ? 1 : t, this.construct(this.segments, this.offset + t, this.length - t);\n  }\n\n  popLast() {\n    return this.construct(this.segments, this.offset, this.length - 1);\n  }\n\n  firstSegment() {\n    return this.segments[this.offset];\n  }\n\n  lastSegment() {\n    return this.get(this.length - 1);\n  }\n\n  get(t) {\n    return this.segments[this.offset + t];\n  }\n\n  isEmpty() {\n    return 0 === this.length;\n  }\n\n  isPrefixOf(t) {\n    if (t.length < this.length) return !1;\n\n    for (let e = 0; e < this.length; e++) if (this.get(e) !== t.get(e)) return !1;\n\n    return !0;\n  }\n\n  isImmediateParentOf(t) {\n    if (this.length + 1 !== t.length) return !1;\n\n    for (let e = 0; e < this.length; e++) if (this.get(e) !== t.get(e)) return !1;\n\n    return !0;\n  }\n\n  forEach(t) {\n    for (let e = this.offset, n = this.limit(); e < n; e++) t(this.segments[e]);\n  }\n\n  toArray() {\n    return this.segments.slice(this.offset, this.limit());\n  }\n\n  static comparator(t, e) {\n    const n = Math.min(t.length, e.length);\n\n    for (let r = 0; r < n; r++) {\n      const n = t.get(r),\n            s = e.get(r);\n      if (n < s) return -1;\n      if (n > s) return 1;\n    }\n\n    return t.length < e.length ? -1 : t.length > e.length ? 1 : 0;\n  }\n\n}\n/**\n * A slash-separated path for navigating resources (documents and collections)\n * within Firestore.\n *\n * @internal\n */\n\n\nclass X extends J {\n  construct(t, e, n) {\n    return new X(t, e, n);\n  }\n\n  canonicalString() {\n    // NOTE: The client is ignorant of any path segments containing escape\n    // sequences (e.g. __id123__) and just passes them through raw (they exist\n    // for legacy reasons and should not be used frequently).\n    return this.toArray().join(\"/\");\n  }\n\n  toString() {\n    return this.canonicalString();\n  }\n  /**\n   * Creates a resource path from the given slash-delimited string. If multiple\n   * arguments are provided, all components are combined. Leading and trailing\n   * slashes from all components are ignored.\n   */\n\n\n  static fromString(...t) {\n    // NOTE: The client is ignorant of any path segments containing escape\n    // sequences (e.g. __id123__) and just passes them through raw (they exist\n    // for legacy reasons and should not be used frequently).\n    const e = [];\n\n    for (const n of t) {\n      if (n.indexOf(\"//\") >= 0) throw new U(A, `Invalid segment (${n}). Paths must not contain // in them.`); // Strip leading and traling slashed.\n\n      e.push(...n.split(\"/\").filter(t => t.length > 0));\n    }\n\n    return new X(e);\n  }\n\n  static emptyPath() {\n    return new X([]);\n  }\n\n}\n\nconst Z = /^[_a-zA-Z][_a-zA-Z0-9]*$/;\n/**\n * A dot-separated path for navigating sub-objects within a document.\n * @internal\n */\n\nclass tt extends J {\n  construct(t, e, n) {\n    return new tt(t, e, n);\n  }\n  /**\n   * Returns true if the string could be used as a segment in a field path\n   * without escaping.\n   */\n\n\n  static isValidIdentifier(t) {\n    return Z.test(t);\n  }\n\n  canonicalString() {\n    return this.toArray().map(t => (t = t.replace(/\\\\/g, \"\\\\\\\\\").replace(/`/g, \"\\\\`\"), tt.isValidIdentifier(t) || (t = \"`\" + t + \"`\"), t)).join(\".\");\n  }\n\n  toString() {\n    return this.canonicalString();\n  }\n  /**\n   * Returns true if this field references the key of a document.\n   */\n\n\n  isKeyField() {\n    return 1 === this.length && \"__name__\" === this.get(0);\n  }\n  /**\n   * The field designating the key of a document.\n   */\n\n\n  static keyField() {\n    return new tt([\"__name__\"]);\n  }\n  /**\n   * Parses a field string from the given server-formatted string.\n   *\n   * - Splitting the empty string is not allowed (for now at least).\n   * - Empty segments within the string (e.g. if there are two consecutive\n   *   separators) are not allowed.\n   *\n   * TODO(b/37244157): we should make this more strict. Right now, it allows\n   * non-identifier path components, even if they aren't escaped.\n   */\n\n\n  static fromServerFormat(t) {\n    const e = [];\n    let n = \"\",\n        r = 0;\n\n    const s = () => {\n      if (0 === n.length) throw new U(A, `Invalid field path (${t}). Paths must not be empty, begin with '.', end with '.', or contain '..'`);\n      e.push(n), n = \"\";\n    };\n\n    let i = !1;\n\n    for (; r < t.length;) {\n      const e = t[r];\n\n      if (\"\\\\\" === e) {\n        if (r + 1 === t.length) throw new U(A, \"Path has trailing escape character: \" + t);\n        const e = t[r + 1];\n        if (\"\\\\\" !== e && \".\" !== e && \"`\" !== e) throw new U(A, \"Path has invalid escape sequence: \" + t);\n        n += e, r += 2;\n      } else \"`\" === e ? (i = !i, r++) : \".\" !== e || i ? (n += e, r++) : (s(), r++);\n    }\n\n    if (s(), i) throw new U(A, \"Unterminated ` in path: \" + t);\n    return new tt(e);\n  }\n\n  static emptyPath() {\n    return new tt([]);\n  }\n\n}\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @internal\n */\n\n\nclass et {\n  constructor(t) {\n    this.path = t;\n  }\n\n  static fromPath(t) {\n    return new et(X.fromString(t));\n  }\n\n  static fromName(t) {\n    return new et(X.fromString(t).popFirst(5));\n  }\n\n  static empty() {\n    return new et(X.emptyPath());\n  }\n\n  get collectionGroup() {\n    return this.path.popLast().lastSegment();\n  }\n  /** Returns true if the document is in the specified collectionId. */\n\n\n  hasCollectionId(t) {\n    return this.path.length >= 2 && this.path.get(this.path.length - 2) === t;\n  }\n  /** Returns the collection group (i.e. the name of the parent collection) for this key. */\n\n\n  getCollectionGroup() {\n    return this.path.get(this.path.length - 2);\n  }\n  /** Returns the fully qualified path to the parent collection. */\n\n\n  getCollectionPath() {\n    return this.path.popLast();\n  }\n\n  isEqual(t) {\n    return null !== t && 0 === X.comparator(this.path, t.path);\n  }\n\n  toString() {\n    return this.path.toString();\n  }\n\n  static comparator(t, e) {\n    return X.comparator(t.path, e.path);\n  }\n\n  static isDocumentKey(t) {\n    return t.length % 2 == 0;\n  }\n  /**\n   * Creates and returns a new document key with the given segments.\n   *\n   * @param segments - The segments of the path to the document\n   * @returns A new instance of DocumentKey\n   */\n\n\n  static fromSegments(t) {\n    return new et(new X(t.slice()));\n  }\n\n}\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\nfunction nt(t, e, n) {\n  if (!n) throw new U(A, `Function ${t}() cannot be called with an empty ${e}.`);\n}\n/**\n * Validates that two boolean options are not set at the same time.\n * @internal\n */\n\n/**\n * Validates that `path` refers to a document (indicated by the fact it contains\n * an even numbers of segments).\n */\n\n\nfunction rt(t) {\n  if (!et.isDocumentKey(t)) throw new U(A, `Invalid document reference. Document references must have an even number of segments, but ${t} has ${t.length}.`);\n}\n/**\n * Validates that `path` refers to a collection (indicated by the fact it\n * contains an odd numbers of segments).\n */\n\n\nfunction st(t) {\n  if (et.isDocumentKey(t)) throw new U(A, `Invalid collection reference. Collection references must have an odd number of segments, but ${t} has ${t.length}.`);\n}\n/**\n * Returns true if it's a non-null object without a custom prototype\n * (i.e. excludes Array, Date, etc.).\n */\n\n/** Returns a string describing the type / value of the provided input. */\n\n\nfunction it(t) {\n  if (void 0 === t) return \"undefined\";\n  if (null === t) return \"null\";\n  if (\"string\" == typeof t) return t.length > 20 && (t = `${t.substring(0, 20)}...`), JSON.stringify(t);\n  if (\"number\" == typeof t || \"boolean\" == typeof t) return \"\" + t;\n\n  if (\"object\" == typeof t) {\n    if (t instanceof Array) return \"an array\";\n    {\n      const e =\n      /** try to get the constructor name for an object. */\n      function (t) {\n        if (t.constructor) return t.constructor.name;\n        return null;\n      }\n      /**\n      * Casts `obj` to `T`, optionally unwrapping Compat types to expose the\n      * underlying instance. Throws if  `obj` is not an instance of `T`.\n      *\n      * This cast is used in the Lite and Full SDK to verify instance types for\n      * arguments passed to the public API.\n      * @internal\n      */\n      (t);\n\n      return e ? `a custom ${e} object` : \"an object\";\n    }\n  }\n\n  return \"function\" == typeof t ? \"a function\" : g();\n}\n\nfunction ot(t, // eslint-disable-next-line @typescript-eslint/no-explicit-any\ne) {\n  if (\"_delegate\" in t && ( // Unwrap Compat types\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  t = t._delegate), !(t instanceof e)) {\n    if (e.name === t.constructor.name) throw new U(A, \"Type does not match the expected instance. Did you pass a reference from a different Firestore SDK?\");\n    {\n      const n = it(t);\n      throw new U(A, `Expected type '${e.name}', but it was: ${n}`);\n    }\n  }\n\n  return t;\n}\n\nfunction ut(t, e) {\n  if (e <= 0) throw new U(A, `Function ${t}() requires a positive number, but it was: ${e}.`);\n}\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Returns whether a variable is either undefined or null.\n */\n\n\nfunction ct(t) {\n  return null == t;\n}\n/** Returns whether the value represents -0. */\n\n\nfunction at(t) {\n  // Detect if the value is -0.0. Based on polyfill from\n  // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/is\n  return 0 === t && 1 / t == -1 / 0;\n}\n/**\n * Returns whether a value is an integer and in the safe integer range\n * @param value - The value to test for being an integer and in the safe range\n */\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\nconst ht = {\n  BatchGetDocuments: \"batchGet\",\n  Commit: \"commit\",\n  RunQuery: \"runQuery\"\n};\n/**\n * Maps RPC names to the corresponding REST endpoint name.\n *\n * We use array notation to avoid mangling.\n */\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Error Codes describing the different ways GRPC can fail. These are copied\n * directly from GRPC's sources here:\n *\n * https://github.com/grpc/grpc/blob/bceec94ea4fc5f0085d81235d8e1c06798dc341a/include/grpc%2B%2B/impl/codegen/status_code_enum.h\n *\n * Important! The names of these identifiers matter because the string forms\n * are used for reverse lookups from the webchannel stream. Do NOT change the\n * names of these identifiers or change this into a const enum.\n */\n\nvar lt, ft;\n/**\n * Converts an HTTP Status Code to the equivalent error code.\n *\n * @param status - An HTTP Status Code, like 200, 404, 503, etc.\n * @returns The equivalent Code. Unknown status codes are mapped to\n *     Code.UNKNOWN.\n */\n\nfunction dt(t) {\n  if (void 0 === t) return p(\"RPC_ERROR\", \"HTTP error has no status\"), I; // The canonical error codes for Google APIs [1] specify mapping onto HTTP\n  // status codes but the mapping is not bijective. In each case of ambiguity\n  // this function chooses a primary error.\n  // [1]\n  // https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto\n\n  switch (t) {\n    case 200:\n      // OK\n      return E;\n\n    case 400:\n      // Bad Request\n      return S;\n    // Other possibilities based on the forward mapping\n    // return Code.INVALID_ARGUMENT;\n    // return Code.OUT_OF_RANGE;\n\n    case 401:\n      // Unauthorized\n      return N;\n\n    case 403:\n      // Forbidden\n      return D;\n\n    case 404:\n      // Not Found\n      return P;\n\n    case 409:\n      // Conflict\n      return F;\n    // Other possibilities:\n    // return Code.ALREADY_EXISTS;\n\n    case 416:\n      // Range Not Satisfiable\n      return x;\n\n    case 429:\n      // Too Many Requests\n      return $;\n\n    case 499:\n      // Client Closed Request\n      return T;\n\n    case 500:\n      // Internal Server Error\n      return I;\n    // Other possibilities:\n    // return Code.INTERNAL;\n    // return Code.DATA_LOSS;\n\n    case 501:\n      // Unimplemented\n      return q;\n\n    case 503:\n      // Service Unavailable\n      return C;\n\n    case 504:\n      // Gateway Timeout\n      return R;\n\n    default:\n      return t >= 200 && t < 300 ? E : t >= 400 && t < 500 ? S : t >= 500 && t < 600 ? O : I;\n  }\n}\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * A Rest-based connection that relies on the native HTTP stack\n * (e.g. `fetch` or a polyfill).\n */\n\n\n(ft = lt || (lt = {}))[ft.OK = 0] = \"OK\", ft[ft.CANCELLED = 1] = \"CANCELLED\", ft[ft.UNKNOWN = 2] = \"UNKNOWN\", ft[ft.INVALID_ARGUMENT = 3] = \"INVALID_ARGUMENT\", ft[ft.DEADLINE_EXCEEDED = 4] = \"DEADLINE_EXCEEDED\", ft[ft.NOT_FOUND = 5] = \"NOT_FOUND\", ft[ft.ALREADY_EXISTS = 6] = \"ALREADY_EXISTS\", ft[ft.PERMISSION_DENIED = 7] = \"PERMISSION_DENIED\", ft[ft.UNAUTHENTICATED = 16] = \"UNAUTHENTICATED\", ft[ft.RESOURCE_EXHAUSTED = 8] = \"RESOURCE_EXHAUSTED\", ft[ft.FAILED_PRECONDITION = 9] = \"FAILED_PRECONDITION\", ft[ft.ABORTED = 10] = \"ABORTED\", ft[ft.OUT_OF_RANGE = 11] = \"OUT_OF_RANGE\", ft[ft.UNIMPLEMENTED = 12] = \"UNIMPLEMENTED\", ft[ft.INTERNAL = 13] = \"INTERNAL\", ft[ft.UNAVAILABLE = 14] = \"UNAVAILABLE\", ft[ft.DATA_LOSS = 15] = \"DATA_LOSS\";\n\nclass wt extends\n/**\n * Base class for all Rest-based connections to the backend (WebChannel and\n * HTTP).\n */\nclass {\n  constructor(t) {\n    this.databaseInfo = t, this.databaseId = t.databaseId;\n    const e = t.ssl ? \"https\" : \"http\";\n    this.h = e + \"://\" + t.host, this.l = \"projects/\" + this.databaseId.projectId + \"/databases/\" + this.databaseId.database + \"/documents\";\n  }\n\n  m(t, e, n, r, s) {\n    const i = this.p(t, e);\n    m(\"RestConnection\", \"Sending: \", i, n);\n    const o = {};\n    return this.g(o, r, s), this.v(t, i, o, n).then(t => (m(\"RestConnection\", \"Received: \", t), t), e => {\n      throw y(\"RestConnection\", `${t} failed with error: `, e, \"url: \", i, \"request:\", n), e;\n    });\n  }\n\n  T(t, e, n, r, s) {\n    // The REST API automatically aggregates all of the streamed results, so we\n    // can just use the normal invoke() method.\n    return this.m(t, e, n, r, s);\n  }\n  /**\n   * Modifies the headers for a request, adding any authorization token if\n   * present and any additional headers for the request.\n   */\n\n\n  g(t, e, n) {\n    t[\"X-Goog-Api-Client\"] = \"gl-js/ fire/\" + f, // Content-Type: text/plain will avoid preflight requests which might\n    // mess with CORS and redirects by proxies. If we add custom headers\n    // we will need to change this code to potentially use the $httpOverwrite\n    // parameter supported by ESF to avoid triggering preflight requests.\n    t[\"Content-Type\"] = \"text/plain\", this.databaseInfo.appId && (t[\"X-Firebase-GMPID\"] = this.databaseInfo.appId), e && e.headers.forEach((e, n) => t[n] = e), n && n.headers.forEach((e, n) => t[n] = e);\n  }\n\n  p(t, e) {\n    const n = ht[t];\n    return `${this.h}/v1/${e}:${n}`;\n  }\n\n} {\n  /**\n   * @param databaseInfo - The connection info.\n   * @param fetchImpl - `fetch` or a Polyfill that implements the fetch API.\n   */\n  constructor(t, e) {\n    super(t), this.I = e;\n  }\n\n  A(t, e) {\n    throw new Error(\"Not supported by FetchConnection\");\n  }\n\n  v(t, e, n, r) {\n    var _this = this;\n\n    return _asyncToGenerator(function* () {\n      const s = JSON.stringify(r);\n      let i;\n\n      try {\n        i = yield _this.I(e, {\n          method: \"POST\",\n          headers: n,\n          body: s\n        });\n      } catch (t) {\n        throw new U(dt(t.status), \"Request failed with error: \" + t.statusText);\n      }\n\n      if (!i.ok) throw new U(dt(i.status), \"Request failed with error: \" + i.statusText);\n      return i.json();\n    })();\n  }\n\n}\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/** Initializes the HTTP connection for the REST API. */\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Generates `nBytes` of random bytes.\n *\n * If `nBytes < 0` , an error will be thrown.\n */\n\n\nfunction mt(t) {\n  // Polyfills for IE and WebWorker by using `self` and `msCrypto` when `crypto` is not available.\n  const e = // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  \"undefined\" != typeof self && (self.crypto || self.msCrypto),\n        n = new Uint8Array(t);\n  if (e && \"function\" == typeof e.getRandomValues) e.getRandomValues(n);else // Falls back to Math.random\n    for (let e = 0; e < t; e++) n[e] = Math.floor(256 * Math.random());\n  return n;\n}\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\nclass pt {\n  static R() {\n    // Alphanumeric characters\n    const t = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\",\n          e = Math.floor(256 / t.length) * t.length; // The largest byte value that is a multiple of `char.length`.\n\n    let n = \"\";\n\n    for (; n.length < 20;) {\n      const r = mt(40);\n\n      for (let s = 0; s < r.length; ++s) // Only accept values that are [0, maxMultiple), this ensures they can\n      // be evenly mapped to indices of `chars` via a modulo operation.\n      n.length < 20 && r[s] < e && (n += t.charAt(r[s] % t.length));\n    }\n\n    return n;\n  }\n\n}\n\nfunction yt(t, e) {\n  return t < e ? -1 : t > e ? 1 : 0;\n}\n/** Helper to compare arrays using isEqual(). */\n\n\nfunction _t(t, e, n) {\n  return t.length === e.length && t.every((t, r) => n(t, e[r]));\n}\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n// The earliest date supported by Firestore timestamps (0001-01-01T00:00:00Z).\n\n/**\n * A `Timestamp` represents a point in time independent of any time zone or\n * calendar, represented as seconds and fractions of seconds at nanosecond\n * resolution in UTC Epoch time.\n *\n * It is encoded using the Proleptic Gregorian Calendar which extends the\n * Gregorian calendar backwards to year one. It is encoded assuming all minutes\n * are 60 seconds long, i.e. leap seconds are \"smeared\" so that no leap second\n * table is needed for interpretation. Range is from 0001-01-01T00:00:00Z to\n * 9999-12-31T23:59:59.999999999Z.\n *\n * For examples and further specifications, refer to the\n * {@link https://github.com/google/protobuf/blob/master/src/google/protobuf/timestamp.proto | Timestamp definition}.\n */\n\n\nclass gt {\n  /**\n   * Creates a new timestamp.\n   *\n   * @param seconds - The number of seconds of UTC time since Unix epoch\n   *     1970-01-01T00:00:00Z. Must be from 0001-01-01T00:00:00Z to\n   *     9999-12-31T23:59:59Z inclusive.\n   * @param nanoseconds - The non-negative fractions of a second at nanosecond\n   *     resolution. Negative second values with fractions must still have\n   *     non-negative nanoseconds values that count forward in time. Must be\n   *     from 0 to 999,999,999 inclusive.\n   */\n  constructor(\n  /**\n   * The number of seconds of UTC time since Unix epoch 1970-01-01T00:00:00Z.\n   */\n  t,\n  /**\n   * The fractions of a second at nanosecond resolution.*\n   */\n  e) {\n    if (this.seconds = t, this.nanoseconds = e, e < 0) throw new U(A, \"Timestamp nanoseconds out of range: \" + e);\n    if (e >= 1e9) throw new U(A, \"Timestamp nanoseconds out of range: \" + e);\n    if (t < -62135596800) throw new U(A, \"Timestamp seconds out of range: \" + t); // This will break in the year 10,000.\n\n    if (t >= 253402300800) throw new U(A, \"Timestamp seconds out of range: \" + t);\n  }\n  /**\n   * Creates a new timestamp with the current date, with millisecond precision.\n   *\n   * @returns a new timestamp representing the current date.\n   */\n\n\n  static now() {\n    return gt.fromMillis(Date.now());\n  }\n  /**\n   * Creates a new timestamp from the given date.\n   *\n   * @param date - The date to initialize the `Timestamp` from.\n   * @returns A new `Timestamp` representing the same point in time as the given\n   *     date.\n   */\n\n\n  static fromDate(t) {\n    return gt.fromMillis(t.getTime());\n  }\n  /**\n   * Creates a new timestamp from the given number of milliseconds.\n   *\n   * @param milliseconds - Number of milliseconds since Unix epoch\n   *     1970-01-01T00:00:00Z.\n   * @returns A new `Timestamp` representing the same point in time as the given\n   *     number of milliseconds.\n   */\n\n\n  static fromMillis(t) {\n    const e = Math.floor(t / 1e3),\n          n = Math.floor(1e6 * (t - 1e3 * e));\n    return new gt(e, n);\n  }\n  /**\n   * Converts a `Timestamp` to a JavaScript `Date` object. This conversion\n   * causes a loss of precision since `Date` objects only support millisecond\n   * precision.\n   *\n   * @returns JavaScript `Date` object representing the same point in time as\n   *     this `Timestamp`, with millisecond precision.\n   */\n\n\n  toDate() {\n    return new Date(this.toMillis());\n  }\n  /**\n   * Converts a `Timestamp` to a numeric timestamp (in milliseconds since\n   * epoch). This operation causes a loss of precision.\n   *\n   * @returns The point in time corresponding to this timestamp, represented as\n   *     the number of milliseconds since Unix epoch 1970-01-01T00:00:00Z.\n   */\n\n\n  toMillis() {\n    return 1e3 * this.seconds + this.nanoseconds / 1e6;\n  }\n\n  _compareTo(t) {\n    return this.seconds === t.seconds ? yt(this.nanoseconds, t.nanoseconds) : yt(this.seconds, t.seconds);\n  }\n  /**\n   * Returns true if this `Timestamp` is equal to the provided one.\n   *\n   * @param other - The `Timestamp` to compare against.\n   * @returns true if this `Timestamp` is equal to the provided one.\n   */\n\n\n  isEqual(t) {\n    return t.seconds === this.seconds && t.nanoseconds === this.nanoseconds;\n  }\n  /** Returns a textual representation of this `Timestamp`. */\n\n\n  toString() {\n    return \"Timestamp(seconds=\" + this.seconds + \", nanoseconds=\" + this.nanoseconds + \")\";\n  }\n  /** Returns a JSON-serializable representation of this `Timestamp`. */\n\n\n  toJSON() {\n    return {\n      seconds: this.seconds,\n      nanoseconds: this.nanoseconds\n    };\n  }\n  /**\n   * Converts this object to a primitive string, which allows `Timestamp` objects\n   * to be compared using the `>`, `<=`, `>=` and `>` operators.\n   */\n\n\n  valueOf() {\n    // This method returns a string of the form <seconds>.<nanoseconds> where\n    // <seconds> is translated to have a non-negative value and both <seconds>\n    // and <nanoseconds> are left-padded with zeroes to be a consistent length.\n    // Strings with this format then have a lexiographical ordering that matches\n    // the expected ordering. The <seconds> translation is done to avoid having\n    // a leading negative sign (i.e. a leading '-' character) in its string\n    // representation, which would affect its lexiographical ordering.\n    const t = this.seconds - -62135596800; // Note: Up to 12 decimal digits are required to represent all valid\n    // 'seconds' values.\n\n    return String(t).padStart(12, \"0\") + \".\" + String(this.nanoseconds).padStart(9, \"0\");\n  }\n\n}\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * A version of a document in Firestore. This corresponds to the version\n * timestamp, such as update_time or read_time.\n */\n\n\nclass vt {\n  constructor(t) {\n    this.timestamp = t;\n  }\n\n  static fromTimestamp(t) {\n    return new vt(t);\n  }\n\n  static min() {\n    return new vt(new gt(0, 0));\n  }\n\n  compareTo(t) {\n    return this.timestamp._compareTo(t.timestamp);\n  }\n\n  isEqual(t) {\n    return this.timestamp.isEqual(t.timestamp);\n  }\n  /** Returns a number representation of the version for use in spec tests. */\n\n\n  toMicroseconds() {\n    // Convert to microseconds.\n    return 1e6 * this.timestamp.seconds + this.timestamp.nanoseconds / 1e3;\n  }\n\n  toString() {\n    return \"SnapshotVersion(\" + this.timestamp.toString() + \")\";\n  }\n\n  toTimestamp() {\n    return this.timestamp;\n  }\n\n}\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\nfunction bt(t) {\n  let e = 0;\n\n  for (const n in t) Object.prototype.hasOwnProperty.call(t, n) && e++;\n\n  return e;\n}\n\nfunction Et(t, e) {\n  for (const n in t) Object.prototype.hasOwnProperty.call(t, n) && e(n, t[n]);\n}\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Provides a set of fields that can be used to partially patch a document.\n * FieldMask is used in conjunction with ObjectValue.\n * Examples:\n *   foo - Overwrites foo entirely with the provided value. If foo is not\n *         present in the companion ObjectValue, the field is deleted.\n *   foo.bar - Overwrites only the field bar of the object foo.\n *             If foo is not an object, foo is replaced with an object\n *             containing foo\n */\n\n\nclass Tt {\n  constructor(t) {\n    this.fields = t, // TODO(dimond): validation of FieldMask\n    // Sort the field mask to support `FieldMask.isEqual()` and assert below.\n    t.sort(tt.comparator);\n  }\n  /**\n   * Verifies that `fieldPath` is included by at least one field in this field\n   * mask.\n   *\n   * This is an O(n) operation, where `n` is the size of the field mask.\n   */\n\n\n  covers(t) {\n    for (const e of this.fields) if (e.isPrefixOf(t)) return !0;\n\n    return !1;\n  }\n\n  isEqual(t) {\n    return _t(this.fields, t.fields, (t, e) => t.isEqual(e));\n  }\n\n}\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/** Converts a Base64 encoded string to a binary string. */\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Immutable class that represents a \"proto\" byte string.\n *\n * Proto byte strings can either be Base64-encoded strings or Uint8Arrays when\n * sent on the wire. This class abstracts away this differentiation by holding\n * the proto byte string in a common class that must be converted into a string\n * before being sent as a proto.\n * @internal\n */\n\n\nclass It {\n  constructor(t) {\n    this.binaryString = t;\n  }\n\n  static fromBase64String(t) {\n    const e = atob(t);\n    return new It(e);\n  }\n\n  static fromUint8Array(t) {\n    const e =\n    /**\n    * Helper function to convert an Uint8array to a binary string.\n    */\n    function (t) {\n      let e = \"\";\n\n      for (let n = 0; n < t.length; ++n) e += String.fromCharCode(t[n]);\n\n      return e;\n    }\n    /**\n    * Helper function to convert a binary string to an Uint8Array.\n    */\n    (t);\n\n    return new It(e);\n  }\n\n  [Symbol.iterator]() {\n    let t = 0;\n    return {\n      next: () => t < this.binaryString.length ? {\n        value: this.binaryString.charCodeAt(t++),\n        done: !1\n      } : {\n        value: void 0,\n        done: !0\n      }\n    };\n  }\n\n  toBase64() {\n    return t = this.binaryString, btoa(t);\n    /** Converts a binary string to a Base64 encoded string. */\n\n    var t;\n  }\n\n  toUint8Array() {\n    return function (t) {\n      const e = new Uint8Array(t.length);\n\n      for (let n = 0; n < t.length; n++) e[n] = t.charCodeAt(n);\n\n      return e;\n    }\n    /**\n    * @license\n    * Copyright 2020 Google LLC\n    *\n    * Licensed under the Apache License, Version 2.0 (the \"License\");\n    * you may not use this file except in compliance with the License.\n    * You may obtain a copy of the License at\n    *\n    *   http://www.apache.org/licenses/LICENSE-2.0\n    *\n    * Unless required by applicable law or agreed to in writing, software\n    * distributed under the License is distributed on an \"AS IS\" BASIS,\n    * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n    * See the License for the specific language governing permissions and\n    * limitations under the License.\n    */\n    // A RegExp matching ISO 8601 UTC timestamps with optional fraction.\n    (this.binaryString);\n  }\n\n  approximateByteSize() {\n    return 2 * this.binaryString.length;\n  }\n\n  compareTo(t) {\n    return yt(this.binaryString, t.binaryString);\n  }\n\n  isEqual(t) {\n    return this.binaryString === t.binaryString;\n  }\n\n}\n\nIt.EMPTY_BYTE_STRING = new It(\"\");\nconst At = new RegExp(/^\\d{4}-\\d\\d-\\d\\dT\\d\\d:\\d\\d:\\d\\d(?:\\.(\\d+))?Z$/);\n/**\n * Converts the possible Proto values for a timestamp value into a \"seconds and\n * nanos\" representation.\n */\n\nfunction Rt(t) {\n  // The json interface (for the browser) will return an iso timestamp string,\n  // while the proto js library (for node) will return a\n  // google.protobuf.Timestamp instance.\n  if (v(!!t), \"string\" == typeof t) {\n    // The date string can have higher precision (nanos) than the Date class\n    // (millis), so we do some custom parsing here.\n    // Parse the nanos right out of the string.\n    let e = 0;\n    const n = At.exec(t);\n\n    if (v(!!n), n[1]) {\n      // Pad the fraction out to 9 digits (nanos).\n      let t = n[1];\n      t = (t + \"000000000\").substr(0, 9), e = Number(t);\n    } // Parse the date to get the seconds.\n\n\n    const r = new Date(t);\n    return {\n      seconds: Math.floor(r.getTime() / 1e3),\n      nanos: e\n    };\n  }\n\n  return {\n    seconds: Pt(t.seconds),\n    nanos: Pt(t.nanos)\n  };\n}\n/**\n * Converts the possible Proto types for numbers into a JavaScript number.\n * Returns 0 if the value is not numeric.\n */\n\n\nfunction Pt(t) {\n  // TODO(bjornick): Handle int64 greater than 53 bits.\n  return \"number\" == typeof t ? t : \"string\" == typeof t ? Number(t) : 0;\n}\n/** Converts the possible Proto types for Blobs into a ByteString. */\n\n\nfunction Vt(t) {\n  return \"string\" == typeof t ? It.fromBase64String(t) : It.fromUint8Array(t);\n}\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Represents a locally-applied ServerTimestamp.\n *\n * Server Timestamps are backed by MapValues that contain an internal field\n * `__type__` with a value of `server_timestamp`. The previous value and local\n * write time are stored in its `__previous_value__` and `__local_write_time__`\n * fields respectively.\n *\n * Notes:\n * - ServerTimestampValue instances are created as the result of applying a\n *   transform. They can only exist in the local view of a document. Therefore\n *   they do not need to be parsed or serialized.\n * - When evaluated locally (e.g. for snapshot.data()), they by default\n *   evaluate to `null`. This behavior can be configured by passing custom\n *   FieldValueOptions to value().\n * - With respect to other ServerTimestampValues, they sort by their\n *   localWriteTime.\n */\n\n\nfunction Dt(t) {\n  var e, n;\n  return \"server_timestamp\" === (null === (n = ((null === (e = null == t ? void 0 : t.mapValue) || void 0 === e ? void 0 : e.fields) || {}).__type__) || void 0 === n ? void 0 : n.stringValue);\n}\n/**\n * Returns the value of the field before this ServerTimestamp was set.\n *\n * Preserving the previous values allows the user to display the last resoled\n * value until the backend responds with the timestamp.\n */\n\n\nfunction Nt(t) {\n  const e = t.mapValue.fields.__previous_value__;\n  return Dt(e) ? Nt(e) : e;\n}\n/**\n * Returns the local time at which this timestamp was first set.\n */\n\n\nfunction $t(t) {\n  const e = Rt(t.mapValue.fields.__local_write_time__.timestampValue);\n  return new gt(e.seconds, e.nanos);\n}\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/** Extracts the backend's type order for the provided value. */\n\n\nfunction St(t) {\n  return \"nullValue\" in t ? 0\n  /* NullValue */\n  : \"booleanValue\" in t ? 1\n  /* BooleanValue */\n  : \"integerValue\" in t || \"doubleValue\" in t ? 2\n  /* NumberValue */\n  : \"timestampValue\" in t ? 3\n  /* TimestampValue */\n  : \"stringValue\" in t ? 5\n  /* StringValue */\n  : \"bytesValue\" in t ? 6\n  /* BlobValue */\n  : \"referenceValue\" in t ? 7\n  /* RefValue */\n  : \"geoPointValue\" in t ? 8\n  /* GeoPointValue */\n  : \"arrayValue\" in t ? 9\n  /* ArrayValue */\n  : \"mapValue\" in t ? Dt(t) ? 4\n  /* ServerTimestampValue */\n  : 10\n  /* ObjectValue */\n  : g();\n}\n/** Tests `left` and `right` for equality based on the backend semantics. */\n\n\nfunction Ft(t, e) {\n  if (t === e) return !0;\n  const n = St(t);\n  if (n !== St(e)) return !1;\n\n  switch (n) {\n    case 0\n    /* NullValue */\n    :\n      return !0;\n\n    case 1\n    /* BooleanValue */\n    :\n      return t.booleanValue === e.booleanValue;\n\n    case 4\n    /* ServerTimestampValue */\n    :\n      return $t(t).isEqual($t(e));\n\n    case 3\n    /* TimestampValue */\n    :\n      return function (t, e) {\n        if (\"string\" == typeof t.timestampValue && \"string\" == typeof e.timestampValue && t.timestampValue.length === e.timestampValue.length) // Use string equality for ISO 8601 timestamps\n          return t.timestampValue === e.timestampValue;\n        const n = Rt(t.timestampValue),\n              r = Rt(e.timestampValue);\n        return n.seconds === r.seconds && n.nanos === r.nanos;\n      }(t, e);\n\n    case 5\n    /* StringValue */\n    :\n      return t.stringValue === e.stringValue;\n\n    case 6\n    /* BlobValue */\n    :\n      return function (t, e) {\n        return Vt(t.bytesValue).isEqual(Vt(e.bytesValue));\n      }(t, e);\n\n    case 7\n    /* RefValue */\n    :\n      return t.referenceValue === e.referenceValue;\n\n    case 8\n    /* GeoPointValue */\n    :\n      return function (t, e) {\n        return Pt(t.geoPointValue.latitude) === Pt(e.geoPointValue.latitude) && Pt(t.geoPointValue.longitude) === Pt(e.geoPointValue.longitude);\n      }(t, e);\n\n    case 2\n    /* NumberValue */\n    :\n      return function (t, e) {\n        if (\"integerValue\" in t && \"integerValue\" in e) return Pt(t.integerValue) === Pt(e.integerValue);\n\n        if (\"doubleValue\" in t && \"doubleValue\" in e) {\n          const n = Pt(t.doubleValue),\n                r = Pt(e.doubleValue);\n          return n === r ? at(n) === at(r) : isNaN(n) && isNaN(r);\n        }\n\n        return !1;\n      }(t, e);\n\n    case 9\n    /* ArrayValue */\n    :\n      return _t(t.arrayValue.values || [], e.arrayValue.values || [], Ft);\n\n    case 10\n    /* ObjectValue */\n    :\n      return function (t, e) {\n        const n = t.mapValue.fields || {},\n              r = e.mapValue.fields || {};\n        if (bt(n) !== bt(r)) return !1;\n\n        for (const t in n) if (n.hasOwnProperty(t) && (void 0 === r[t] || !Ft(n[t], r[t]))) return !1;\n\n        return !0;\n      }\n      /** Returns true if the ArrayValue contains the specified element. */\n      (t, e);\n\n    default:\n      return g();\n  }\n}\n\nfunction xt(t, e) {\n  return void 0 !== (t.values || []).find(t => Ft(t, e));\n}\n\nfunction qt(t, e) {\n  if (t === e) return 0;\n  const n = St(t),\n        r = St(e);\n  if (n !== r) return yt(n, r);\n\n  switch (n) {\n    case 0\n    /* NullValue */\n    :\n      return 0;\n\n    case 1\n    /* BooleanValue */\n    :\n      return yt(t.booleanValue, e.booleanValue);\n\n    case 2\n    /* NumberValue */\n    :\n      return function (t, e) {\n        const n = Pt(t.integerValue || t.doubleValue),\n              r = Pt(e.integerValue || e.doubleValue);\n        return n < r ? -1 : n > r ? 1 : n === r ? 0 : // one or both are NaN.\n        isNaN(n) ? isNaN(r) ? 0 : -1 : 1;\n      }(t, e);\n\n    case 3\n    /* TimestampValue */\n    :\n      return Ot(t.timestampValue, e.timestampValue);\n\n    case 4\n    /* ServerTimestampValue */\n    :\n      return Ot($t(t), $t(e));\n\n    case 5\n    /* StringValue */\n    :\n      return yt(t.stringValue, e.stringValue);\n\n    case 6\n    /* BlobValue */\n    :\n      return function (t, e) {\n        const n = Vt(t),\n              r = Vt(e);\n        return n.compareTo(r);\n      }(t.bytesValue, e.bytesValue);\n\n    case 7\n    /* RefValue */\n    :\n      return function (t, e) {\n        const n = t.split(\"/\"),\n              r = e.split(\"/\");\n\n        for (let t = 0; t < n.length && t < r.length; t++) {\n          const e = yt(n[t], r[t]);\n          if (0 !== e) return e;\n        }\n\n        return yt(n.length, r.length);\n      }(t.referenceValue, e.referenceValue);\n\n    case 8\n    /* GeoPointValue */\n    :\n      return function (t, e) {\n        const n = yt(Pt(t.latitude), Pt(e.latitude));\n        if (0 !== n) return n;\n        return yt(Pt(t.longitude), Pt(e.longitude));\n      }(t.geoPointValue, e.geoPointValue);\n\n    case 9\n    /* ArrayValue */\n    :\n      return function (t, e) {\n        const n = t.values || [],\n              r = e.values || [];\n\n        for (let t = 0; t < n.length && t < r.length; ++t) {\n          const e = qt(n[t], r[t]);\n          if (e) return e;\n        }\n\n        return yt(n.length, r.length);\n      }(t.arrayValue, e.arrayValue);\n\n    case 10\n    /* ObjectValue */\n    :\n      return function (t, e) {\n        const n = t.fields || {},\n              r = Object.keys(n),\n              s = e.fields || {},\n              i = Object.keys(s); // Even though MapValues are likely sorted correctly based on their insertion\n        // order (e.g. when received from the backend), local modifications can bring\n        // elements out of order. We need to re-sort the elements to ensure that\n        // canonical IDs are independent of insertion order.\n\n        r.sort(), i.sort();\n\n        for (let t = 0; t < r.length && t < i.length; ++t) {\n          const e = yt(r[t], i[t]);\n          if (0 !== e) return e;\n          const o = qt(n[r[t]], s[i[t]]);\n          if (0 !== o) return o;\n        }\n\n        return yt(r.length, i.length);\n      }\n      /** Returns a reference value for the provided database and key. */\n      (t.mapValue, e.mapValue);\n\n    default:\n      throw g();\n  }\n}\n\nfunction Ot(t, e) {\n  if (\"string\" == typeof t && \"string\" == typeof e && t.length === e.length) return yt(t, e);\n  const n = Rt(t),\n        r = Rt(e),\n        s = yt(n.seconds, r.seconds);\n  return 0 !== s ? s : yt(n.nanos, r.nanos);\n}\n\nfunction Ct(t, e) {\n  return {\n    referenceValue: `projects/${t.projectId}/databases/${t.database}/documents/${e.path.canonicalString()}`\n  };\n}\n/** Returns true if `value` is an ArrayValue. */\n\n\nfunction Lt(t) {\n  return !!t && \"arrayValue\" in t;\n}\n/** Returns true if `value` is a NullValue. */\n\n\nfunction Ut(t) {\n  return !!t && \"nullValue\" in t;\n}\n/** Returns true if `value` is NaN. */\n\n\nfunction kt(t) {\n  return !!t && \"doubleValue\" in t && isNaN(Number(t.doubleValue));\n}\n/** Returns true if `value` is a MapValue. */\n\n\nfunction jt(t) {\n  return !!t && \"mapValue\" in t;\n}\n/** Creates a deep copy of `source`. */\n\n\nfunction Mt(t) {\n  if (t.geoPointValue) return {\n    geoPointValue: Object.assign({}, t.geoPointValue)\n  };\n  if (t.timestampValue && \"object\" == typeof t.timestampValue) return {\n    timestampValue: Object.assign({}, t.timestampValue)\n  };\n\n  if (t.mapValue) {\n    const e = {\n      mapValue: {\n        fields: {}\n      }\n    };\n    return Et(t.mapValue.fields, (t, n) => e.mapValue.fields[t] = Mt(n)), e;\n  }\n\n  if (t.arrayValue) {\n    const e = {\n      arrayValue: {\n        values: []\n      }\n    };\n\n    for (let n = 0; n < (t.arrayValue.values || []).length; ++n) e.arrayValue.values[n] = Mt(t.arrayValue.values[n]);\n\n    return e;\n  }\n\n  return Object.assign({}, t);\n}\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * An ObjectValue represents a MapValue in the Firestore Proto and offers the\n * ability to add and remove fields (via the ObjectValueBuilder).\n */\n\n\nclass Bt {\n  constructor(t) {\n    this.value = t;\n  }\n\n  static empty() {\n    return new Bt({\n      mapValue: {}\n    });\n  }\n  /**\n   * Returns the value at the given path or null.\n   *\n   * @param path - the path to search\n   * @returns The value at the path or null if the path is not set.\n   */\n\n\n  field(t) {\n    if (t.isEmpty()) return this.value;\n    {\n      let e = this.value;\n\n      for (let n = 0; n < t.length - 1; ++n) if (e = (e.mapValue.fields || {})[t.get(n)], !jt(e)) return null;\n\n      return e = (e.mapValue.fields || {})[t.lastSegment()], e || null;\n    }\n  }\n  /**\n   * Sets the field to the provided value.\n   *\n   * @param path - The field path to set.\n   * @param value - The value to set.\n   */\n\n\n  set(t, e) {\n    this.getFieldsMap(t.popLast())[t.lastSegment()] = Mt(e);\n  }\n  /**\n   * Sets the provided fields to the provided values.\n   *\n   * @param data - A map of fields to values (or null for deletes).\n   */\n\n\n  setAll(t) {\n    let e = tt.emptyPath(),\n        n = {},\n        r = [];\n    t.forEach((t, s) => {\n      if (!e.isImmediateParentOf(s)) {\n        // Insert the accumulated changes at this parent location\n        const t = this.getFieldsMap(e);\n        this.applyChanges(t, n, r), n = {}, r = [], e = s.popLast();\n      }\n\n      t ? n[s.lastSegment()] = Mt(t) : r.push(s.lastSegment());\n    });\n    const s = this.getFieldsMap(e);\n    this.applyChanges(s, n, r);\n  }\n  /**\n   * Removes the field at the specified path. If there is no field at the\n   * specified path, nothing is changed.\n   *\n   * @param path - The field path to remove.\n   */\n\n\n  delete(t) {\n    const e = this.field(t.popLast());\n    jt(e) && e.mapValue.fields && delete e.mapValue.fields[t.lastSegment()];\n  }\n\n  isEqual(t) {\n    return Ft(this.value, t.value);\n  }\n  /**\n   * Returns the map that contains the leaf element of `path`. If the parent\n   * entry does not yet exist, or if it is not a map, a new map will be created.\n   */\n\n\n  getFieldsMap(t) {\n    let e = this.value;\n    e.mapValue.fields || (e.mapValue = {\n      fields: {}\n    });\n\n    for (let n = 0; n < t.length; ++n) {\n      let r = e.mapValue.fields[t.get(n)];\n      jt(r) && r.mapValue.fields || (r = {\n        mapValue: {\n          fields: {}\n        }\n      }, e.mapValue.fields[t.get(n)] = r), e = r;\n    }\n\n    return e.mapValue.fields;\n  }\n  /**\n   * Modifies `fieldsMap` by adding, replacing or deleting the specified\n   * entries.\n   */\n\n\n  applyChanges(t, e, n) {\n    Et(e, (e, n) => t[e] = n);\n\n    for (const e of n) delete t[e];\n  }\n\n  clone() {\n    return new Bt(Mt(this.value));\n  }\n\n}\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Represents a document in Firestore with a key, version, data and whether it\n * has local mutations applied to it.\n *\n * Documents can transition between states via `convertToFoundDocument()`,\n * `convertToNoDocument()` and `convertToUnknownDocument()`. If a document does\n * not transition to one of these states even after all mutations have been\n * applied, `isValidDocument()` returns false and the document should be removed\n * from all views.\n */\n\n\nclass zt {\n  constructor(t, e, n, r, s, i) {\n    this.key = t, this.documentType = e, this.version = n, this.readTime = r, this.data = s, this.documentState = i;\n  }\n  /**\n   * Creates a document with no known version or data, but which can serve as\n   * base document for mutations.\n   */\n\n\n  static newInvalidDocument(t) {\n    return new zt(t, 0\n    /* INVALID */\n    , vt.min(), vt.min(), Bt.empty(), 0\n    /* SYNCED */\n    );\n  }\n  /**\n   * Creates a new document that is known to exist with the given data at the\n   * given version.\n   */\n\n\n  static newFoundDocument(t, e, n) {\n    return new zt(t, 1\n    /* FOUND_DOCUMENT */\n    , e, vt.min(), n, 0\n    /* SYNCED */\n    );\n  }\n  /** Creates a new document that is known to not exist at the given version. */\n\n\n  static newNoDocument(t, e) {\n    return new zt(t, 2\n    /* NO_DOCUMENT */\n    , e, vt.min(), Bt.empty(), 0\n    /* SYNCED */\n    );\n  }\n  /**\n   * Creates a new document that is known to exist at the given version but\n   * whose data is not known (e.g. a document that was updated without a known\n   * base document).\n   */\n\n\n  static newUnknownDocument(t, e) {\n    return new zt(t, 3\n    /* UNKNOWN_DOCUMENT */\n    , e, vt.min(), Bt.empty(), 2\n    /* HAS_COMMITTED_MUTATIONS */\n    );\n  }\n  /**\n   * Changes the document type to indicate that it exists and that its version\n   * and data are known.\n   */\n\n\n  convertToFoundDocument(t, e) {\n    return this.version = t, this.documentType = 1\n    /* FOUND_DOCUMENT */\n    , this.data = e, this.documentState = 0\n    /* SYNCED */\n    , this;\n  }\n  /**\n   * Changes the document type to indicate that it doesn't exist at the given\n   * version.\n   */\n\n\n  convertToNoDocument(t) {\n    return this.version = t, this.documentType = 2\n    /* NO_DOCUMENT */\n    , this.data = Bt.empty(), this.documentState = 0\n    /* SYNCED */\n    , this;\n  }\n  /**\n   * Changes the document type to indicate that it exists at a given version but\n   * that its data is not known (e.g. a document that was updated without a known\n   * base document).\n   */\n\n\n  convertToUnknownDocument(t) {\n    return this.version = t, this.documentType = 3\n    /* UNKNOWN_DOCUMENT */\n    , this.data = Bt.empty(), this.documentState = 2\n    /* HAS_COMMITTED_MUTATIONS */\n    , this;\n  }\n\n  setHasCommittedMutations() {\n    return this.documentState = 2\n    /* HAS_COMMITTED_MUTATIONS */\n    , this;\n  }\n\n  setHasLocalMutations() {\n    return this.documentState = 1\n    /* HAS_LOCAL_MUTATIONS */\n    , this;\n  }\n\n  setReadTime(t) {\n    return this.readTime = t, this;\n  }\n\n  get hasLocalMutations() {\n    return 1\n    /* HAS_LOCAL_MUTATIONS */\n    === this.documentState;\n  }\n\n  get hasCommittedMutations() {\n    return 2\n    /* HAS_COMMITTED_MUTATIONS */\n    === this.documentState;\n  }\n\n  get hasPendingWrites() {\n    return this.hasLocalMutations || this.hasCommittedMutations;\n  }\n\n  isValidDocument() {\n    return 0\n    /* INVALID */\n    !== this.documentType;\n  }\n\n  isFoundDocument() {\n    return 1\n    /* FOUND_DOCUMENT */\n    === this.documentType;\n  }\n\n  isNoDocument() {\n    return 2\n    /* NO_DOCUMENT */\n    === this.documentType;\n  }\n\n  isUnknownDocument() {\n    return 3\n    /* UNKNOWN_DOCUMENT */\n    === this.documentType;\n  }\n\n  isEqual(t) {\n    return t instanceof zt && this.key.isEqual(t.key) && this.version.isEqual(t.version) && this.documentType === t.documentType && this.documentState === t.documentState && this.data.isEqual(t.data);\n  }\n\n  mutableCopy() {\n    return new zt(this.key, this.documentType, this.version, this.readTime, this.data.clone(), this.documentState);\n  }\n\n  toString() {\n    return `Document(${this.key}, ${this.version}, ${JSON.stringify(this.data.value)}, {documentType: ${this.documentType}}), {documentState: ${this.documentState}})`;\n  }\n\n}\n/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n// Visible for testing\n\n\nclass Gt {\n  constructor(t, e = null, n = [], r = [], s = null, i = null, o = null) {\n    this.path = t, this.collectionGroup = e, this.orderBy = n, this.filters = r, this.limit = s, this.startAt = i, this.endAt = o, this.P = null;\n  }\n\n}\n/**\n * Initializes a Target with a path and optional additional query constraints.\n * Path must currently be empty if this is a collection group query.\n *\n * NOTE: you should always construct `Target` from `Query.toTarget` instead of\n * using this factory method, because `Query` provides an implicit `orderBy`\n * property.\n */\n\n\nfunction Qt(t, e = null, n = [], r = [], s = null, i = null, o = null) {\n  return new Gt(t, e, n, r, s, i, o);\n}\n\nclass Wt extends class {} {\n  constructor(t, e, n) {\n    super(), this.field = t, this.op = e, this.value = n;\n  }\n  /**\n   * Creates a filter based on the provided arguments.\n   */\n\n\n  static create(t, e, n) {\n    return t.isKeyField() ? \"in\"\n    /* IN */\n    === e || \"not-in\"\n    /* NOT_IN */\n    === e ? this.V(t, e, n) : new Yt(t, e, n) : \"array-contains\"\n    /* ARRAY_CONTAINS */\n    === e ? new Xt(t, n) : \"in\"\n    /* IN */\n    === e ? new Zt(t, n) : \"not-in\"\n    /* NOT_IN */\n    === e ? new te(t, n) : \"array-contains-any\"\n    /* ARRAY_CONTAINS_ANY */\n    === e ? new ee(t, n) : new Wt(t, e, n);\n  }\n\n  static V(t, e, n) {\n    return \"in\"\n    /* IN */\n    === e ? new Ht(t, n) : new Kt(t, n);\n  }\n\n  matches(t) {\n    const e = t.data.field(this.field); // Types do not have to match in NOT_EQUAL filters.\n\n    return \"!=\"\n    /* NOT_EQUAL */\n    === this.op ? null !== e && this.D(qt(e, this.value)) : null !== e && St(this.value) === St(e) && this.D(qt(e, this.value)); // Only compare types with matching backend order (such as double and int).\n  }\n\n  D(t) {\n    switch (this.op) {\n      case \"<\"\n      /* LESS_THAN */\n      :\n        return t < 0;\n\n      case \"<=\"\n      /* LESS_THAN_OR_EQUAL */\n      :\n        return t <= 0;\n\n      case \"==\"\n      /* EQUAL */\n      :\n        return 0 === t;\n\n      case \"!=\"\n      /* NOT_EQUAL */\n      :\n        return 0 !== t;\n\n      case \">\"\n      /* GREATER_THAN */\n      :\n        return t > 0;\n\n      case \">=\"\n      /* GREATER_THAN_OR_EQUAL */\n      :\n        return t >= 0;\n\n      default:\n        return g();\n    }\n  }\n\n  N() {\n    return [\"<\"\n    /* LESS_THAN */\n    , \"<=\"\n    /* LESS_THAN_OR_EQUAL */\n    , \">\"\n    /* GREATER_THAN */\n    , \">=\"\n    /* GREATER_THAN_OR_EQUAL */\n    , \"!=\"\n    /* NOT_EQUAL */\n    , \"not-in\"\n    /* NOT_IN */\n    ].indexOf(this.op) >= 0;\n  }\n\n}\n/** Filter that matches on key fields (i.e. '__name__'). */\n\n\nclass Yt extends Wt {\n  constructor(t, e, n) {\n    super(t, e, n), this.key = et.fromName(n.referenceValue);\n  }\n\n  matches(t) {\n    const e = et.comparator(t.key, this.key);\n    return this.D(e);\n  }\n\n}\n/** Filter that matches on key fields within an array. */\n\n\nclass Ht extends Wt {\n  constructor(t, e) {\n    super(t, \"in\"\n    /* IN */\n    , e), this.keys = Jt(\"in\"\n    /* IN */\n    , e);\n  }\n\n  matches(t) {\n    return this.keys.some(e => e.isEqual(t.key));\n  }\n\n}\n/** Filter that matches on key fields not present within an array. */\n\n\nclass Kt extends Wt {\n  constructor(t, e) {\n    super(t, \"not-in\"\n    /* NOT_IN */\n    , e), this.keys = Jt(\"not-in\"\n    /* NOT_IN */\n    , e);\n  }\n\n  matches(t) {\n    return !this.keys.some(e => e.isEqual(t.key));\n  }\n\n}\n\nfunction Jt(t, e) {\n  var n;\n  return ((null === (n = e.arrayValue) || void 0 === n ? void 0 : n.values) || []).map(t => et.fromName(t.referenceValue));\n}\n/** A Filter that implements the array-contains operator. */\n\n\nclass Xt extends Wt {\n  constructor(t, e) {\n    super(t, \"array-contains\"\n    /* ARRAY_CONTAINS */\n    , e);\n  }\n\n  matches(t) {\n    const e = t.data.field(this.field);\n    return Lt(e) && xt(e.arrayValue, this.value);\n  }\n\n}\n/** A Filter that implements the IN operator. */\n\n\nclass Zt extends Wt {\n  constructor(t, e) {\n    super(t, \"in\"\n    /* IN */\n    , e);\n  }\n\n  matches(t) {\n    const e = t.data.field(this.field);\n    return null !== e && xt(this.value.arrayValue, e);\n  }\n\n}\n/** A Filter that implements the not-in operator. */\n\n\nclass te extends Wt {\n  constructor(t, e) {\n    super(t, \"not-in\"\n    /* NOT_IN */\n    , e);\n  }\n\n  matches(t) {\n    if (xt(this.value.arrayValue, {\n      nullValue: \"NULL_VALUE\"\n    })) return !1;\n    const e = t.data.field(this.field);\n    return null !== e && !xt(this.value.arrayValue, e);\n  }\n\n}\n/** A Filter that implements the array-contains-any operator. */\n\n\nclass ee extends Wt {\n  constructor(t, e) {\n    super(t, \"array-contains-any\"\n    /* ARRAY_CONTAINS_ANY */\n    , e);\n  }\n\n  matches(t) {\n    const e = t.data.field(this.field);\n    return !(!Lt(e) || !e.arrayValue.values) && e.arrayValue.values.some(t => xt(this.value.arrayValue, t));\n  }\n\n}\n/**\n * Represents a bound of a query.\n *\n * The bound is specified with the given components representing a position and\n * whether it's just before or just after the position (relative to whatever the\n * query order is).\n *\n * The position represents a logical index position for a query. It's a prefix\n * of values for the (potentially implicit) order by clauses of a query.\n *\n * Bound provides a function to determine whether a document comes before or\n * after a bound. This is influenced by whether the position is just before or\n * just after the provided values.\n */\n\n\nclass ne {\n  constructor(t, e) {\n    this.position = t, this.inclusive = e;\n  }\n\n}\n/**\n * An ordering on a field, in some Direction. Direction defaults to ASCENDING.\n */\n\n\nclass re {\n  constructor(t, e = \"asc\"\n  /* ASCENDING */\n  ) {\n    this.field = t, this.dir = e;\n  }\n\n}\n\nfunction se(t, e) {\n  return t.dir === e.dir && t.field.isEqual(e.field);\n}\n\nfunction ie(t, e) {\n  if (null === t) return null === e;\n  if (null === e) return !1;\n  if (t.inclusive !== e.inclusive || t.position.length !== e.position.length) return !1;\n\n  for (let n = 0; n < t.position.length; n++) {\n    if (!Ft(t.position[n], e.position[n])) return !1;\n  }\n\n  return !0;\n}\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Query encapsulates all the query attributes we support in the SDK. It can\n * be run against the LocalStore, as well as be converted to a `Target` to\n * query the RemoteStore results.\n *\n * Visible for testing.\n */\n\n\nclass oe {\n  /**\n   * Initializes a Query with a path and optional additional query constraints.\n   * Path must currently be empty if this is a collection group query.\n   */\n  constructor(t, e = null, n = [], r = [], s = null, i = \"F\"\n  /* First */\n  , o = null, u = null) {\n    this.path = t, this.collectionGroup = e, this.explicitOrderBy = n, this.filters = r, this.limit = s, this.limitType = i, this.startAt = o, this.endAt = u, this.$ = null, // The corresponding `Target` of this `Query` instance.\n    this.S = null, this.startAt, this.endAt;\n  }\n\n}\n/** Creates a new Query for a query that matches all documents at `path` */\n\n\nfunction ue(t) {\n  return !ct(t.limit) && \"L\"\n  /* Last */\n  === t.limitType;\n}\n\nfunction ce(t) {\n  return t.explicitOrderBy.length > 0 ? t.explicitOrderBy[0].field : null;\n}\n\nfunction ae(t) {\n  for (const e of t.filters) if (e.N()) return e.field;\n\n  return null;\n}\n/**\n * Checks if any of the provided Operators are included in the query and\n * returns the first one that is, or null if none are.\n */\n\n/**\n * Returns whether the query matches a collection group rather than a specific\n * collection.\n */\n\n\nfunction he(t) {\n  return null !== t.collectionGroup;\n}\n/**\n * Returns the implicit order by constraint that is used to execute the Query,\n * which can be different from the order by constraints the user provided (e.g.\n * the SDK and backend always orders by `__name__`).\n */\n\n\nfunction le(t) {\n  const e = b(t);\n\n  if (null === e.$) {\n    e.$ = [];\n    const t = ae(e),\n          n = ce(e);\n    if (null !== t && null === n) // In order to implicitly add key ordering, we must also add the\n      // inequality filter field for it to be a valid query.\n      // Note that the default inequality field and key ordering is ascending.\n      t.isKeyField() || e.$.push(new re(t)), e.$.push(new re(tt.keyField(), \"asc\"\n      /* ASCENDING */\n      ));else {\n      let t = !1;\n\n      for (const n of e.explicitOrderBy) e.$.push(n), n.field.isKeyField() && (t = !0);\n\n      if (!t) {\n        // The order of the implicit key ordering always matches the last\n        // explicit order by\n        const t = e.explicitOrderBy.length > 0 ? e.explicitOrderBy[e.explicitOrderBy.length - 1].dir : \"asc\"\n        /* ASCENDING */\n        ;\n        e.$.push(new re(tt.keyField(), t));\n      }\n    }\n  }\n\n  return e.$;\n}\n/**\n * Converts this `Query` instance to it's corresponding `Target` representation.\n */\n\n\nfunction fe(t) {\n  const e = b(t);\n  if (!e.S) if (\"F\"\n  /* First */\n  === e.limitType) e.S = Qt(e.path, e.collectionGroup, le(e), e.filters, e.limit, e.startAt, e.endAt);else {\n    // Flip the orderBy directions since we want the last results\n    const t = [];\n\n    for (const n of le(e)) {\n      const e = \"desc\"\n      /* DESCENDING */\n      === n.dir ? \"asc\"\n      /* ASCENDING */\n      : \"desc\"\n      /* DESCENDING */\n      ;\n      t.push(new re(n.field, e));\n    } // We need to swap the cursors to match the now-flipped query ordering.\n\n\n    const n = e.endAt ? new ne(e.endAt.position, !e.endAt.inclusive) : null,\n          r = e.startAt ? new ne(e.startAt.position, !e.startAt.inclusive) : null; // Now return as a LimitType.First query.\n\n    e.S = Qt(e.path, e.collectionGroup, t, e.filters, e.limit, n, r);\n  }\n  return e.S;\n}\n\nfunction de(t, e) {\n  return function (t, e) {\n    if (t.limit !== e.limit) return !1;\n    if (t.orderBy.length !== e.orderBy.length) return !1;\n\n    for (let n = 0; n < t.orderBy.length; n++) if (!se(t.orderBy[n], e.orderBy[n])) return !1;\n\n    if (t.filters.length !== e.filters.length) return !1;\n\n    for (let s = 0; s < t.filters.length; s++) if (n = t.filters[s], r = e.filters[s], n.op !== r.op || !n.field.isEqual(r.field) || !Ft(n.value, r.value)) return !1;\n\n    var n, r;\n    return t.collectionGroup === e.collectionGroup && !!t.path.isEqual(e.path) && !!ie(t.startAt, e.startAt) && ie(t.endAt, e.endAt);\n  }(fe(t), fe(e)) && t.limitType === e.limitType;\n}\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Returns an DoubleValue for `value` that is encoded based the serializer's\n * `useProto3Json` setting.\n */\n\n/**\n * Returns a value for a number that's appropriate to put into a proto.\n * The return value is an IntegerValue if it can safely represent the value,\n * otherwise a DoubleValue is returned.\n */\n\n\nfunction we(t, e) {\n  return function (t) {\n    return \"number\" == typeof t && Number.isInteger(t) && !at(t) && t <= Number.MAX_SAFE_INTEGER && t >= Number.MIN_SAFE_INTEGER;\n  }(e) ?\n  /**\n  * Returns an IntegerValue for `value`.\n  */\n  function (t) {\n    return {\n      integerValue: \"\" + t\n    };\n  }(e) : function (t, e) {\n    if (t.F) {\n      if (isNaN(e)) return {\n        doubleValue: \"NaN\"\n      };\n      if (e === 1 / 0) return {\n        doubleValue: \"Infinity\"\n      };\n      if (e === -1 / 0) return {\n        doubleValue: \"-Infinity\"\n      };\n    }\n\n    return {\n      doubleValue: at(e) ? \"-0\" : e\n    };\n  }(t, e);\n}\n/**\n * @license\n * Copyright 2018 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/** Used to represent a field transform on a mutation. */\n\n\nclass me {\n  constructor() {\n    // Make sure that the structural type of `TransformOperation` is unique.\n    // See https://github.com/microsoft/TypeScript/issues/5451\n    this._ = void 0;\n  }\n\n}\n/** Transforms a value into a server-generated timestamp. */\n\n\nclass pe extends me {}\n/** Transforms an array value via a union operation. */\n\n\nclass ye extends me {\n  constructor(t) {\n    super(), this.elements = t;\n  }\n\n}\n/** Transforms an array value via a remove operation. */\n\n\nclass _e extends me {\n  constructor(t) {\n    super(), this.elements = t;\n  }\n\n}\n/**\n * Implements the backend semantics for locally computed NUMERIC_ADD (increment)\n * transforms. Converts all field values to integers or doubles, but unlike the\n * backend does not cap integer values at 2^63. Instead, JavaScript number\n * arithmetic is used and precision loss can occur for values greater than 2^53.\n */\n\n\nclass ge extends me {\n  constructor(t, e) {\n    super(), this.q = t, this.O = e;\n  }\n\n}\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/** A field path and the TransformOperation to perform upon it. */\n\n\nclass ve {\n  constructor(t, e) {\n    this.field = t, this.transform = e;\n  }\n\n}\n/**\n * Encodes a precondition for a mutation. This follows the model that the\n * backend accepts with the special case of an explicit \"empty\" precondition\n * (meaning no precondition).\n */\n\n\nclass be {\n  constructor(t, e) {\n    this.updateTime = t, this.exists = e;\n  }\n  /** Creates a new empty Precondition. */\n\n\n  static none() {\n    return new be();\n  }\n  /** Creates a new Precondition with an exists flag. */\n\n\n  static exists(t) {\n    return new be(void 0, t);\n  }\n  /** Creates a new Precondition based on a version a document exists at. */\n\n\n  static updateTime(t) {\n    return new be(t);\n  }\n  /** Returns whether this Precondition is empty. */\n\n\n  get isNone() {\n    return void 0 === this.updateTime && void 0 === this.exists;\n  }\n\n  isEqual(t) {\n    return this.exists === t.exists && (this.updateTime ? !!t.updateTime && this.updateTime.isEqual(t.updateTime) : !t.updateTime);\n  }\n\n}\n/**\n * A mutation describes a self-contained change to a document. Mutations can\n * create, replace, delete, and update subsets of documents.\n *\n * Mutations not only act on the value of the document but also its version.\n *\n * For local mutations (mutations that haven't been committed yet), we preserve\n * the existing version for Set and Patch mutations. For Delete mutations, we\n * reset the version to 0.\n *\n * Here's the expected transition table.\n *\n * MUTATION           APPLIED TO            RESULTS IN\n *\n * SetMutation        Document(v3)          Document(v3)\n * SetMutation        NoDocument(v3)        Document(v0)\n * SetMutation        InvalidDocument(v0)   Document(v0)\n * PatchMutation      Document(v3)          Document(v3)\n * PatchMutation      NoDocument(v3)        NoDocument(v3)\n * PatchMutation      InvalidDocument(v0)   UnknownDocument(v3)\n * DeleteMutation     Document(v3)          NoDocument(v0)\n * DeleteMutation     NoDocument(v3)        NoDocument(v0)\n * DeleteMutation     InvalidDocument(v0)   NoDocument(v0)\n *\n * For acknowledged mutations, we use the updateTime of the WriteResponse as\n * the resulting version for Set and Patch mutations. As deletes have no\n * explicit update time, we use the commitTime of the WriteResponse for\n * Delete mutations.\n *\n * If a mutation is acknowledged by the backend but fails the precondition check\n * locally, we transition to an `UnknownDocument` and rely on Watch to send us\n * the updated version.\n *\n * Field transforms are used only with Patch and Set Mutations. We use the\n * `updateTransforms` message to store transforms, rather than the `transforms`s\n * messages.\n *\n * ## Subclassing Notes\n *\n * Every type of mutation needs to implement its own applyToRemoteDocument() and\n * applyToLocalView() to implement the actual behavior of applying the mutation\n * to some source document (see `setMutationApplyToRemoteDocument()` for an\n * example).\n */\n\n\nclass Ee {}\n/**\n * A mutation that creates or replaces the document at the given key with the\n * object value contents.\n */\n\n\nclass Te extends Ee {\n  constructor(t, e, n, r = []) {\n    super(), this.key = t, this.value = e, this.precondition = n, this.fieldTransforms = r, this.type = 0\n    /* Set */\n    ;\n  }\n\n}\n/**\n * A mutation that modifies fields of the document at the given key with the\n * given values. The values are applied through a field mask:\n *\n *  * When a field is in both the mask and the values, the corresponding field\n *    is updated.\n *  * When a field is in neither the mask nor the values, the corresponding\n *    field is unmodified.\n *  * When a field is in the mask but not in the values, the corresponding field\n *    is deleted.\n *  * When a field is not in the mask but is in the values, the values map is\n *    ignored.\n */\n\n\nclass Ie extends Ee {\n  constructor(t, e, n, r, s = []) {\n    super(), this.key = t, this.data = e, this.fieldMask = n, this.precondition = r, this.fieldTransforms = s, this.type = 1\n    /* Patch */\n    ;\n  }\n\n}\n/** A mutation that deletes the document at the given key. */\n\n\nclass Ae extends Ee {\n  constructor(t, e) {\n    super(), this.key = t, this.precondition = e, this.type = 2\n    /* Delete */\n    , this.fieldTransforms = [];\n  }\n\n}\n/**\n * A mutation that verifies the existence of the document at the given key with\n * the provided precondition.\n *\n * The `verify` operation is only used in Transactions, and this class serves\n * primarily to facilitate serialization into protos.\n */\n\n\nclass Re extends Ee {\n  constructor(t, e) {\n    super(), this.key = t, this.precondition = e, this.type = 3\n    /* Verify */\n    , this.fieldTransforms = [];\n  }\n\n}\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\nconst Pe = (() => {\n  const t = {\n    asc: \"ASCENDING\",\n    desc: \"DESCENDING\"\n  };\n  return t;\n})(),\n      Ve = (() => {\n  const t = {\n    \"<\": \"LESS_THAN\",\n    \"<=\": \"LESS_THAN_OR_EQUAL\",\n    \">\": \"GREATER_THAN\",\n    \">=\": \"GREATER_THAN_OR_EQUAL\",\n    \"==\": \"EQUAL\",\n    \"!=\": \"NOT_EQUAL\",\n    \"array-contains\": \"ARRAY_CONTAINS\",\n    in: \"IN\",\n    \"not-in\": \"NOT_IN\",\n    \"array-contains-any\": \"ARRAY_CONTAINS_ANY\"\n  };\n  return t;\n})();\n/**\n * This class generates JsonObject values for the Datastore API suitable for\n * sending to either GRPC stub methods or via the JSON/HTTP REST API.\n *\n * The serializer supports both Protobuf.js and Proto3 JSON formats. By\n * setting `useProto3Json` to true, the serializer will use the Proto3 JSON\n * format.\n *\n * For a description of the Proto3 JSON format check\n * https://developers.google.com/protocol-buffers/docs/proto3#json\n *\n * TODO(klimt): We can remove the databaseId argument if we keep the full\n * resource name in documents.\n */\n\n\nclass De {\n  constructor(t, e) {\n    this.databaseId = t, this.F = e;\n  }\n\n}\n/**\n * Returns a value for a number (or null) that's appropriate to put into\n * a google.protobuf.Int32Value proto.\n * DO NOT USE THIS FOR ANYTHING ELSE.\n * This method cheats. It's typed as returning \"number\" because that's what\n * our generated proto interfaces say Int32Value must be. But GRPC actually\n * expects a { value: <number> } struct.\n */\n\n/**\n * Returns a value for a Date that's appropriate to put into a proto.\n */\n\n\nfunction Ne(t, e) {\n  if (t.F) {\n    return `${new Date(1e3 * e.seconds).toISOString().replace(/\\.\\d*/, \"\").replace(\"Z\", \"\")}.${(\"000000000\" + e.nanoseconds).slice(-9)}Z`;\n  }\n\n  return {\n    seconds: \"\" + e.seconds,\n    nanos: e.nanoseconds\n  };\n}\n/**\n * Returns a value for bytes that's appropriate to put in a proto.\n *\n * Visible for testing.\n */\n\n\nfunction $e(t, e) {\n  return t.F ? e.toBase64() : e.toUint8Array();\n}\n\nfunction Se(t, e) {\n  return Ne(t, e.toTimestamp());\n}\n\nfunction Fe(t) {\n  return v(!!t), vt.fromTimestamp(function (t) {\n    const e = Rt(t);\n    return new gt(e.seconds, e.nanos);\n  }(t));\n}\n\nfunction xe(t, e) {\n  return function (t) {\n    return new X([\"projects\", t.projectId, \"databases\", t.database]);\n  }(t).child(\"documents\").child(e).canonicalString();\n}\n\nfunction qe(t, e) {\n  return xe(t.databaseId, e.path);\n}\n\nfunction Oe(t, e) {\n  const n = function (t) {\n    const e = X.fromString(t);\n    return v(We(e)), e;\n  }(e);\n\n  if (n.get(1) !== t.databaseId.projectId) throw new U(A, \"Tried to deserialize key from different project: \" + n.get(1) + \" vs \" + t.databaseId.projectId);\n  if (n.get(3) !== t.databaseId.database) throw new U(A, \"Tried to deserialize key from different database: \" + n.get(3) + \" vs \" + t.databaseId.database);\n  return new et((v((r = n).length > 4 && \"documents\" === r.get(4)), r.popFirst(5)));\n  var r;\n  /** Creates a Document proto from key and fields (but no create/update time) */\n}\n\nfunction Ce(t, e) {\n  return xe(t.databaseId, e);\n}\n\nfunction Le(t) {\n  return new X([\"projects\", t.databaseId.projectId, \"databases\", t.databaseId.database]).canonicalString();\n}\n\nfunction Ue(t, e, n) {\n  return {\n    name: qe(t, e),\n    fields: n.value.mapValue.fields\n  };\n}\n\nfunction ke(t, e) {\n  return \"found\" in e ? function (t, e) {\n    v(!!e.found), e.found.name, e.found.updateTime;\n    const n = Oe(t, e.found.name),\n          r = Fe(e.found.updateTime),\n          s = new Bt({\n      mapValue: {\n        fields: e.found.fields\n      }\n    });\n    return zt.newFoundDocument(n, r, s);\n  }(t, e) : \"missing\" in e ? function (t, e) {\n    v(!!e.missing), v(!!e.readTime);\n    const n = Oe(t, e.missing),\n          r = Fe(e.readTime);\n    return zt.newNoDocument(n, r);\n  }(t, e) : g();\n}\n\nfunction je(t, e) {\n  let n;\n  if (e instanceof Te) n = {\n    update: Ue(t, e.key, e.value)\n  };else if (e instanceof Ae) n = {\n    delete: qe(t, e.key)\n  };else if (e instanceof Ie) n = {\n    update: Ue(t, e.key, e.data),\n    updateMask: Qe(e.fieldMask)\n  };else {\n    if (!(e instanceof Re)) return g();\n    n = {\n      verify: qe(t, e.key)\n    };\n  }\n  return e.fieldTransforms.length > 0 && (n.updateTransforms = e.fieldTransforms.map(t => function (t, e) {\n    const n = e.transform;\n    if (n instanceof pe) return {\n      fieldPath: e.field.canonicalString(),\n      setToServerValue: \"REQUEST_TIME\"\n    };\n    if (n instanceof ye) return {\n      fieldPath: e.field.canonicalString(),\n      appendMissingElements: {\n        values: n.elements\n      }\n    };\n    if (n instanceof _e) return {\n      fieldPath: e.field.canonicalString(),\n      removeAllFromArray: {\n        values: n.elements\n      }\n    };\n    if (n instanceof ge) return {\n      fieldPath: e.field.canonicalString(),\n      increment: n.O\n    };\n    throw g();\n  }(0, t))), e.precondition.isNone || (n.currentDocument = function (t, e) {\n    return void 0 !== e.updateTime ? {\n      updateTime: Se(t, e.updateTime)\n    } : void 0 !== e.exists ? {\n      exists: e.exists\n    } : g();\n  }(t, e.precondition)), n;\n}\n\nfunction Me(t, e) {\n  // Dissect the path into parent, collectionId, and optional key filter.\n  const n = {\n    structuredQuery: {}\n  },\n        r = e.path;\n  null !== e.collectionGroup ? (n.parent = Ce(t, r), n.structuredQuery.from = [{\n    collectionId: e.collectionGroup,\n    allDescendants: !0\n  }]) : (n.parent = Ce(t, r.popLast()), n.structuredQuery.from = [{\n    collectionId: r.lastSegment()\n  }]);\n\n  const s = function (t) {\n    if (0 === t.length) return;\n    const e = t.map(t => // visible for testing\n    function (t) {\n      if (\"==\"\n      /* EQUAL */\n      === t.op) {\n        if (kt(t.value)) return {\n          unaryFilter: {\n            field: Ge(t.field),\n            op: \"IS_NAN\"\n          }\n        };\n        if (Ut(t.value)) return {\n          unaryFilter: {\n            field: Ge(t.field),\n            op: \"IS_NULL\"\n          }\n        };\n      } else if (\"!=\"\n      /* NOT_EQUAL */\n      === t.op) {\n        if (kt(t.value)) return {\n          unaryFilter: {\n            field: Ge(t.field),\n            op: \"IS_NOT_NAN\"\n          }\n        };\n        if (Ut(t.value)) return {\n          unaryFilter: {\n            field: Ge(t.field),\n            op: \"IS_NOT_NULL\"\n          }\n        };\n      }\n\n      return {\n        fieldFilter: {\n          field: Ge(t.field),\n          op: ze(t.op),\n          value: t.value\n        }\n      };\n    }(t));\n    if (1 === e.length) return e[0];\n    return {\n      compositeFilter: {\n        op: \"AND\",\n        filters: e\n      }\n    };\n  }(e.filters);\n\n  s && (n.structuredQuery.where = s);\n\n  const i = function (t) {\n    if (0 === t.length) return;\n    return t.map(t => // visible for testing\n    function (t) {\n      return {\n        field: Ge(t.field),\n        direction: Be(t.dir)\n      };\n    }(t));\n  }(e.orderBy);\n\n  i && (n.structuredQuery.orderBy = i);\n\n  const o = function (t, e) {\n    return t.F || ct(e) ? e : {\n      value: e\n    };\n  }(t, e.limit);\n\n  var u;\n  return null !== o && (n.structuredQuery.limit = o), e.startAt && (n.structuredQuery.startAt = {\n    before: (u = e.startAt).inclusive,\n    values: u.position\n  }), e.endAt && (n.structuredQuery.endAt = function (t) {\n    return {\n      before: !t.inclusive,\n      values: t.position\n    };\n  } // visible for testing\n  (e.endAt)), n;\n}\n\nfunction Be(t) {\n  return Pe[t];\n} // visible for testing\n\n\nfunction ze(t) {\n  return Ve[t];\n}\n\nfunction Ge(t) {\n  return {\n    fieldPath: t.canonicalString()\n  };\n}\n\nfunction Qe(t) {\n  const e = [];\n  return t.fields.forEach(t => e.push(t.canonicalString())), {\n    fieldPaths: e\n  };\n}\n\nfunction We(t) {\n  // Resource names have at least 4 components (project ID, database ID)\n  return t.length >= 4 && \"projects\" === t.get(0) && \"databases\" === t.get(2);\n}\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\nfunction Ye(t) {\n  return new De(t,\n  /* useProto3Json= */\n  !0);\n}\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * A helper for running delayed tasks following an exponential backoff curve\n * between attempts.\n *\n * Each delay is made up of a \"base\" delay which follows the exponential\n * backoff curve, and a +/- 50% \"jitter\" that is calculated and added to the\n * base delay. This prevents clients from accidentally synchronizing their\n * delays causing spikes of load to the backend.\n */\n\n\nclass He {\n  constructor(\n  /**\n   * The AsyncQueue to run backoff operations on.\n   */\n  t,\n  /**\n   * The ID to use when scheduling backoff operations on the AsyncQueue.\n   */\n  e,\n  /**\n   * The initial delay (used as the base delay on the first retry attempt).\n   * Note that jitter will still be applied, so the actual delay could be as\n   * little as 0.5*initialDelayMs.\n   */\n  n = 1e3\n  /**\n   * The multiplier to use to determine the extended base delay after each\n   * attempt.\n   */\n  , r = 1.5\n  /**\n   * The maximum base delay after which no further backoff is performed.\n   * Note that jitter will still be applied, so the actual delay could be as\n   * much as 1.5*maxDelayMs.\n   */\n  , s = 6e4) {\n    this.C = t, this.timerId = e, this.L = n, this.U = r, this.k = s, this.j = 0, this.M = null,\n    /** The last backoff attempt, as epoch milliseconds. */\n    this.B = Date.now(), this.reset();\n  }\n  /**\n   * Resets the backoff delay.\n   *\n   * The very next backoffAndWait() will have no delay. If it is called again\n   * (i.e. due to an error), initialDelayMs (plus jitter) will be used, and\n   * subsequent ones will increase according to the backoffFactor.\n   */\n\n\n  reset() {\n    this.j = 0;\n  }\n  /**\n   * Resets the backoff delay to the maximum delay (e.g. for use after a\n   * RESOURCE_EXHAUSTED error).\n   */\n\n\n  G() {\n    this.j = this.k;\n  }\n  /**\n   * Returns a promise that resolves after currentDelayMs, and increases the\n   * delay for any subsequent attempts. If there was a pending backoff operation\n   * already, it will be canceled.\n   */\n\n\n  W(t) {\n    // Cancel any pending backoff operation.\n    this.cancel(); // First schedule using the current base (which may be 0 and should be\n    // honored as such).\n\n    const e = Math.floor(this.j + this.Y()),\n          n = Math.max(0, Date.now() - this.B),\n          r = Math.max(0, e - n); // Guard against lastAttemptTime being in the future due to a clock change.\n\n    r > 0 && m(\"ExponentialBackoff\", `Backing off for ${r} ms (base delay: ${this.j} ms, delay with jitter: ${e} ms, last attempt: ${n} ms ago)`), this.M = this.C.enqueueAfterDelay(this.timerId, r, () => (this.B = Date.now(), t())), // Apply backoff factor to determine next delay and ensure it is within\n    // bounds.\n    this.j *= this.U, this.j < this.L && (this.j = this.L), this.j > this.k && (this.j = this.k);\n  }\n\n  H() {\n    null !== this.M && (this.M.skipDelay(), this.M = null);\n  }\n\n  cancel() {\n    null !== this.M && (this.M.cancel(), this.M = null);\n  }\n  /** Returns a random value in the range [-currentBaseMs/2, currentBaseMs/2] */\n\n\n  Y() {\n    return (Math.random() - .5) * this.j;\n  }\n\n}\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Datastore and its related methods are a wrapper around the external Google\n * Cloud Datastore grpc API, which provides an interface that is more convenient\n * for the rest of the client SDK architecture to consume.\n */\n\n/**\n * An implementation of Datastore that exposes additional state for internal\n * consumption.\n */\n\n\nclass Ke extends class {} {\n  constructor(t, e, n, r) {\n    super(), this.authCredentials = t, this.appCheckCredentials = e, this.K = n, this.q = r, this.J = !1;\n  }\n\n  X() {\n    if (this.J) throw new U(S, \"The client has already been terminated.\");\n  }\n  /** Invokes the provided RPC with auth and AppCheck tokens. */\n\n\n  m(t, e, n) {\n    return this.X(), Promise.all([this.authCredentials.getToken(), this.appCheckCredentials.getToken()]).then(([r, s]) => this.K.m(t, e, n, r, s)).catch(t => {\n      throw \"FirebaseError\" === t.name ? (t.code === N && (this.authCredentials.invalidateToken(), this.appCheckCredentials.invalidateToken()), t) : new U(I, t.toString());\n    });\n  }\n  /** Invokes the provided RPC with streamed results with auth and AppCheck tokens. */\n\n\n  T(t, e, n) {\n    return this.X(), Promise.all([this.authCredentials.getToken(), this.appCheckCredentials.getToken()]).then(([r, s]) => this.K.T(t, e, n, r, s)).catch(t => {\n      throw \"FirebaseError\" === t.name ? (t.code === N && (this.authCredentials.invalidateToken(), this.appCheckCredentials.invalidateToken()), t) : new U(I, t.toString());\n    });\n  }\n\n  terminate() {\n    this.J = !0;\n  }\n\n} // TODO(firestorexp): Make sure there is only one Datastore instance per\n// firestore-exp client.\n\n\nfunction Je(_x, _x2) {\n  return _Je.apply(this, arguments);\n}\n\nfunction _Je() {\n  _Je = _asyncToGenerator(function* (t, e) {\n    const n = b(t),\n          r = Le(n.q) + \"/documents\",\n          s = {\n      writes: e.map(t => je(n.q, t))\n    };\n    yield n.m(\"Commit\", r, s);\n  });\n  return _Je.apply(this, arguments);\n}\n\nfunction Xe(_x3, _x4) {\n  return _Xe.apply(this, arguments);\n}\n\nfunction _Xe() {\n  _Xe = _asyncToGenerator(function* (t, e) {\n    const n = b(t),\n          r = Le(n.q) + \"/documents\",\n          s = {\n      documents: e.map(t => qe(n.q, t))\n    },\n          i = yield n.T(\"BatchGetDocuments\", r, s),\n          o = new Map();\n    i.forEach(t => {\n      const e = ke(n.q, t);\n      o.set(e.key.toString(), e);\n    });\n    const u = [];\n    return e.forEach(t => {\n      const e = o.get(t.toString());\n      v(!!e), u.push(e);\n    }), u;\n  });\n  return _Xe.apply(this, arguments);\n}\n\nfunction Ze(_x5, _x6) {\n  return _Ze.apply(this, arguments);\n}\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\nfunction _Ze() {\n  _Ze = _asyncToGenerator(function* (t, e) {\n    const n = b(t),\n          r = Me(n.q, fe(e));\n    return (yield n.T(\"RunQuery\", r.parent, {\n      structuredQuery: r.structuredQuery\n    })).filter(t => !!t.document).map(t => function (t, e, n) {\n      const r = Oe(t, e.name),\n            s = Fe(e.updateTime),\n            i = new Bt({\n        mapValue: {\n          fields: e.fields\n        }\n      }),\n            o = zt.newFoundDocument(r, s, i);\n      return n && o.setHasCommittedMutations(), n ? o.setHasCommittedMutations() : o;\n    }(n.q, t.document, void 0));\n  });\n  return _Ze.apply(this, arguments);\n}\n\nconst tn = new Map();\n/**\n * An instance map that ensures only one Datastore exists per Firestore\n * instance.\n */\n\n/**\n * Returns an initialized and started Datastore for the given Firestore\n * instance. Callers must invoke removeComponents() when the Firestore\n * instance is terminated.\n */\n\nfunction en(t) {\n  if (t._terminated) throw new U(S, \"The client has already been terminated.\");\n\n  if (!tn.has(t)) {\n    m(\"ComponentProvider\", \"Initializing Datastore\");\n\n    const i = function (t) {\n      return new wt(t, fetch.bind(null));\n    }((e = t._databaseId, n = t.app.options.appId || \"\", r = t._persistenceKey, s = t._freezeSettings(), new H(e, n, r, s.host, s.ssl, s.experimentalForceLongPolling, s.experimentalAutoDetectLongPolling, s.useFetchStreams))),\n          o = Ye(t._databaseId),\n          u = function (t, e, n, r) {\n      return new Ke(t, e, n, r);\n    }(t._authCredentials, t._appCheckCredentials, i, o);\n\n    tn.set(t, u);\n  }\n\n  var e, n, r, s;\n  /**\n  * @license\n  * Copyright 2018 Google LLC\n  *\n  * Licensed under the Apache License, Version 2.0 (the \"License\");\n  * you may not use this file except in compliance with the License.\n  * You may obtain a copy of the License at\n  *\n  *   http://www.apache.org/licenses/LICENSE-2.0\n  *\n  * Unless required by applicable law or agreed to in writing, software\n  * distributed under the License is distributed on an \"AS IS\" BASIS,\n  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  * See the License for the specific language governing permissions and\n  * limitations under the License.\n  */\n\n  return tn.get(t);\n}\n/**\n * Removes all components associated with the provided instance. Must be called\n * when the `Firestore` instance is terminated.\n */\n\n/**\n * A concrete type describing all the values that can be applied via a\n * user-supplied `FirestoreSettings` object. This is a separate type so that\n * defaults can be supplied and the value can be checked for equality.\n */\n\n\nclass nn {\n  constructor(t) {\n    var e;\n\n    if (void 0 === t.host) {\n      if (void 0 !== t.ssl) throw new U(A, \"Can't provide ssl option if host option is not set\");\n      this.host = \"firestore.googleapis.com\", this.ssl = true;\n    } else this.host = t.host, this.ssl = null === (e = t.ssl) || void 0 === e || e;\n\n    if (this.credentials = t.credentials, this.ignoreUndefinedProperties = !!t.ignoreUndefinedProperties, void 0 === t.cacheSizeBytes) this.cacheSizeBytes = 41943040;else {\n      if (-1 !== t.cacheSizeBytes && t.cacheSizeBytes < 1048576) throw new U(A, \"cacheSizeBytes must be at least 1048576\");\n      this.cacheSizeBytes = t.cacheSizeBytes;\n    }\n    this.experimentalForceLongPolling = !!t.experimentalForceLongPolling, this.experimentalAutoDetectLongPolling = !!t.experimentalAutoDetectLongPolling, this.useFetchStreams = !!t.useFetchStreams, function (t, e, n, r) {\n      if (!0 === e && !0 === r) throw new U(A, `${t} and ${n} cannot be used together.`);\n    }(\"experimentalForceLongPolling\", t.experimentalForceLongPolling, \"experimentalAutoDetectLongPolling\", t.experimentalAutoDetectLongPolling);\n  }\n\n  isEqual(t) {\n    return this.host === t.host && this.ssl === t.ssl && this.credentials === t.credentials && this.cacheSizeBytes === t.cacheSizeBytes && this.experimentalForceLongPolling === t.experimentalForceLongPolling && this.experimentalAutoDetectLongPolling === t.experimentalAutoDetectLongPolling && this.ignoreUndefinedProperties === t.ignoreUndefinedProperties && this.useFetchStreams === t.useFetchStreams;\n  }\n\n}\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * The Cloud Firestore service interface.\n *\n * Do not call this constructor directly. Instead, use {@link getFirestore}.\n */\n\n\nclass rn {\n  /** @hideconstructor */\n  constructor(t, e, n) {\n    this._authCredentials = e, this._appCheckCredentials = n,\n    /**\n     * Whether it's a Firestore or Firestore Lite instance.\n     */\n    this.type = \"firestore-lite\", this._persistenceKey = \"(lite)\", this._settings = new nn({}), this._settingsFrozen = !1, t instanceof K ? this._databaseId = t : (this._app = t, this._databaseId = function (t) {\n      if (!Object.prototype.hasOwnProperty.apply(t.options, [\"projectId\"])) throw new U(A, '\"projectId\" not provided in firebase.initializeApp.');\n      return new K(t.options.projectId);\n    }\n    /**\n    * Initializes a new instance of Cloud Firestore with the provided settings.\n    * Can only be called before any other functions, including\n    * {@link getFirestore}. If the custom settings are empty, this function is\n    * equivalent to calling {@link getFirestore}.\n    *\n    * @param app - The {@link @firebase/app#FirebaseApp} with which the `Firestore` instance will\n    * be associated.\n    * @param settings - A settings object to configure the `Firestore` instance.\n    * @returns A newly initialized `Firestore` instance.\n    */\n    (t));\n  }\n  /**\n   * The {@link @firebase/app#FirebaseApp} associated with this `Firestore` service\n   * instance.\n   */\n\n\n  get app() {\n    if (!this._app) throw new U(S, \"Firestore was not initialized using the Firebase SDK. 'app' is not available\");\n    return this._app;\n  }\n\n  get _initialized() {\n    return this._settingsFrozen;\n  }\n\n  get _terminated() {\n    return void 0 !== this._terminateTask;\n  }\n\n  _setSettings(t) {\n    if (this._settingsFrozen) throw new U(S, \"Firestore has already been started and its settings can no longer be changed. You can only modify settings before calling any other methods on a Firestore object.\");\n    this._settings = new nn(t), void 0 !== t.credentials && (this._authCredentials = function (t) {\n      if (!t) return new M();\n\n      switch (t.type) {\n        case \"gapi\":\n          const e = t.client; // Make sure this really is a Gapi client.\n\n          return v(!(\"object\" != typeof e || null === e || !e.auth || !e.auth.getAuthHeaderValueForFirstParty)), new Q(e, t.sessionIndex || \"0\", t.iamToken || null);\n\n        case \"provider\":\n          return t.client;\n\n        default:\n          throw new U(A, \"makeAuthCredentialsProvider failed due to invalid credential type\");\n      }\n    }(t.credentials));\n  }\n\n  _getSettings() {\n    return this._settings;\n  }\n\n  _freezeSettings() {\n    return this._settingsFrozen = !0, this._settings;\n  }\n\n  _delete() {\n    return this._terminateTask || (this._terminateTask = this._terminate()), this._terminateTask;\n  }\n  /** Returns a JSON-serializable representation of this `Firestore` instance. */\n\n\n  toJSON() {\n    return {\n      app: this._app,\n      databaseId: this._databaseId,\n      settings: this._settings\n    };\n  }\n  /**\n   * Terminates all components used by this client. Subclasses can override\n   * this method to clean up their own dependencies, but must also call this\n   * method.\n   *\n   * Only ever called once.\n   */\n\n\n  _terminate() {\n    return function (t) {\n      const e = tn.get(t);\n      e && (m(\"ComponentProvider\", \"Removing Datastore\"), tn.delete(t), e.terminate());\n    }(this), Promise.resolve();\n  }\n\n}\n\nfunction sn(t, e) {\n  const n = _getProvider(t, \"firestore/lite\");\n\n  if (n.isInitialized()) throw new U(S, \"Firestore can only be initialized once per app.\");\n  return n.initialize({\n    options: e\n  });\n}\n/**\n * Returns the existing `Firestore` instance that is associated with the\n * provided {@link @firebase/app#FirebaseApp}. If no instance exists, initializes a new\n * instance with default settings.\n *\n * @param app - The {@link @firebase/app#FirebaseApp} instance that the returned `Firestore`\n * instance is associated with.\n * @returns The `Firestore` instance of the provided app.\n */\n\n\nfunction on(e = getApp()) {\n  return _getProvider(e, \"firestore/lite\").getImmediate();\n}\n/**\n * Modify this instance to communicate with the Cloud Firestore emulator.\n *\n * Note: This must be called before this instance has been used to do any\n * operations.\n *\n * @param firestore - The `Firestore` instance to configure to connect to the\n * emulator.\n * @param host - the emulator host (ex: localhost).\n * @param port - the emulator port (ex: 9000).\n * @param options.mockUserToken - the mock auth token to use for unit testing\n * Security Rules.\n */\n\n\nfunction un(t, e, n, r = {}) {\n  var s;\n\n  const i = (t = ot(t, rn))._getSettings();\n\n  if (\"firestore.googleapis.com\" !== i.host && i.host !== e && y(\"Host has been set in both settings() and useEmulator(), emulator host will be used\"), t._setSettings(Object.assign(Object.assign({}, i), {\n    host: `${e}:${n}`,\n    ssl: !1\n  })), r.mockUserToken) {\n    let e, n;\n    if (\"string\" == typeof r.mockUserToken) e = r.mockUserToken, n = l.MOCK_USER;else {\n      // Let createMockUserToken validate first (catches common mistakes like\n      // invalid field \"uid\" and missing field \"sub\" / \"user_id\".)\n      e = createMockUserToken(r.mockUserToken, null === (s = t._app) || void 0 === s ? void 0 : s.options.projectId);\n      const i = r.mockUserToken.sub || r.mockUserToken.user_id;\n      if (!i) throw new U(A, \"mockUserToken must contain 'sub' or 'user_id' field!\");\n      n = new l(i);\n    }\n    t._authCredentials = new B(new j(e, n));\n  }\n}\n/**\n * Terminates the provided `Firestore` instance.\n *\n * After calling `terminate()` only the `clearIndexedDbPersistence()` functions\n * may be used. Any other function will throw a `FirestoreError`. Termination\n * does not cancel any pending writes, and any promises that are awaiting a\n * response from the server will not be resolved.\n *\n * To restart after termination, create a new instance of `Firestore` with\n * {@link getFirestore}.\n *\n * Note: Under normal circumstances, calling `terminate()` is not required. This\n * function is useful only when you want to force this instance to release all of\n * its resources or in combination with {@link clearIndexedDbPersistence} to\n * ensure that all local state is destroyed between test runs.\n *\n * @param firestore - The `Firestore` instance to terminate.\n * @returns A `Promise` that is resolved when the instance has been successfully\n * terminated.\n */\n\n\nfunction cn(t) {\n  return t = ot(t, rn), _removeServiceInstance(t.app, \"firestore/lite\"), t._delete();\n}\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * A `DocumentReference` refers to a document location in a Firestore database\n * and can be used to write, read, or listen to the location. The document at\n * the referenced location may or may not exist.\n */\n\n\nclass an {\n  /** @hideconstructor */\n  constructor(t,\n  /**\n   * If provided, the `FirestoreDataConverter` associated with this instance.\n   */\n  e, n) {\n    this.converter = e, this._key = n,\n    /** The type of this Firestore reference. */\n    this.type = \"document\", this.firestore = t;\n  }\n\n  get _path() {\n    return this._key.path;\n  }\n  /**\n   * The document's identifier within its collection.\n   */\n\n\n  get id() {\n    return this._key.path.lastSegment();\n  }\n  /**\n   * A string representing the path of the referenced document (relative\n   * to the root of the database).\n   */\n\n\n  get path() {\n    return this._key.path.canonicalString();\n  }\n  /**\n   * The collection this `DocumentReference` belongs to.\n   */\n\n\n  get parent() {\n    return new ln(this.firestore, this.converter, this._key.path.popLast());\n  }\n\n  withConverter(t) {\n    return new an(this.firestore, t, this._key);\n  }\n\n}\n/**\n * A `Query` refers to a query which you can read or listen to. You can also\n * construct refined `Query` objects by adding filters and ordering.\n */\n\n\nclass hn {\n  // This is the lite version of the Query class in the main SDK.\n\n  /** @hideconstructor protected */\n  constructor(t,\n  /**\n   * If provided, the `FirestoreDataConverter` associated with this instance.\n   */\n  e, n) {\n    this.converter = e, this._query = n,\n    /** The type of this Firestore reference. */\n    this.type = \"query\", this.firestore = t;\n  }\n\n  withConverter(t) {\n    return new hn(this.firestore, t, this._query);\n  }\n\n}\n/**\n * A `CollectionReference` object can be used for adding documents, getting\n * document references, and querying for documents (using {@link query}).\n */\n\n\nclass ln extends hn {\n  /** @hideconstructor */\n  constructor(t, e, n) {\n    super(t, e, new oe(n)), this._path = n,\n    /** The type of this Firestore reference. */\n    this.type = \"collection\";\n  }\n  /** The collection's identifier. */\n\n\n  get id() {\n    return this._query.path.lastSegment();\n  }\n  /**\n   * A string representing the path of the referenced collection (relative\n   * to the root of the database).\n   */\n\n\n  get path() {\n    return this._query.path.canonicalString();\n  }\n  /**\n   * A reference to the containing `DocumentReference` if this is a\n   * subcollection. If this isn't a subcollection, the reference is null.\n   */\n\n\n  get parent() {\n    const t = this._path.popLast();\n\n    return t.isEmpty() ? null : new an(this.firestore,\n    /* converter= */\n    null, new et(t));\n  }\n\n  withConverter(t) {\n    return new ln(this.firestore, t, this._path);\n  }\n\n}\n\nfunction fn(t, e, ...n) {\n  if (t = getModularInstance(t), nt(\"collection\", \"path\", e), t instanceof rn) {\n    const r = X.fromString(e, ...n);\n    return st(r), new ln(t,\n    /* converter= */\n    null, r);\n  }\n\n  {\n    if (!(t instanceof an || t instanceof ln)) throw new U(A, \"Expected first argument to collection() to be a CollectionReference, a DocumentReference or FirebaseFirestore\");\n\n    const r = t._path.child(X.fromString(e, ...n));\n\n    return st(r), new ln(t.firestore,\n    /* converter= */\n    null, r);\n  }\n} // TODO(firestorelite): Consider using ErrorFactory -\n// https://github.com/firebase/firebase-js-sdk/blob/0131e1f/packages/util/src/errors.ts#L106\n\n/**\n * Creates and returns a new `Query` instance that includes all documents in the\n * database that are contained in a collection or subcollection with the\n * given `collectionId`.\n *\n * @param firestore - A reference to the root `Firestore` instance.\n * @param collectionId - Identifies the collections to query over. Every\n * collection or subcollection with this ID as the last segment of its path\n * will be included. Cannot contain a slash.\n * @returns The created `Query`.\n */\n\n\nfunction dn(t, e) {\n  if (t = ot(t, rn), nt(\"collectionGroup\", \"collection id\", e), e.indexOf(\"/\") >= 0) throw new U(A, `Invalid collection ID '${e}' passed to function collectionGroup(). Collection IDs must not contain '/'.`);\n  return new hn(t,\n  /* converter= */\n  null,\n  /**\n  * Creates a new Query for a collection group query that matches all documents\n  * within the provided collection group.\n  */\n  function (t) {\n    return new oe(X.emptyPath(), t);\n  }(e));\n}\n\nfunction wn(t, e, ...n) {\n  if (t = getModularInstance(t), // We allow omission of 'pathString' but explicitly prohibit passing in both\n  // 'undefined' and 'null'.\n  1 === arguments.length && (e = pt.R()), nt(\"doc\", \"path\", e), t instanceof rn) {\n    const r = X.fromString(e, ...n);\n    return rt(r), new an(t,\n    /* converter= */\n    null, new et(r));\n  }\n\n  {\n    if (!(t instanceof an || t instanceof ln)) throw new U(A, \"Expected first argument to collection() to be a CollectionReference, a DocumentReference or FirebaseFirestore\");\n\n    const r = t._path.child(X.fromString(e, ...n));\n\n    return rt(r), new an(t.firestore, t instanceof ln ? t.converter : null, new et(r));\n  }\n}\n/**\n * Returns true if the provided references are equal.\n *\n * @param left - A reference to compare.\n * @param right - A reference to compare.\n * @returns true if the references point to the same location in the same\n * Firestore database.\n */\n\n\nfunction mn(t, e) {\n  return t = getModularInstance(t), e = getModularInstance(e), (t instanceof an || t instanceof ln) && (e instanceof an || e instanceof ln) && t.firestore === e.firestore && t.path === e.path && t.converter === e.converter;\n}\n/**\n * Returns true if the provided queries point to the same collection and apply\n * the same constraints.\n *\n * @param left - A `Query` to compare.\n * @param right - A `Query` to compare.\n * @returns true if the references point to the same location in the same\n * Firestore database.\n */\n\n\nfunction pn(t, e) {\n  return t = getModularInstance(t), e = getModularInstance(e), t instanceof hn && e instanceof hn && t.firestore === e.firestore && de(t._query, e._query) && t.converter === e.converter;\n}\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * A `FieldPath` refers to a field in a document. The path may consist of a\n * single field name (referring to a top-level field in the document), or a\n * list of field names (referring to a nested field in the document).\n *\n * Create a `FieldPath` by providing field names. If more than one field\n * name is provided, the path will point to a nested field in a document.\n */\n\n\nclass yn {\n  /**\n   * Creates a `FieldPath` from the provided field names. If more than one field\n   * name is provided, the path will point to a nested field in a document.\n   *\n   * @param fieldNames - A list of field names.\n   */\n  constructor(...t) {\n    for (let e = 0; e < t.length; ++e) if (0 === t[e].length) throw new U(A, \"Invalid field name at argument $(i + 1). Field names must not be empty.\");\n\n    this._internalPath = new tt(t);\n  }\n  /**\n   * Returns true if this `FieldPath` is equal to the provided one.\n   *\n   * @param other - The `FieldPath` to compare against.\n   * @returns true if this `FieldPath` is equal to the provided one.\n   */\n\n\n  isEqual(t) {\n    return this._internalPath.isEqual(t._internalPath);\n  }\n\n}\n/**\n * Returns a special sentinel `FieldPath` to refer to the ID of a document.\n * It can be used in queries to sort or filter by the document ID.\n */\n\n\nfunction _n() {\n  return new yn(\"__name__\");\n}\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * An immutable object representing an array of bytes.\n */\n\n\nclass gn {\n  /** @hideconstructor */\n  constructor(t) {\n    this._byteString = t;\n  }\n  /**\n   * Creates a new `Bytes` object from the given Base64 string, converting it to\n   * bytes.\n   *\n   * @param base64 - The Base64 string used to create the `Bytes` object.\n   */\n\n\n  static fromBase64String(t) {\n    try {\n      return new gn(It.fromBase64String(t));\n    } catch (t) {\n      throw new U(A, \"Failed to construct data from Base64 string: \" + t);\n    }\n  }\n  /**\n   * Creates a new `Bytes` object from the given Uint8Array.\n   *\n   * @param array - The Uint8Array used to create the `Bytes` object.\n   */\n\n\n  static fromUint8Array(t) {\n    return new gn(It.fromUint8Array(t));\n  }\n  /**\n   * Returns the underlying bytes as a Base64-encoded string.\n   *\n   * @returns The Base64-encoded string created from the `Bytes` object.\n   */\n\n\n  toBase64() {\n    return this._byteString.toBase64();\n  }\n  /**\n   * Returns the underlying bytes in a new `Uint8Array`.\n   *\n   * @returns The Uint8Array created from the `Bytes` object.\n   */\n\n\n  toUint8Array() {\n    return this._byteString.toUint8Array();\n  }\n  /**\n   * Returns a string representation of the `Bytes` object.\n   *\n   * @returns A string representation of the `Bytes` object.\n   */\n\n\n  toString() {\n    return \"Bytes(base64: \" + this.toBase64() + \")\";\n  }\n  /**\n   * Returns true if this `Bytes` object is equal to the provided one.\n   *\n   * @param other - The `Bytes` object to compare against.\n   * @returns true if this `Bytes` object is equal to the provided one.\n   */\n\n\n  isEqual(t) {\n    return this._byteString.isEqual(t._byteString);\n  }\n\n}\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Sentinel values that can be used when writing document fields with `set()`\n * or `update()`.\n */\n\n\nclass vn {\n  /**\n   * @param _methodName - The public API endpoint that returns this class.\n   * @hideconstructor\n   */\n  constructor(t) {\n    this._methodName = t;\n  }\n\n}\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * An immutable object representing a geographic location in Firestore. The\n * location is represented as latitude/longitude pair.\n *\n * Latitude values are in the range of [-90, 90].\n * Longitude values are in the range of [-180, 180].\n */\n\n\nclass bn {\n  /**\n   * Creates a new immutable `GeoPoint` object with the provided latitude and\n   * longitude values.\n   * @param latitude - The latitude as number between -90 and 90.\n   * @param longitude - The longitude as number between -180 and 180.\n   */\n  constructor(t, e) {\n    if (!isFinite(t) || t < -90 || t > 90) throw new U(A, \"Latitude must be a number between -90 and 90, but was: \" + t);\n    if (!isFinite(e) || e < -180 || e > 180) throw new U(A, \"Longitude must be a number between -180 and 180, but was: \" + e);\n    this._lat = t, this._long = e;\n  }\n  /**\n   * The latitude of this `GeoPoint` instance.\n   */\n\n\n  get latitude() {\n    return this._lat;\n  }\n  /**\n   * The longitude of this `GeoPoint` instance.\n   */\n\n\n  get longitude() {\n    return this._long;\n  }\n  /**\n   * Returns true if this `GeoPoint` is equal to the provided one.\n   *\n   * @param other - The `GeoPoint` to compare against.\n   * @returns true if this `GeoPoint` is equal to the provided one.\n   */\n\n\n  isEqual(t) {\n    return this._lat === t._lat && this._long === t._long;\n  }\n  /** Returns a JSON-serializable representation of this GeoPoint. */\n\n\n  toJSON() {\n    return {\n      latitude: this._lat,\n      longitude: this._long\n    };\n  }\n  /**\n   * Actually private to JS consumers of our API, so this function is prefixed\n   * with an underscore.\n   */\n\n\n  _compareTo(t) {\n    return yt(this._lat, t._lat) || yt(this._long, t._long);\n  }\n\n}\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\nconst En = /^__.*__$/;\n/** The result of parsing document data (e.g. for a setData call). */\n\nclass Tn {\n  constructor(t, e, n) {\n    this.data = t, this.fieldMask = e, this.fieldTransforms = n;\n  }\n\n  toMutation(t, e) {\n    return null !== this.fieldMask ? new Ie(t, this.data, this.fieldMask, e, this.fieldTransforms) : new Te(t, this.data, e, this.fieldTransforms);\n  }\n\n}\n/** The result of parsing \"update\" data (i.e. for an updateData call). */\n\n\nclass In {\n  constructor(t, // The fieldMask does not include document transforms.\n  e, n) {\n    this.data = t, this.fieldMask = e, this.fieldTransforms = n;\n  }\n\n  toMutation(t, e) {\n    return new Ie(t, this.data, this.fieldMask, e, this.fieldTransforms);\n  }\n\n}\n\nfunction An(t) {\n  switch (t) {\n    case 0\n    /* Set */\n    : // fall through\n\n    case 2\n    /* MergeSet */\n    : // fall through\n\n    case 1\n    /* Update */\n    :\n      return !0;\n\n    case 3\n    /* Argument */\n    :\n    case 4\n    /* ArrayArgument */\n    :\n      return !1;\n\n    default:\n      throw g();\n  }\n}\n/** A \"context\" object passed around while parsing user data. */\n\n\nclass Rn {\n  /**\n   * Initializes a ParseContext with the given source and path.\n   *\n   * @param settings - The settings for the parser.\n   * @param databaseId - The database ID of the Firestore instance.\n   * @param serializer - The serializer to use to generate the Value proto.\n   * @param ignoreUndefinedProperties - Whether to ignore undefined properties\n   * rather than throw.\n   * @param fieldTransforms - A mutable list of field transforms encountered\n   * while parsing the data.\n   * @param fieldMask - A mutable list of field paths encountered while parsing\n   * the data.\n   *\n   * TODO(b/34871131): We don't support array paths right now, so path can be\n   * null to indicate the context represents any location within an array (in\n   * which case certain features will not work and errors will be somewhat\n   * compromised).\n   */\n  constructor(t, e, n, r, s, i) {\n    this.settings = t, this.databaseId = e, this.q = n, this.ignoreUndefinedProperties = r, // Minor hack: If fieldTransforms is undefined, we assume this is an\n    // external call and we need to validate the entire path.\n    void 0 === s && this.Z(), this.fieldTransforms = s || [], this.fieldMask = i || [];\n  }\n\n  get path() {\n    return this.settings.path;\n  }\n\n  get tt() {\n    return this.settings.tt;\n  }\n  /** Returns a new context with the specified settings overwritten. */\n\n\n  et(t) {\n    return new Rn(Object.assign(Object.assign({}, this.settings), t), this.databaseId, this.q, this.ignoreUndefinedProperties, this.fieldTransforms, this.fieldMask);\n  }\n\n  nt(t) {\n    var e;\n    const n = null === (e = this.path) || void 0 === e ? void 0 : e.child(t),\n          r = this.et({\n      path: n,\n      rt: !1\n    });\n    return r.st(t), r;\n  }\n\n  it(t) {\n    var e;\n    const n = null === (e = this.path) || void 0 === e ? void 0 : e.child(t),\n          r = this.et({\n      path: n,\n      rt: !1\n    });\n    return r.Z(), r;\n  }\n\n  ot(t) {\n    // TODO(b/34871131): We don't support array paths right now; so make path\n    // undefined.\n    return this.et({\n      path: void 0,\n      rt: !0\n    });\n  }\n\n  ut(t) {\n    return Qn(t, this.settings.methodName, this.settings.ct || !1, this.path, this.settings.at);\n  }\n  /** Returns 'true' if 'fieldPath' was traversed when creating this context. */\n\n\n  contains(t) {\n    return void 0 !== this.fieldMask.find(e => t.isPrefixOf(e)) || void 0 !== this.fieldTransforms.find(e => t.isPrefixOf(e.field));\n  }\n\n  Z() {\n    // TODO(b/34871131): Remove null check once we have proper paths for fields\n    // within arrays.\n    if (this.path) for (let t = 0; t < this.path.length; t++) this.st(this.path.get(t));\n  }\n\n  st(t) {\n    if (0 === t.length) throw this.ut(\"Document fields must not be empty\");\n    if (An(this.tt) && En.test(t)) throw this.ut('Document fields cannot begin and end with \"__\"');\n  }\n\n}\n/**\n * Helper for parsing raw user input (provided via the API) into internal model\n * classes.\n */\n\n\nclass Pn {\n  constructor(t, e, n) {\n    this.databaseId = t, this.ignoreUndefinedProperties = e, this.q = n || Ye(t);\n  }\n  /** Creates a new top-level parse context. */\n\n\n  ht(t, e, n, r = !1) {\n    return new Rn({\n      tt: t,\n      methodName: e,\n      at: n,\n      path: tt.emptyPath(),\n      rt: !1,\n      ct: r\n    }, this.databaseId, this.q, this.ignoreUndefinedProperties);\n  }\n\n}\n\nfunction Vn(t) {\n  const e = t._freezeSettings(),\n        n = Ye(t._databaseId);\n\n  return new Pn(t._databaseId, !!e.ignoreUndefinedProperties, n);\n}\n/** Parse document data from a set() call. */\n\n\nfunction Dn(t, e, n, r, s, i = {}) {\n  const o = t.ht(i.merge || i.mergeFields ? 2\n  /* MergeSet */\n  : 0\n  /* Set */\n  , e, n, s);\n  Mn(\"Data must be an object, but it was:\", o, r);\n  const u = kn(r, o);\n  let c, a;\n  if (i.merge) c = new Tt(o.fieldMask), a = o.fieldTransforms;else if (i.mergeFields) {\n    const t = [];\n\n    for (const r of i.mergeFields) {\n      const s = Bn(e, r, n);\n      if (!o.contains(s)) throw new U(A, `Field '${s}' is specified in your field mask but missing from your input data.`);\n      Wn(t, s) || t.push(s);\n    }\n\n    c = new Tt(t), a = o.fieldTransforms.filter(t => c.covers(t.field));\n  } else c = null, a = o.fieldTransforms;\n  return new Tn(new Bt(u), c, a);\n}\n\nclass Nn extends vn {\n  _toFieldTransform(t) {\n    if (2\n    /* MergeSet */\n    !== t.tt) throw 1\n    /* Update */\n    === t.tt ? t.ut(`${this._methodName}() can only appear at the top level of your update data`) : t.ut(`${this._methodName}() cannot be used with set() unless you pass {merge:true}`); // No transform to add for a delete, but we need to add it to our\n    // fieldMask so it gets deleted.\n\n    return t.fieldMask.push(t.path), null;\n  }\n\n  isEqual(t) {\n    return t instanceof Nn;\n  }\n\n}\n/**\n * Creates a child context for parsing SerializableFieldValues.\n *\n * This is different than calling `ParseContext.contextWith` because it keeps\n * the fieldTransforms and fieldMask separate.\n *\n * The created context has its `dataSource` set to `UserDataSource.Argument`.\n * Although these values are used with writes, any elements in these FieldValues\n * are not considered writes since they cannot contain any FieldValue sentinels,\n * etc.\n *\n * @param fieldValue - The sentinel FieldValue for which to create a child\n *     context.\n * @param context - The parent context.\n * @param arrayElement - Whether or not the FieldValue has an array.\n */\n\n\nfunction $n(t, e, n) {\n  return new Rn({\n    tt: 3\n    /* Argument */\n    ,\n    at: e.settings.at,\n    methodName: t._methodName,\n    rt: n\n  }, e.databaseId, e.q, e.ignoreUndefinedProperties);\n}\n\nclass Sn extends vn {\n  _toFieldTransform(t) {\n    return new ve(t.path, new pe());\n  }\n\n  isEqual(t) {\n    return t instanceof Sn;\n  }\n\n}\n\nclass Fn extends vn {\n  constructor(t, e) {\n    super(t), this.lt = e;\n  }\n\n  _toFieldTransform(t) {\n    const e = $n(this, t,\n    /*array=*/\n    !0),\n          n = this.lt.map(t => Un(t, e)),\n          r = new ye(n);\n    return new ve(t.path, r);\n  }\n\n  isEqual(t) {\n    // TODO(mrschmidt): Implement isEquals\n    return this === t;\n  }\n\n}\n\nclass xn extends vn {\n  constructor(t, e) {\n    super(t), this.lt = e;\n  }\n\n  _toFieldTransform(t) {\n    const e = $n(this, t,\n    /*array=*/\n    !0),\n          n = this.lt.map(t => Un(t, e)),\n          r = new _e(n);\n    return new ve(t.path, r);\n  }\n\n  isEqual(t) {\n    // TODO(mrschmidt): Implement isEquals\n    return this === t;\n  }\n\n}\n\nclass qn extends vn {\n  constructor(t, e) {\n    super(t), this.ft = e;\n  }\n\n  _toFieldTransform(t) {\n    const e = new ge(t.q, we(t.q, this.ft));\n    return new ve(t.path, e);\n  }\n\n  isEqual(t) {\n    // TODO(mrschmidt): Implement isEquals\n    return this === t;\n  }\n\n}\n/** Parse update data from an update() call. */\n\n\nfunction On(t, e, n, r) {\n  const s = t.ht(1\n  /* Update */\n  , e, n);\n  Mn(\"Data must be an object, but it was:\", s, r);\n  const i = [],\n        o = Bt.empty();\n  Et(r, (t, r) => {\n    const u = Gn(e, t, n); // For Compat types, we have to \"extract\" the underlying types before\n    // performing validation.\n\n    r = getModularInstance(r);\n    const c = s.it(u);\n    if (r instanceof Nn) // Add it to the field mask, but don't add anything to updateData.\n      i.push(u);else {\n      const t = Un(r, c);\n      null != t && (i.push(u), o.set(u, t));\n    }\n  });\n  const u = new Tt(i);\n  return new In(o, u, s.fieldTransforms);\n}\n/** Parse update data from a list of field/value arguments. */\n\n\nfunction Cn(t, e, n, r, s, i) {\n  const o = t.ht(1\n  /* Update */\n  , e, n),\n        u = [Bn(e, r, n)],\n        c = [s];\n  if (i.length % 2 != 0) throw new U(A, `Function ${e}() needs to be called with an even number of arguments that alternate between field names and values.`);\n\n  for (let t = 0; t < i.length; t += 2) u.push(Bn(e, i[t])), c.push(i[t + 1]);\n\n  const a = [],\n        l = Bt.empty(); // We iterate in reverse order to pick the last value for a field if the\n  // user specified the field multiple times.\n\n  for (let t = u.length - 1; t >= 0; --t) if (!Wn(a, u[t])) {\n    const e = u[t];\n    let n = c[t]; // For Compat types, we have to \"extract\" the underlying types before\n    // performing validation.\n\n    n = getModularInstance(n);\n    const r = o.it(e);\n    if (n instanceof Nn) // Add it to the field mask, but don't add anything to updateData.\n      a.push(e);else {\n      const t = Un(n, r);\n      null != t && (a.push(e), l.set(e, t));\n    }\n  }\n\n  const f = new Tt(a);\n  return new In(l, f, o.fieldTransforms);\n}\n/**\n * Parse a \"query value\" (e.g. value in a where filter or a value in a cursor\n * bound).\n *\n * @param allowArrays - Whether the query value is an array that may directly\n * contain additional arrays (e.g. the operand of an `in` query).\n */\n\n\nfunction Ln(t, e, n, r = !1) {\n  return Un(n, t.ht(r ? 4\n  /* ArrayArgument */\n  : 3\n  /* Argument */\n  , e));\n}\n/**\n * Parses user data to Protobuf Values.\n *\n * @param input - Data to be parsed.\n * @param context - A context object representing the current path being parsed,\n * the source of the data being parsed, etc.\n * @returns The parsed value, or null if the value was a FieldValue sentinel\n * that should not be included in the resulting parsed data.\n */\n\n\nfunction Un(t, e) {\n  if (jn( // Unwrap the API type from the Compat SDK. This will return the API type\n  // from firestore-exp.\n  t = getModularInstance(t))) return Mn(\"Unsupported field value:\", e, t), kn(t, e);\n  if (t instanceof vn) // FieldValues usually parse into transforms (except deleteField())\n    // in which case we do not want to include this field in our parsed data\n    // (as doing so will overwrite the field directly prior to the transform\n    // trying to transform it). So we don't add this location to\n    // context.fieldMask and we return null as our parsing result.\n\n    /**\n    * \"Parses\" the provided FieldValueImpl, adding any necessary transforms to\n    * context.fieldTransforms.\n    */\n    return function (t, e) {\n      // Sentinels are only supported with writes, and not within arrays.\n      if (!An(e.tt)) throw e.ut(`${t._methodName}() can only be used with update() and set()`);\n      if (!e.path) throw e.ut(`${t._methodName}() is not currently supported inside arrays`);\n\n      const n = t._toFieldTransform(e);\n\n      n && e.fieldTransforms.push(n);\n    }\n    /**\n    * Helper to parse a scalar value (i.e. not an Object, Array, or FieldValue)\n    *\n    * @returns The parsed value\n    */\n    (t, e), null;\n  if (void 0 === t && e.ignoreUndefinedProperties) // If the input is undefined it can never participate in the fieldMask, so\n    // don't handle this below. If `ignoreUndefinedProperties` is false,\n    // `parseScalarValue` will reject an undefined value.\n    return null;\n\n  if ( // If context.path is null we are inside an array and we don't support\n  // field mask paths more granular than the top-level array.\n  e.path && e.fieldMask.push(e.path), t instanceof Array) {\n    // TODO(b/34871131): Include the path containing the array in the error\n    // message.\n    // In the case of IN queries, the parsed data is an array (representing\n    // the set of values to be included for the IN query) that may directly\n    // contain additional arrays (each representing an individual field\n    // value), so we disable this validation.\n    if (e.settings.rt && 4\n    /* ArrayArgument */\n    !== e.tt) throw e.ut(\"Nested arrays are not supported\");\n    return function (t, e) {\n      const n = [];\n      let r = 0;\n\n      for (const s of t) {\n        let t = Un(s, e.ot(r));\n        null == t && ( // Just include nulls in the array for fields being replaced with a\n        // sentinel.\n        t = {\n          nullValue: \"NULL_VALUE\"\n        }), n.push(t), r++;\n      }\n\n      return {\n        arrayValue: {\n          values: n\n        }\n      };\n    }(t, e);\n  }\n\n  return function (t, e) {\n    if (null === (t = getModularInstance(t))) return {\n      nullValue: \"NULL_VALUE\"\n    };\n    if (\"number\" == typeof t) return we(e.q, t);\n    if (\"boolean\" == typeof t) return {\n      booleanValue: t\n    };\n    if (\"string\" == typeof t) return {\n      stringValue: t\n    };\n\n    if (t instanceof Date) {\n      const n = gt.fromDate(t);\n      return {\n        timestampValue: Ne(e.q, n)\n      };\n    }\n\n    if (t instanceof gt) {\n      // Firestore backend truncates precision down to microseconds. To ensure\n      // offline mode works the same with regards to truncation, perform the\n      // truncation immediately without waiting for the backend to do that.\n      const n = new gt(t.seconds, 1e3 * Math.floor(t.nanoseconds / 1e3));\n      return {\n        timestampValue: Ne(e.q, n)\n      };\n    }\n\n    if (t instanceof bn) return {\n      geoPointValue: {\n        latitude: t.latitude,\n        longitude: t.longitude\n      }\n    };\n    if (t instanceof gn) return {\n      bytesValue: $e(e.q, t._byteString)\n    };\n\n    if (t instanceof an) {\n      const n = e.databaseId,\n            r = t.firestore._databaseId;\n      if (!r.isEqual(n)) throw e.ut(`Document reference is for database ${r.projectId}/${r.database} but should be for database ${n.projectId}/${n.database}`);\n      return {\n        referenceValue: xe(t.firestore._databaseId || e.databaseId, t._key.path)\n      };\n    }\n\n    throw e.ut(`Unsupported field value: ${it(t)}`);\n  }\n  /**\n  * Checks whether an object looks like a JSON object that should be converted\n  * into a struct. Normal class/prototype instances are considered to look like\n  * JSON objects since they should be converted to a struct value. Arrays, Dates,\n  * GeoPoints, etc. are not considered to look like JSON objects since they map\n  * to specific FieldValue types other than ObjectValue.\n  */\n  (t, e);\n}\n\nfunction kn(t, e) {\n  const n = {};\n  return !function (t) {\n    for (const e in t) if (Object.prototype.hasOwnProperty.call(t, e)) return !1;\n\n    return !0;\n  }(t) ? Et(t, (t, r) => {\n    const s = Un(r, e.nt(t));\n    null != s && (n[t] = s);\n  }) : // If we encounter an empty object, we explicitly add it to the update\n  // mask to ensure that the server creates a map entry.\n  e.path && e.path.length > 0 && e.fieldMask.push(e.path), {\n    mapValue: {\n      fields: n\n    }\n  };\n}\n\nfunction jn(t) {\n  return !(\"object\" != typeof t || null === t || t instanceof Array || t instanceof Date || t instanceof gt || t instanceof bn || t instanceof gn || t instanceof an || t instanceof vn);\n}\n\nfunction Mn(t, e, n) {\n  if (!jn(n) || !function (t) {\n    return \"object\" == typeof t && null !== t && (Object.getPrototypeOf(t) === Object.prototype || null === Object.getPrototypeOf(t));\n  }(n)) {\n    const r = it(n);\n    throw \"an object\" === r ? e.ut(t + \" a custom object\") : e.ut(t + \" \" + r);\n  }\n}\n/**\n * Helper that calls fromDotSeparatedString() but wraps any error thrown.\n */\n\n\nfunction Bn(t, e, n) {\n  if (( // If required, replace the FieldPath Compat class with with the firestore-exp\n  // FieldPath.\n  e = getModularInstance(e)) instanceof yn) return e._internalPath;\n  if (\"string\" == typeof e) return Gn(t, e);\n  throw Qn(\"Field path arguments must be of type string or \", t,\n  /* hasConverter= */\n  !1,\n  /* path= */\n  void 0, n);\n}\n/**\n * Matches any characters in a field path string that are reserved.\n */\n\n\nconst zn = new RegExp(\"[~\\\\*/\\\\[\\\\]]\");\n/**\n * Wraps fromDotSeparatedString with an error message about the method that\n * was thrown.\n * @param methodName - The publicly visible method name\n * @param path - The dot-separated string form of a field path which will be\n * split on dots.\n * @param targetDoc - The document against which the field path will be\n * evaluated.\n */\n\nfunction Gn(t, e, n) {\n  if (e.search(zn) >= 0) throw Qn(`Invalid field path (${e}). Paths must not contain '~', '*', '/', '[', or ']'`, t,\n  /* hasConverter= */\n  !1,\n  /* path= */\n  void 0, n);\n\n  try {\n    return new yn(...e.split(\".\"))._internalPath;\n  } catch (r) {\n    throw Qn(`Invalid field path (${e}). Paths must not be empty, begin with '.', end with '.', or contain '..'`, t,\n    /* hasConverter= */\n    !1,\n    /* path= */\n    void 0, n);\n  }\n}\n\nfunction Qn(t, e, n, r, s) {\n  const i = r && !r.isEmpty(),\n        o = void 0 !== s;\n  let u = `Function ${e}() called with invalid data`;\n  n && (u += \" (via `toFirestore()`)\"), u += \". \";\n  let c = \"\";\n  return (i || o) && (c += \" (found\", i && (c += ` in field ${r}`), o && (c += ` in document ${s}`), c += \")\"), new U(A, u + t + c);\n}\n/** Checks `haystack` if FieldPath `needle` is present. Runs in O(n). */\n\n\nfunction Wn(t, e) {\n  return t.some(t => t.isEqual(e));\n}\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * A `DocumentSnapshot` contains data read from a document in your Firestore\n * database. The data can be extracted with `.data()` or `.get(<field>)` to\n * get a specific field.\n *\n * For a `DocumentSnapshot` that points to a non-existing document, any data\n * access will return 'undefined'. You can use the `exists()` method to\n * explicitly verify a document's existence.\n */\n\n\nclass Yn {\n  // Note: This class is stripped down version of the DocumentSnapshot in\n  // the legacy SDK. The changes are:\n  // - No support for SnapshotMetadata.\n  // - No support for SnapshotOptions.\n\n  /** @hideconstructor protected */\n  constructor(t, e, n, r, s) {\n    this._firestore = t, this._userDataWriter = e, this._key = n, this._document = r, this._converter = s;\n  }\n  /** Property of the `DocumentSnapshot` that provides the document's ID. */\n\n\n  get id() {\n    return this._key.path.lastSegment();\n  }\n  /**\n   * The `DocumentReference` for the document included in the `DocumentSnapshot`.\n   */\n\n\n  get ref() {\n    return new an(this._firestore, this._converter, this._key);\n  }\n  /**\n   * Signals whether or not the document at the snapshot's location exists.\n   *\n   * @returns true if the document exists.\n   */\n\n\n  exists() {\n    return null !== this._document;\n  }\n  /**\n   * Retrieves all fields in the document as an `Object`. Returns `undefined` if\n   * the document doesn't exist.\n   *\n   * @returns An `Object` containing all fields in the document or `undefined`\n   * if the document doesn't exist.\n   */\n\n\n  data() {\n    if (this._document) {\n      if (this._converter) {\n        // We only want to use the converter and create a new DocumentSnapshot\n        // if a converter has been provided.\n        const t = new Hn(this._firestore, this._userDataWriter, this._key, this._document,\n        /* converter= */\n        null);\n        return this._converter.fromFirestore(t);\n      }\n\n      return this._userDataWriter.convertValue(this._document.data.value);\n    }\n  }\n  /**\n   * Retrieves the field specified by `fieldPath`. Returns `undefined` if the\n   * document or field doesn't exist.\n   *\n   * @param fieldPath - The path (for example 'foo' or 'foo.bar') to a specific\n   * field.\n   * @returns The data at the specified field location or undefined if no such\n   * field exists in the document.\n   */\n  // We are using `any` here to avoid an explicit cast by our users.\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n\n\n  get(t) {\n    if (this._document) {\n      const e = this._document.data.field(Xn(\"DocumentSnapshot.get\", t));\n\n      if (null !== e) return this._userDataWriter.convertValue(e);\n    }\n  }\n\n}\n/**\n * A `QueryDocumentSnapshot` contains data read from a document in your\n * Firestore database as part of a query. The document is guaranteed to exist\n * and its data can be extracted with `.data()` or `.get(<field>)` to get a\n * specific field.\n *\n * A `QueryDocumentSnapshot` offers the same API surface as a\n * `DocumentSnapshot`. Since query results contain only existing documents, the\n * `exists` property will always be true and `data()` will never return\n * 'undefined'.\n */\n\n\nclass Hn extends Yn {\n  /**\n   * Retrieves all fields in the document as an `Object`.\n   *\n   * @override\n   * @returns An `Object` containing all fields in the document.\n   */\n  data() {\n    return super.data();\n  }\n\n}\n/**\n * A `QuerySnapshot` contains zero or more `DocumentSnapshot` objects\n * representing the results of a query. The documents can be accessed as an\n * array via the `docs` property or enumerated using the `forEach` method. The\n * number of documents can be determined via the `empty` and `size`\n * properties.\n */\n\n\nclass Kn {\n  /** @hideconstructor */\n  constructor(t, e) {\n    this._docs = e, this.query = t;\n  }\n  /** An array of all the documents in the `QuerySnapshot`. */\n\n\n  get docs() {\n    return [...this._docs];\n  }\n  /** The number of documents in the `QuerySnapshot`. */\n\n\n  get size() {\n    return this.docs.length;\n  }\n  /** True if there are no documents in the `QuerySnapshot`. */\n\n\n  get empty() {\n    return 0 === this.docs.length;\n  }\n  /**\n   * Enumerates all of the documents in the `QuerySnapshot`.\n   *\n   * @param callback - A callback to be called with a `QueryDocumentSnapshot` for\n   * each document in the snapshot.\n   * @param thisArg - The `this` binding for the callback.\n   */\n\n\n  forEach(t, e) {\n    this._docs.forEach(t, e);\n  }\n\n}\n/**\n * Returns true if the provided snapshots are equal.\n *\n * @param left - A snapshot to compare.\n * @param right - A snapshot to compare.\n * @returns true if the snapshots are equal.\n */\n\n\nfunction Jn(t, e) {\n  return t = getModularInstance(t), e = getModularInstance(e), t instanceof Yn && e instanceof Yn ? t._firestore === e._firestore && t._key.isEqual(e._key) && (null === t._document ? null === e._document : t._document.isEqual(e._document)) && t._converter === e._converter : t instanceof Kn && e instanceof Kn && pn(t.query, e.query) && _t(t.docs, e.docs, Jn);\n}\n/**\n * Helper that calls `fromDotSeparatedString()` but wraps any error thrown.\n */\n\n\nfunction Xn(t, e) {\n  return \"string\" == typeof e ? Gn(t, e) : e instanceof yn ? e._internalPath : e._delegate._internalPath;\n}\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * A `QueryConstraint` is used to narrow the set of documents returned by a\n * Firestore query. `QueryConstraint`s are created by invoking {@link where},\n * {@link orderBy}, {@link (startAt:1)}, {@link (startAfter:1)}, {@link\n * endBefore:1}, {@link (endAt:1)}, {@link limit} or {@link limitToLast} and\n * can then be passed to {@link query} to create a new query instance that\n * also contains this `QueryConstraint`.\n */\n\n\nclass Zn {}\n/**\n * Creates a new immutable instance of {@link Query} that is extended to also include\n * additional query constraints.\n *\n * @param query - The {@link Query} instance to use as a base for the new constraints.\n * @param queryConstraints - The list of {@link QueryConstraint}s to apply.\n * @throws if any of the provided query constraints cannot be combined with the\n * existing or new constraints.\n */\n\n\nfunction tr(t, ...e) {\n  for (const n of e) t = n._apply(t);\n\n  return t;\n}\n\nclass er extends Zn {\n  constructor(t, e, n) {\n    super(), this.dt = t, this.wt = e, this.yt = n, this.type = \"where\";\n  }\n\n  _apply(t) {\n    const e = Vn(t.firestore),\n          n = function (t, e, n, r, s, i, o) {\n      let u;\n\n      if (s.isKeyField()) {\n        if (\"array-contains\"\n        /* ARRAY_CONTAINS */\n        === i || \"array-contains-any\"\n        /* ARRAY_CONTAINS_ANY */\n        === i) throw new U(A, `Invalid Query. You can't perform '${i}' queries on documentId().`);\n\n        if (\"in\"\n        /* IN */\n        === i || \"not-in\"\n        /* NOT_IN */\n        === i) {\n          pr(o, i);\n          const e = [];\n\n          for (const n of o) e.push(mr(r, t, n));\n\n          u = {\n            arrayValue: {\n              values: e\n            }\n          };\n        } else u = mr(r, t, o);\n      } else \"in\"\n      /* IN */\n      !== i && \"not-in\"\n      /* NOT_IN */\n      !== i && \"array-contains-any\"\n      /* ARRAY_CONTAINS_ANY */\n      !== i || pr(o, i), u = Ln(n, e, o,\n      /* allowArrays= */\n      \"in\"\n      /* IN */\n      === i || \"not-in\"\n      /* NOT_IN */\n      === i);\n\n      const c = Wt.create(s, i, u);\n      return function (t, e) {\n        if (e.N()) {\n          const n = ae(t);\n          if (null !== n && !n.isEqual(e.field)) throw new U(A, `Invalid query. All where filters with an inequality (<, <=, !=, not-in, >, or >=) must be on the same field. But you have inequality filters on '${n.toString()}' and '${e.field.toString()}'`);\n          const r = ce(t);\n          null !== r && yr(t, e.field, r);\n        }\n\n        const n = function (t, e) {\n          for (const n of t.filters) if (e.indexOf(n.op) >= 0) return n.op;\n\n          return null;\n        }(t,\n        /**\n        * Given an operator, returns the set of operators that cannot be used with it.\n        *\n        * Operators in a query must adhere to the following set of rules:\n        * 1. Only one array operator is allowed.\n        * 2. Only one disjunctive operator is allowed.\n        * 3. `NOT_EQUAL` cannot be used with another `NOT_EQUAL` operator.\n        * 4. `NOT_IN` cannot be used with array, disjunctive, or `NOT_EQUAL` operators.\n        *\n        * Array operators: `ARRAY_CONTAINS`, `ARRAY_CONTAINS_ANY`\n        * Disjunctive operators: `IN`, `ARRAY_CONTAINS_ANY`, `NOT_IN`\n        */\n        function (t) {\n          switch (t) {\n            case \"!=\"\n            /* NOT_EQUAL */\n            :\n              return [\"!=\"\n              /* NOT_EQUAL */\n              , \"not-in\"\n              /* NOT_IN */\n              ];\n\n            case \"array-contains\"\n            /* ARRAY_CONTAINS */\n            :\n              return [\"array-contains\"\n              /* ARRAY_CONTAINS */\n              , \"array-contains-any\"\n              /* ARRAY_CONTAINS_ANY */\n              , \"not-in\"\n              /* NOT_IN */\n              ];\n\n            case \"in\"\n            /* IN */\n            :\n              return [\"array-contains-any\"\n              /* ARRAY_CONTAINS_ANY */\n              , \"in\"\n              /* IN */\n              , \"not-in\"\n              /* NOT_IN */\n              ];\n\n            case \"array-contains-any\"\n            /* ARRAY_CONTAINS_ANY */\n            :\n              return [\"array-contains\"\n              /* ARRAY_CONTAINS */\n              , \"array-contains-any\"\n              /* ARRAY_CONTAINS_ANY */\n              , \"in\"\n              /* IN */\n              , \"not-in\"\n              /* NOT_IN */\n              ];\n\n            case \"not-in\"\n            /* NOT_IN */\n            :\n              return [\"array-contains\"\n              /* ARRAY_CONTAINS */\n              , \"array-contains-any\"\n              /* ARRAY_CONTAINS_ANY */\n              , \"in\"\n              /* IN */\n              , \"not-in\"\n              /* NOT_IN */\n              , \"!=\"\n              /* NOT_EQUAL */\n              ];\n\n            default:\n              return [];\n          }\n        }(e.op));\n\n        if (null !== n) // Special case when it's a duplicate op to give a slightly clearer error message.\n          throw n === e.op ? new U(A, `Invalid query. You cannot use more than one '${e.op.toString()}' filter.`) : new U(A, `Invalid query. You cannot use '${e.op.toString()}' filters with '${n.toString()}' filters.`);\n      }(t, c), c;\n    }(t._query, \"where\", e, t.firestore._databaseId, this.dt, this.wt, this.yt);\n\n    return new hn(t.firestore, t.converter, function (t, e) {\n      const n = t.filters.concat([e]);\n      return new oe(t.path, t.collectionGroup, t.explicitOrderBy.slice(), n, t.limit, t.limitType, t.startAt, t.endAt);\n    }(t._query, n));\n  }\n\n}\n/**\n * Creates a {@link QueryConstraint} that enforces that documents must contain the\n * specified field and that the value should satisfy the relation constraint\n * provided.\n *\n * @param fieldPath - The path to compare\n * @param opStr - The operation string (e.g \"&lt;\", \"&lt;=\", \"==\", \"&lt;\",\n *   \"&lt;=\", \"!=\").\n * @param value - The value for comparison\n * @returns The created {@link Query}.\n */\n\n\nfunction nr(t, e, n) {\n  const r = e,\n        s = Xn(\"where\", t);\n  return new er(s, r, n);\n}\n\nclass rr extends Zn {\n  constructor(t, e) {\n    super(), this.dt = t, this._t = e, this.type = \"orderBy\";\n  }\n\n  _apply(t) {\n    const e = function (t, e, n) {\n      if (null !== t.startAt) throw new U(A, \"Invalid query. You must not call startAt() or startAfter() before calling orderBy().\");\n      if (null !== t.endAt) throw new U(A, \"Invalid query. You must not call endAt() or endBefore() before calling orderBy().\");\n      const r = new re(e, n);\n      return function (t, e) {\n        if (null === ce(t)) {\n          // This is the first order by. It must match any inequality.\n          const n = ae(t);\n          null !== n && yr(t, n, e.field);\n        }\n      }(t, r), r;\n    }\n    /**\n    * Create a `Bound` from a query and a document.\n    *\n    * Note that the `Bound` will always include the key of the document\n    * and so only the provided document will compare equal to the returned\n    * position.\n    *\n    * Will throw if the document does not contain all fields of the order by\n    * of the query or if any of the fields in the order by are an uncommitted\n    * server timestamp.\n    */\n    (t._query, this.dt, this._t);\n\n    return new hn(t.firestore, t.converter, function (t, e) {\n      // TODO(dimond): validate that orderBy does not list the same key twice.\n      const n = t.explicitOrderBy.concat([e]);\n      return new oe(t.path, t.collectionGroup, n, t.filters.slice(), t.limit, t.limitType, t.startAt, t.endAt);\n    }(t._query, e));\n  }\n\n}\n/**\n * Creates a {@link QueryConstraint} that sorts the query result by the\n * specified field, optionally in descending order instead of ascending.\n *\n * @param fieldPath - The field to sort by.\n * @param directionStr - Optional direction to sort by ('asc' or 'desc'). If\n * not specified, order will be ascending.\n * @returns The created {@link Query}.\n */\n\n\nfunction sr(t, e = \"asc\") {\n  const n = e,\n        r = Xn(\"orderBy\", t);\n  return new rr(r, n);\n}\n\nclass ir extends Zn {\n  constructor(t, e, n) {\n    super(), this.type = t, this.gt = e, this.vt = n;\n  }\n\n  _apply(t) {\n    return new hn(t.firestore, t.converter, function (t, e, n) {\n      return new oe(t.path, t.collectionGroup, t.explicitOrderBy.slice(), t.filters.slice(), e, n, t.startAt, t.endAt);\n    }(t._query, this.gt, this.vt));\n  }\n\n}\n/**\n * Creates a {@link QueryConstraint} that only returns the first matching documents.\n *\n * @param limit - The maximum number of items to return.\n * @returns The created {@link Query}.\n */\n\n\nfunction or(t) {\n  return ut(\"limit\", t), new ir(\"limit\", t, \"F\"\n  /* First */\n  );\n}\n/**\n * Creates a {@link QueryConstraint} that only returns the last matching documents.\n *\n * You must specify at least one `orderBy` clause for `limitToLast` queries,\n * otherwise an exception will be thrown during execution.\n *\n * @param limit - The maximum number of items to return.\n * @returns The created {@link Query}.\n */\n\n\nfunction ur(t) {\n  return ut(\"limitToLast\", t), new ir(\"limitToLast\", t, \"L\"\n  /* Last */\n  );\n}\n\nclass cr extends Zn {\n  constructor(t, e, n) {\n    super(), this.type = t, this.bt = e, this.Et = n;\n  }\n\n  _apply(t) {\n    const e = wr(t, this.type, this.bt, this.Et);\n    return new hn(t.firestore, t.converter, function (t, e) {\n      return new oe(t.path, t.collectionGroup, t.explicitOrderBy.slice(), t.filters.slice(), t.limit, t.limitType, e, t.endAt);\n    }(t._query, e));\n  }\n\n}\n\nfunction ar(...t) {\n  return new cr(\"startAt\", t,\n  /*inclusive=*/\n  !0);\n}\n\nfunction hr(...t) {\n  return new cr(\"startAfter\", t,\n  /*inclusive=*/\n  !1);\n}\n\nclass lr extends Zn {\n  constructor(t, e, n) {\n    super(), this.type = t, this.bt = e, this.Et = n;\n  }\n\n  _apply(t) {\n    const e = wr(t, this.type, this.bt, this.Et);\n    return new hn(t.firestore, t.converter, function (t, e) {\n      return new oe(t.path, t.collectionGroup, t.explicitOrderBy.slice(), t.filters.slice(), t.limit, t.limitType, t.startAt, e);\n    }(t._query, e));\n  }\n\n}\n\nfunction fr(...t) {\n  return new lr(\"endBefore\", t,\n  /*inclusive=*/\n  !1);\n}\n\nfunction dr(...t) {\n  return new lr(\"endAt\", t,\n  /*inclusive=*/\n  !0);\n}\n/** Helper function to create a bound from a document or fields */\n\n\nfunction wr(t, e, n, r) {\n  if (n[0] = getModularInstance(n[0]), n[0] instanceof Yn) return function (t, e, n, r, s) {\n    if (!r) throw new U(P, `Can't use a DocumentSnapshot that doesn't exist for ${n}().`);\n    const i = []; // Because people expect to continue/end a query at the exact document\n    // provided, we need to use the implicit sort order rather than the explicit\n    // sort order, because it's guaranteed to contain the document key. That way\n    // the position becomes unambiguous and the query continues/ends exactly at\n    // the provided document. Without the key (by using the explicit sort\n    // orders), multiple documents could match the position, yielding duplicate\n    // results.\n\n    for (const n of le(t)) if (n.field.isKeyField()) i.push(Ct(e, r.key));else {\n      const t = r.data.field(n.field);\n      if (Dt(t)) throw new U(A, 'Invalid query. You are trying to start or end a query using a document for which the field \"' + n.field + '\" is an uncommitted server timestamp. (Since the value of this field is unknown, you cannot start/end a query with it.)');\n\n      if (null === t) {\n        const t = n.field.canonicalString();\n        throw new U(A, `Invalid query. You are trying to start or end a query using a document for which the field '${t}' (used as the orderBy) does not exist.`);\n      }\n\n      i.push(t);\n    }\n\n    return new ne(i, s);\n  }\n  /**\n  * Converts a list of field values to a `Bound` for the given query.\n  */\n  (t._query, t.firestore._databaseId, e, n[0]._document, r);\n  {\n    const s = Vn(t.firestore);\n    return function (t, e, n, r, s, i) {\n      // Use explicit order by's because it has to match the query the user made\n      const o = t.explicitOrderBy;\n      if (s.length > o.length) throw new U(A, `Too many arguments provided to ${r}(). The number of arguments must be less than or equal to the number of orderBy() clauses`);\n      const u = [];\n\n      for (let i = 0; i < s.length; i++) {\n        const c = s[i];\n\n        if (o[i].field.isKeyField()) {\n          if (\"string\" != typeof c) throw new U(A, `Invalid query. Expected a string for document ID in ${r}(), but got a ${typeof c}`);\n          if (!he(t) && -1 !== c.indexOf(\"/\")) throw new U(A, `Invalid query. When querying a collection and ordering by documentId(), the value passed to ${r}() must be a plain document ID, but '${c}' contains a slash.`);\n          const n = t.path.child(X.fromString(c));\n          if (!et.isDocumentKey(n)) throw new U(A, `Invalid query. When querying a collection group and ordering by documentId(), the value passed to ${r}() must result in a valid document path, but '${n}' is not because it contains an odd number of segments.`);\n          const s = new et(n);\n          u.push(Ct(e, s));\n        } else {\n          const t = Ln(n, r, c);\n          u.push(t);\n        }\n      }\n\n      return new ne(u, i);\n    }\n    /**\n    * Parses the given `documentIdValue` into a `ReferenceValue`, throwing\n    * appropriate errors if the value is anything other than a `DocumentReference`\n    * or `string`, or if the string is malformed.\n    */\n    (t._query, t.firestore._databaseId, s, e, n, r);\n  }\n}\n\nfunction mr(t, e, n) {\n  if (\"string\" == typeof (n = getModularInstance(n))) {\n    if (\"\" === n) throw new U(A, \"Invalid query. When querying with documentId(), you must provide a valid document ID, but it was an empty string.\");\n    if (!he(e) && -1 !== n.indexOf(\"/\")) throw new U(A, `Invalid query. When querying a collection by documentId(), you must provide a plain document ID, but '${n}' contains a '/' character.`);\n    const r = e.path.child(X.fromString(n));\n    if (!et.isDocumentKey(r)) throw new U(A, `Invalid query. When querying a collection group by documentId(), the value provided must result in a valid document path, but '${r}' is not because it has an odd number of segments (${r.length}).`);\n    return Ct(t, new et(r));\n  }\n\n  if (n instanceof an) return Ct(t, n._key);\n  throw new U(A, `Invalid query. When querying with documentId(), you must provide a valid string or a DocumentReference, but it was: ${it(n)}.`);\n}\n/**\n * Validates that the value passed into a disjunctive filter satisfies all\n * array requirements.\n */\n\n\nfunction pr(t, e) {\n  if (!Array.isArray(t) || 0 === t.length) throw new U(A, `Invalid Query. A non-empty array is required for '${e.toString()}' filters.`);\n  if (t.length > 10) throw new U(A, `Invalid Query. '${e.toString()}' filters support a maximum of 10 elements in the value array.`);\n}\n\nfunction yr(t, e, n) {\n  if (!n.isEqual(e)) throw new U(A, `Invalid query. You have a where filter with an inequality (<, <=, !=, not-in, >, or >=) on field '${e.toString()}' and so you must also use '${e.toString()}' as your first argument to orderBy(), but your first orderBy() is on field '${n.toString()}' instead.`);\n}\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Converts Firestore's internal types to the JavaScript types that we expose\n * to the user.\n *\n * @internal\n */\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Converts custom model object of type T into `DocumentData` by applying the\n * converter if it exists.\n *\n * This function is used when converting user objects to `DocumentData`\n * because we want to provide the user with a more specific error message if\n * their `set()` or fails due to invalid data originating from a `toFirestore()`\n * call.\n */\n\n\nfunction _r(t, e, n) {\n  let r; // Cast to `any` in order to satisfy the union type constraint on\n  // toFirestore().\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n\n  return r = t ? n && (n.merge || n.mergeFields) ? t.toFirestore(e, n) : t.toFirestore(e) : e, r;\n}\n\nclass gr extends class {\n  convertValue(t, e = \"none\") {\n    switch (St(t)) {\n      case 0\n      /* NullValue */\n      :\n        return null;\n\n      case 1\n      /* BooleanValue */\n      :\n        return t.booleanValue;\n\n      case 2\n      /* NumberValue */\n      :\n        return Pt(t.integerValue || t.doubleValue);\n\n      case 3\n      /* TimestampValue */\n      :\n        return this.convertTimestamp(t.timestampValue);\n\n      case 4\n      /* ServerTimestampValue */\n      :\n        return this.convertServerTimestamp(t, e);\n\n      case 5\n      /* StringValue */\n      :\n        return t.stringValue;\n\n      case 6\n      /* BlobValue */\n      :\n        return this.convertBytes(Vt(t.bytesValue));\n\n      case 7\n      /* RefValue */\n      :\n        return this.convertReference(t.referenceValue);\n\n      case 8\n      /* GeoPointValue */\n      :\n        return this.convertGeoPoint(t.geoPointValue);\n\n      case 9\n      /* ArrayValue */\n      :\n        return this.convertArray(t.arrayValue, e);\n\n      case 10\n      /* ObjectValue */\n      :\n        return this.convertObject(t.mapValue, e);\n\n      default:\n        throw g();\n    }\n  }\n\n  convertObject(t, e) {\n    const n = {};\n    return Et(t.fields, (t, r) => {\n      n[t] = this.convertValue(r, e);\n    }), n;\n  }\n\n  convertGeoPoint(t) {\n    return new bn(Pt(t.latitude), Pt(t.longitude));\n  }\n\n  convertArray(t, e) {\n    return (t.values || []).map(t => this.convertValue(t, e));\n  }\n\n  convertServerTimestamp(t, e) {\n    switch (e) {\n      case \"previous\":\n        const n = Nt(t);\n        return null == n ? null : this.convertValue(n, e);\n\n      case \"estimate\":\n        return this.convertTimestamp($t(t));\n\n      default:\n        return null;\n    }\n  }\n\n  convertTimestamp(t) {\n    const e = Rt(t);\n    return new gt(e.seconds, e.nanos);\n  }\n\n  convertDocumentKey(t, e) {\n    const n = X.fromString(t);\n    v(We(n));\n    const r = new K(n.get(1), n.get(3)),\n          s = new et(n.popFirst(5));\n    return r.isEqual(e) || // TODO(b/64130202): Somehow support foreign references.\n    p(`Document ${s} contains a document reference within a different database (${r.projectId}/${r.database}) which is not supported. It will be treated as a reference in the current database (${e.projectId}/${e.database}) instead.`), s;\n  }\n\n} {\n  constructor(t) {\n    super(), this.firestore = t;\n  }\n\n  convertBytes(t) {\n    return new gn(t);\n  }\n\n  convertReference(t) {\n    const e = this.convertDocumentKey(t, this.firestore._databaseId);\n    return new an(this.firestore,\n    /* converter= */\n    null, e);\n  }\n\n}\n/**\n * Reads the document referred to by the specified document reference.\n *\n * All documents are directly fetched from the server, even if the document was\n * previously read or modified. Recent modifications are only reflected in the\n * retrieved `DocumentSnapshot` if they have already been applied by the\n * backend. If the client is offline, the read fails. If you like to use\n * caching or see local modifications, please use the full Firestore SDK.\n *\n * @param reference - The reference of the document to fetch.\n * @returns A Promise resolved with a `DocumentSnapshot` containing the current\n * document contents.\n */\n\n\nfunction vr(t) {\n  const e = en((t = ot(t, an)).firestore),\n        n = new gr(t.firestore);\n  return Xe(e, [t._key]).then(e => {\n    v(1 === e.length);\n    const r = e[0];\n    return new Yn(t.firestore, n, t._key, r.isFoundDocument() ? r : null, t.converter);\n  });\n}\n/**\n * Executes the query and returns the results as a {@link QuerySnapshot}.\n *\n * All queries are executed directly by the server, even if the the query was\n * previously executed. Recent modifications are only reflected in the retrieved\n * results if they have already been applied by the backend. If the client is\n * offline, the operation fails. To see previously cached result and local\n * modifications, use the full Firestore SDK.\n *\n * @param query - The `Query` to execute.\n * @returns A Promise that will be resolved with the results of the query.\n */\n\n\nfunction br(t) {\n  !function (t) {\n    if (ue(t) && 0 === t.explicitOrderBy.length) throw new U(q, \"limitToLast() queries require specifying at least one orderBy() clause\");\n  }((t = ot(t, hn))._query);\n  const e = en(t.firestore),\n        n = new gr(t.firestore);\n  return Ze(e, t._query).then(e => {\n    const r = e.map(e => new Hn(t.firestore, n, e.key, e, t.converter));\n    return ue(t._query) && // Limit to last queries reverse the orderBy constraint that was\n    // specified by the user. As such, we need to reverse the order of the\n    // results to return the documents in the expected order.\n    r.reverse(), new Kn(t, r);\n  });\n}\n\nfunction Er(t, e, n) {\n  const r = _r((t = ot(t, an)).converter, e, n),\n        s = Dn(Vn(t.firestore), \"setDoc\", t._key, r, null !== t.converter, n);\n\n  return Je(en(t.firestore), [s.toMutation(t._key, be.none())]);\n}\n\nfunction Tr(t, e, n, ...r) {\n  const s = Vn((t = ot(t, an)).firestore); // For Compat types, we have to \"extract\" the underlying types before\n  // performing validation.\n\n  let i;\n  i = \"string\" == typeof (e = getModularInstance(e)) || e instanceof yn ? Cn(s, \"updateDoc\", t._key, e, n, r) : On(s, \"updateDoc\", t._key, e);\n  return Je(en(t.firestore), [i.toMutation(t._key, be.exists(!0))]);\n}\n/**\n * Deletes the document referred to by the specified `DocumentReference`.\n *\n * The deletion will only be reflected in document reads that occur after the\n * returned promise resolves. If the client is offline, the\n * delete fails. If you would like to see local modifications or buffer writes\n * until the client is online, use the full Firestore SDK.\n *\n * @param reference - A reference to the document to delete.\n * @returns A `Promise` resolved once the document has been successfully\n * deleted from the backend.\n */\n\n\nfunction Ir(t) {\n  return Je(en((t = ot(t, an)).firestore), [new Ae(t._key, be.none())]);\n}\n/**\n * Add a new document to specified `CollectionReference` with the given data,\n * assigning it a document ID automatically.\n *\n * The result of this write will only be reflected in document reads that occur\n * after the returned promise resolves. If the client is offline, the\n * write fails. If you would like to see local modifications or buffer writes\n * until the client is online, use the full Firestore SDK.\n *\n * @param reference - A reference to the collection to add this document to.\n * @param data - An Object containing the data for the new document.\n * @throws Error - If the provided input is not a valid Firestore document.\n * @returns A `Promise` resolved with a `DocumentReference` pointing to the\n * newly created document after it has been written to the backend.\n */\n\n\nfunction Ar(t, e) {\n  const n = wn(t = ot(t, ln)),\n        r = _r(t.converter, e),\n        s = Dn(Vn(t.firestore), \"addDoc\", n._key, r, null !== n.converter, {});\n\n  return Je(en(t.firestore), [s.toMutation(n._key, be.exists(!1))]).then(() => n);\n}\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Returns a sentinel for use with {@link @firebase/firestore/lite#(updateDoc:1)} or\n * {@link @firebase/firestore/lite#(setDoc:1)} with `{merge: true}` to mark a field for deletion.\n */\n\n\nfunction Rr() {\n  return new Nn(\"deleteField\");\n}\n/**\n * Returns a sentinel used with {@link @firebase/firestore/lite#(setDoc:1)} or {@link @firebase/firestore/lite#(updateDoc:1)} to\n * include a server-generated timestamp in the written data.\n */\n\n\nfunction Pr() {\n  return new Sn(\"serverTimestamp\");\n}\n/**\n * Returns a special value that can be used with {@link @firebase/firestore/lite#(setDoc:1)} or {@link\n * @firebase/firestore/lite#(updateDoc:1)} that tells the server to union the given elements with any array\n * value that already exists on the server. Each specified element that doesn't\n * already exist in the array will be added to the end. If the field being\n * modified is not already an array it will be overwritten with an array\n * containing exactly the specified elements.\n *\n * @param elements - The elements to union into the array.\n * @returns The `FieldValue` sentinel for use in a call to `setDoc()` or\n * `updateDoc()`.\n */\n\n\nfunction Vr(...t) {\n  // NOTE: We don't actually parse the data until it's used in set() or\n  // update() since we'd need the Firestore instance to do this.\n  return new Fn(\"arrayUnion\", t);\n}\n/**\n * Returns a special value that can be used with {@link (setDoc:1)} or {@link\n * updateDoc:1} that tells the server to remove the given elements from any\n * array value that already exists on the server. All instances of each element\n * specified will be removed from the array. If the field being modified is not\n * already an array it will be overwritten with an empty array.\n *\n * @param elements - The elements to remove from the array.\n * @returns The `FieldValue` sentinel for use in a call to `setDoc()` or\n * `updateDoc()`\n */\n\n\nfunction Dr(...t) {\n  // NOTE: We don't actually parse the data until it's used in set() or\n  // update() since we'd need the Firestore instance to do this.\n  return new xn(\"arrayRemove\", t);\n}\n/**\n * Returns a special value that can be used with {@link @firebase/firestore/lite#(setDoc:1)} or {@link\n * @firebase/firestore/lite#(updateDoc:1)} that tells the server to increment the field's current value by\n * the given value.\n *\n * If either the operand or the current field value uses floating point\n * precision, all arithmetic follows IEEE 754 semantics. If both values are\n * integers, values outside of JavaScript's safe number range\n * (`Number.MIN_SAFE_INTEGER` to `Number.MAX_SAFE_INTEGER`) are also subject to\n * precision loss. Furthermore, once processed by the Firestore backend, all\n * integer operations are capped between -2^63 and 2^63-1.\n *\n * If the current field value is not of type `number`, or if the field does not\n * yet exist, the transformation sets the field to the given value.\n *\n * @param n - The value to increment by.\n * @returns The `FieldValue` sentinel for use in a call to `setDoc()` or\n * `updateDoc()`\n */\n\n\nfunction Nr(t) {\n  return new qn(\"increment\", t);\n}\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * A write batch, used to perform multiple writes as a single atomic unit.\n *\n * A `WriteBatch` object can be acquired by calling {@link writeBatch}. It\n * provides methods for adding writes to the write batch. None of the writes\n * will be committed (or visible locally) until {@link WriteBatch.commit} is\n * called.\n */\n\n\nclass $r {\n  /** @hideconstructor */\n  constructor(t, e) {\n    this._firestore = t, this._commitHandler = e, this._mutations = [], this._committed = !1, this._dataReader = Vn(t);\n  }\n\n  set(t, e, n) {\n    this._verifyNotCommitted();\n\n    const r = Sr(t, this._firestore),\n          s = _r(r.converter, e, n),\n          i = Dn(this._dataReader, \"WriteBatch.set\", r._key, s, null !== r.converter, n);\n\n    return this._mutations.push(i.toMutation(r._key, be.none())), this;\n  }\n\n  update(t, e, n, ...r) {\n    this._verifyNotCommitted();\n\n    const s = Sr(t, this._firestore); // For Compat types, we have to \"extract\" the underlying types before\n    // performing validation.\n\n    let i;\n    return i = \"string\" == typeof (e = getModularInstance(e)) || e instanceof yn ? Cn(this._dataReader, \"WriteBatch.update\", s._key, e, n, r) : On(this._dataReader, \"WriteBatch.update\", s._key, e), this._mutations.push(i.toMutation(s._key, be.exists(!0))), this;\n  }\n  /**\n   * Deletes the document referred to by the provided {@link DocumentReference}.\n   *\n   * @param documentRef - A reference to the document to be deleted.\n   * @returns This `WriteBatch` instance. Used for chaining method calls.\n   */\n\n\n  delete(t) {\n    this._verifyNotCommitted();\n\n    const e = Sr(t, this._firestore);\n    return this._mutations = this._mutations.concat(new Ae(e._key, be.none())), this;\n  }\n  /**\n   * Commits all of the writes in this write batch as a single atomic unit.\n   *\n   * The result of these writes will only be reflected in document reads that\n   * occur after the returned promise resolves. If the client is offline, the\n   * write fails. If you would like to see local modifications or buffer writes\n   * until the client is online, use the full Firestore SDK.\n   *\n   * @returns A `Promise` resolved once all of the writes in the batch have been\n   * successfully written to the backend as an atomic unit (note that it won't\n   * resolve while you're offline).\n   */\n\n\n  commit() {\n    return this._verifyNotCommitted(), this._committed = !0, this._mutations.length > 0 ? this._commitHandler(this._mutations) : Promise.resolve();\n  }\n\n  _verifyNotCommitted() {\n    if (this._committed) throw new U(S, \"A write batch can no longer be used after commit() has been called.\");\n  }\n\n}\n\nfunction Sr(t, e) {\n  if ((t = getModularInstance(t)).firestore !== e) throw new U(A, \"Provided document reference is from a different Firestore instance.\");\n  return t;\n}\n/**\n * Creates a write batch, used for performing multiple writes as a single\n * atomic operation. The maximum number of writes allowed in a single WriteBatch\n * is 500.\n *\n * The result of these writes will only be reflected in document reads that\n * occur after the returned promise resolves. If the client is offline, the\n * write fails. If you would like to see local modifications or buffer writes\n * until the client is online, use the full Firestore SDK.\n *\n * @returns A `WriteBatch` that can be used to atomically execute multiple\n * writes.\n */\n\n\nfunction Fr(t) {\n  const e = en(t = ot(t, rn));\n  return new $r(t, t => Je(e, t));\n}\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Internal transaction object responsible for accumulating the mutations to\n * perform and the base versions for any documents read.\n */\n\n\nclass xr {\n  constructor(t) {\n    this.datastore = t, // The version of each document that was read during this transaction.\n    this.readVersions = new Map(), this.mutations = [], this.committed = !1,\n    /**\n     * A deferred usage error that occurred previously in this transaction that\n     * will cause the transaction to fail once it actually commits.\n     */\n    this.lastWriteError = null,\n    /**\n     * Set of documents that have been written in the transaction.\n     *\n     * When there's more than one write to the same key in a transaction, any\n     * writes after the first are handled differently.\n     */\n    this.writtenDocs = new Set();\n  }\n\n  lookup(t) {\n    var _this2 = this;\n\n    return _asyncToGenerator(function* () {\n      if (_this2.ensureCommitNotCalled(), _this2.mutations.length > 0) throw new U(A, \"Firestore transactions require all reads to be executed before all writes.\");\n      const e = yield Xe(_this2.datastore, t);\n      return e.forEach(t => _this2.recordVersion(t)), e;\n    })();\n  }\n\n  set(t, e) {\n    this.write(e.toMutation(t, this.precondition(t))), this.writtenDocs.add(t.toString());\n  }\n\n  update(t, e) {\n    try {\n      this.write(e.toMutation(t, this.preconditionForUpdate(t)));\n    } catch (t) {\n      this.lastWriteError = t;\n    }\n\n    this.writtenDocs.add(t.toString());\n  }\n\n  delete(t) {\n    this.write(new Ae(t, this.precondition(t))), this.writtenDocs.add(t.toString());\n  }\n\n  commit() {\n    var _this3 = this;\n\n    return _asyncToGenerator(function* () {\n      if (_this3.ensureCommitNotCalled(), _this3.lastWriteError) throw _this3.lastWriteError;\n      const t = _this3.readVersions; // For each mutation, note that the doc was written.\n\n      _this3.mutations.forEach(e => {\n        t.delete(e.key.toString());\n      }), // For each document that was read but not written to, we want to perform\n      // a `verify` operation.\n      t.forEach((t, e) => {\n        const n = et.fromPath(e);\n\n        _this3.mutations.push(new Re(n, _this3.precondition(n)));\n      }), yield Je(_this3.datastore, _this3.mutations), _this3.committed = !0;\n    })();\n  }\n\n  recordVersion(t) {\n    let e;\n    if (t.isFoundDocument()) e = t.version;else {\n      if (!t.isNoDocument()) throw g(); // For deleted docs, we must use baseVersion 0 when we overwrite them.\n\n      e = vt.min();\n    }\n    const n = this.readVersions.get(t.key.toString());\n\n    if (n) {\n      if (!e.isEqual(n)) // This transaction will fail no matter what.\n        throw new U(F, \"Document version changed between two reads.\");\n    } else this.readVersions.set(t.key.toString(), e);\n  }\n  /**\n   * Returns the version of this document when it was read in this transaction,\n   * as a precondition, or no precondition if it was not read.\n   */\n\n\n  precondition(t) {\n    const e = this.readVersions.get(t.toString());\n    return !this.writtenDocs.has(t.toString()) && e ? be.updateTime(e) : be.none();\n  }\n  /**\n   * Returns the precondition for a document if the operation is an update.\n   */\n\n\n  preconditionForUpdate(t) {\n    const e = this.readVersions.get(t.toString()); // The first time a document is written, we want to take into account the\n    // read time and existence\n\n    if (!this.writtenDocs.has(t.toString()) && e) {\n      if (e.isEqual(vt.min())) // The document doesn't exist, so fail the transaction.\n        // This has to be validated locally because you can't send a\n        // precondition that a document does not exist without changing the\n        // semantics of the backend write to be an insert. This is the reverse\n        // of what we want, since we want to assert that the document doesn't\n        // exist but then send the update and have it fail. Since we can't\n        // express that to the backend, we have to validate locally.\n        // Note: this can change once we can send separate verify writes in the\n        // transaction.\n        throw new U(A, \"Can't update a document that doesn't exist.\"); // Document exists, base precondition on document update time.\n\n      return be.updateTime(e);\n    } // Document was not read, so we just use the preconditions for a blind\n    // update.\n\n\n    return be.exists(!0);\n  }\n\n  write(t) {\n    this.ensureCommitNotCalled(), this.mutations.push(t);\n  }\n\n  ensureCommitNotCalled() {}\n\n}\n/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * TransactionRunner encapsulates the logic needed to run and retry transactions\n * with backoff.\n */\n\n\nclass qr {\n  constructor(t, e, n, r) {\n    this.asyncQueue = t, this.datastore = e, this.updateFunction = n, this.deferred = r, this.Tt = 5, this.It = new He(this.asyncQueue, \"transaction_retry\"\n    /* TransactionRetry */\n    );\n  }\n  /** Runs the transaction and sets the result on deferred. */\n\n\n  run() {\n    this.Tt -= 1, this.At();\n  }\n\n  At() {\n    var _this4 = this;\n\n    this.It.W( /*#__PURE__*/_asyncToGenerator(function* () {\n      const t = new xr(_this4.datastore),\n            e = _this4.Rt(t);\n\n      e && e.then(e => {\n        _this4.asyncQueue.enqueueAndForget(() => t.commit().then(() => {\n          _this4.deferred.resolve(e);\n        }).catch(t => {\n          _this4.Pt(t);\n        }));\n      }).catch(t => {\n        _this4.Pt(t);\n      });\n    }));\n  }\n\n  Rt(t) {\n    try {\n      const e = this.updateFunction(t);\n      return !ct(e) && e.catch && e.then ? e : (this.deferred.reject(Error(\"Transaction callback must return a Promise\")), null);\n    } catch (t) {\n      // Do not retry errors thrown by user provided updateFunction.\n      return this.deferred.reject(t), null;\n    }\n  }\n\n  Pt(t) {\n    this.Tt > 0 && this.Vt(t) ? (this.Tt -= 1, this.asyncQueue.enqueueAndForget(() => (this.At(), Promise.resolve()))) : this.deferred.reject(t);\n  }\n\n  Vt(t) {\n    if (\"FirebaseError\" === t.name) {\n      // In transactions, the backend will fail outdated reads with FAILED_PRECONDITION and\n      // non-matching document versions with ABORTED. These errors should be retried.\n      const e = t.code;\n      return \"aborted\" === e || \"failed-precondition\" === e || !\n      /**\n      * Determines whether an error code represents a permanent error when received\n      * in response to a non-write operation.\n      *\n      * See isPermanentWriteError for classifying write errors.\n      */\n      function (t) {\n        switch (t) {\n          default:\n            return g();\n\n          case T:\n          case I:\n          case R:\n          case $:\n          case O:\n          case C: // Unauthenticated means something went wrong with our token and we need\n          // to retry with new credentials which will happen automatically.\n\n          case N:\n            return !1;\n\n          case A:\n          case P:\n          case V:\n          case D:\n          case S: // Aborted might be retried in some scenarios, but that is dependant on\n          // the context and should handled individually by the calling code.\n          // See https://cloud.google.com/apis/design/errors.\n\n          case F:\n          case x:\n          case q:\n          case L:\n            return !0;\n        }\n      }(e);\n    }\n\n    return !1;\n  }\n\n}\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/** The Platform's 'document' implementation or null if not available. */\n\n\nfunction Or() {\n  // `document` is not always available, e.g. in ReactNative and WebWorkers.\n  // eslint-disable-next-line no-restricted-globals\n  return \"undefined\" != typeof document ? document : null;\n}\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Represents an operation scheduled to be run in the future on an AsyncQueue.\n *\n * It is created via DelayedOperation.createAndSchedule().\n *\n * Supports cancellation (via cancel()) and early execution (via skipDelay()).\n *\n * Note: We implement `PromiseLike` instead of `Promise`, as the `Promise` type\n * in newer versions of TypeScript defines `finally`, which is not available in\n * IE.\n */\n\n\nclass Cr {\n  constructor(t, e, n, r, s) {\n    this.asyncQueue = t, this.timerId = e, this.targetTimeMs = n, this.op = r, this.removalCallback = s, this.deferred = new k(), this.then = this.deferred.promise.then.bind(this.deferred.promise), // It's normal for the deferred promise to be canceled (due to cancellation)\n    // and so we attach a dummy catch callback to avoid\n    // 'UnhandledPromiseRejectionWarning' log spam.\n    this.deferred.promise.catch(t => {});\n  }\n  /**\n   * Creates and returns a DelayedOperation that has been scheduled to be\n   * executed on the provided asyncQueue after the provided delayMs.\n   *\n   * @param asyncQueue - The queue to schedule the operation on.\n   * @param id - A Timer ID identifying the type of operation this is.\n   * @param delayMs - The delay (ms) before the operation should be scheduled.\n   * @param op - The operation to run.\n   * @param removalCallback - A callback to be called synchronously once the\n   *   operation is executed or canceled, notifying the AsyncQueue to remove it\n   *   from its delayedOperations list.\n   *   PORTING NOTE: This exists to prevent making removeDelayedOperation() and\n   *   the DelayedOperation class public.\n   */\n\n\n  static createAndSchedule(t, e, n, r, s) {\n    const i = Date.now() + n,\n          o = new Cr(t, e, i, r, s);\n    return o.start(n), o;\n  }\n  /**\n   * Starts the timer. This is called immediately after construction by\n   * createAndSchedule().\n   */\n\n\n  start(t) {\n    this.timerHandle = setTimeout(() => this.handleDelayElapsed(), t);\n  }\n  /**\n   * Queues the operation to run immediately (if it hasn't already been run or\n   * canceled).\n   */\n\n\n  skipDelay() {\n    return this.handleDelayElapsed();\n  }\n  /**\n   * Cancels the operation if it hasn't already been executed or canceled. The\n   * promise will be rejected.\n   *\n   * As long as the operation has not yet been run, calling cancel() provides a\n   * guarantee that the operation will not be run.\n   */\n\n\n  cancel(t) {\n    null !== this.timerHandle && (this.clearTimeout(), this.deferred.reject(new U(T, \"Operation cancelled\" + (t ? \": \" + t : \"\"))));\n  }\n\n  handleDelayElapsed() {\n    this.asyncQueue.enqueueAndForget(() => null !== this.timerHandle ? (this.clearTimeout(), this.op().then(t => this.deferred.resolve(t))) : Promise.resolve());\n  }\n\n  clearTimeout() {\n    null !== this.timerHandle && (this.removalCallback(this), clearTimeout(this.timerHandle), this.timerHandle = null);\n  }\n\n}\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\nclass Lr {\n  constructor() {\n    // The last promise in the queue.\n    this.Dt = Promise.resolve(), // A list of retryable operations. Retryable operations are run in order and\n    // retried with backoff.\n    this.Nt = [], // Is this AsyncQueue being shut down? Once it is set to true, it will not\n    // be changed again.\n    this.$t = !1, // Operations scheduled to be queued in the future. Operations are\n    // automatically removed after they are run or canceled.\n    this.St = [], // visible for testing\n    this.Ft = null, // Flag set while there's an outstanding AsyncQueue operation, used for\n    // assertion sanity-checks.\n    this.xt = !1, // Enabled during shutdown on Safari to prevent future access to IndexedDB.\n    this.qt = !1, // List of TimerIds to fast-forward delays for.\n    this.Ot = [], // Backoff timer used to schedule retries for retryable operations\n    this.It = new He(this, \"async_queue_retry\"\n    /* AsyncQueueRetry */\n    ), // Visibility handler that triggers an immediate retry of all retryable\n    // operations. Meant to speed up recovery when we regain file system access\n    // after page comes into foreground.\n    this.Ct = () => {\n      const t = Or();\n      t && m(\"AsyncQueue\", \"Visibility state changed to \" + t.visibilityState), this.It.H();\n    };\n    const t = Or();\n    t && \"function\" == typeof t.addEventListener && t.addEventListener(\"visibilitychange\", this.Ct);\n  }\n\n  get isShuttingDown() {\n    return this.$t;\n  }\n  /**\n   * Adds a new operation to the queue without waiting for it to complete (i.e.\n   * we ignore the Promise result).\n   */\n\n\n  enqueueAndForget(t) {\n    // eslint-disable-next-line @typescript-eslint/no-floating-promises\n    this.enqueue(t);\n  }\n\n  enqueueAndForgetEvenWhileRestricted(t) {\n    this.Lt(), // eslint-disable-next-line @typescript-eslint/no-floating-promises\n    this.Ut(t);\n  }\n\n  enterRestrictedMode(t) {\n    if (!this.$t) {\n      this.$t = !0, this.qt = t || !1;\n      const e = Or();\n      e && \"function\" == typeof e.removeEventListener && e.removeEventListener(\"visibilitychange\", this.Ct);\n    }\n  }\n\n  enqueue(t) {\n    if (this.Lt(), this.$t) // Return a Promise which never resolves.\n      return new Promise(() => {}); // Create a deferred Promise that we can return to the callee. This\n    // allows us to return a \"hanging Promise\" only to the callee and still\n    // advance the queue even when the operation is not run.\n\n    const e = new k();\n    return this.Ut(() => this.$t && this.qt ? Promise.resolve() : (t().then(e.resolve, e.reject), e.promise)).then(() => e.promise);\n  }\n\n  enqueueRetryable(t) {\n    this.enqueueAndForget(() => (this.Nt.push(t), this.kt()));\n  }\n  /**\n   * Runs the next operation from the retryable queue. If the operation fails,\n   * reschedules with backoff.\n   */\n\n\n  kt() {\n    var _this5 = this;\n\n    return _asyncToGenerator(function* () {\n      if (0 !== _this5.Nt.length) {\n        try {\n          yield _this5.Nt[0](), _this5.Nt.shift(), _this5.It.reset();\n        } catch (t) {\n          if (!\n          /**\n          * @license\n          * Copyright 2017 Google LLC\n          *\n          * Licensed under the Apache License, Version 2.0 (the \"License\");\n          * you may not use this file except in compliance with the License.\n          * You may obtain a copy of the License at\n          *\n          *   http://www.apache.org/licenses/LICENSE-2.0\n          *\n          * Unless required by applicable law or agreed to in writing, software\n          * distributed under the License is distributed on an \"AS IS\" BASIS,\n          * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n          * See the License for the specific language governing permissions and\n          * limitations under the License.\n          */\n\n          /** Verifies whether `e` is an IndexedDbTransactionError. */\n          function (t) {\n            // Use name equality, as instanceof checks on errors don't work with errors\n            // that wrap other errors.\n            return \"IndexedDbTransactionError\" === t.name;\n          }\n          /**\n          * @license\n          * Copyright 2020 Google LLC\n          *\n          * Licensed under the Apache License, Version 2.0 (the \"License\");\n          * you may not use this file except in compliance with the License.\n          * You may obtain a copy of the License at\n          *\n          *   http://www.apache.org/licenses/LICENSE-2.0\n          *\n          * Unless required by applicable law or agreed to in writing, software\n          * distributed under the License is distributed on an \"AS IS\" BASIS,\n          * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n          * See the License for the specific language governing permissions and\n          * limitations under the License.\n          */\n          (t)) throw t; // Failure will be handled by AsyncQueue\n\n          m(\"AsyncQueue\", \"Operation failed with retryable error: \" + t);\n        }\n\n        _this5.Nt.length > 0 && // If there are additional operations, we re-schedule `retryNextOp()`.\n        // This is necessary to run retryable operations that failed during\n        // their initial attempt since we don't know whether they are already\n        // enqueued. If, for example, `op1`, `op2`, `op3` are enqueued and `op1`\n        // needs to  be re-run, we will run `op1`, `op1`, `op2` using the\n        // already enqueued calls to `retryNextOp()`. `op3()` will then run in the\n        // call scheduled here.\n        // Since `backoffAndRun()` cancels an existing backoff and schedules a\n        // new backoff on every call, there is only ever a single additional\n        // operation in the queue.\n        _this5.It.W(() => _this5.kt());\n      }\n    })();\n  }\n\n  Ut(t) {\n    const e = this.Dt.then(() => (this.xt = !0, t().catch(t => {\n      this.Ft = t, this.xt = !1;\n\n      const e =\n      /**\n      * Chrome includes Error.message in Error.stack. Other browsers do not.\n      * This returns expected output of message + stack when available.\n      * @param error - Error or FirestoreError\n      */\n      function (t) {\n        let e = t.message || \"\";\n        t.stack && (e = t.stack.includes(t.message) ? t.stack : t.message + \"\\n\" + t.stack);\n        return e;\n      }\n      /**\n      * @license\n      * Copyright 2020 Google LLC\n      *\n      * Licensed under the Apache License, Version 2.0 (the \"License\");\n      * you may not use this file except in compliance with the License.\n      * You may obtain a copy of the License at\n      *\n      *   http://www.apache.org/licenses/LICENSE-2.0\n      *\n      * Unless required by applicable law or agreed to in writing, software\n      * distributed under the License is distributed on an \"AS IS\" BASIS,\n      * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n      * See the License for the specific language governing permissions and\n      * limitations under the License.\n      */\n      // TODO(mrschmidt) Consider using `BaseTransaction` as the base class in the\n      // legacy SDK.\n\n      /**\n      * A reference to a transaction.\n      *\n      * The `Transaction` object passed to a transaction's `updateFunction` provides\n      * the methods to read and write data within the transaction context. See\n      * {@link runTransaction}.\n      */\n      (t); // Re-throw the error so that this.tail becomes a rejected Promise and\n      // all further attempts to chain (via .then) will just short-circuit\n      // and return the rejected Promise.\n\n\n      throw p(\"INTERNAL UNHANDLED ERROR: \", e), t;\n    }).then(t => (this.xt = !1, t))));\n    return this.Dt = e, e;\n  }\n\n  enqueueAfterDelay(t, e, n) {\n    this.Lt(), // Fast-forward delays for timerIds that have been overriden.\n    this.Ot.indexOf(t) > -1 && (e = 0);\n    const r = Cr.createAndSchedule(this, t, e, n, t => this.jt(t));\n    return this.St.push(r), r;\n  }\n\n  Lt() {\n    this.Ft && g();\n  }\n\n  verifyOperationInProgress() {}\n  /**\n   * Waits until all currently queued tasks are finished executing. Delayed\n   * operations are not run.\n   */\n\n\n  Mt() {\n    var _this6 = this;\n\n    return _asyncToGenerator(function* () {\n      // Operations in the queue prior to draining may have enqueued additional\n      // operations. Keep draining the queue until the tail is no longer advanced,\n      // which indicates that no more new operations were enqueued and that all\n      // operations were executed.\n      let t;\n\n      do {\n        t = _this6.Dt, yield t;\n      } while (t !== _this6.Dt);\n    })();\n  }\n  /**\n   * For Tests: Determine if a delayed operation with a particular TimerId\n   * exists.\n   */\n\n\n  Bt(t) {\n    for (const e of this.St) if (e.timerId === t) return !0;\n\n    return !1;\n  }\n  /**\n   * For Tests: Runs some or all delayed operations early.\n   *\n   * @param lastTimerId - Delayed operations up to and including this TimerId\n   * will be drained. Pass TimerId.All to run all delayed operations.\n   * @returns a Promise that resolves once all operations have been run.\n   */\n\n\n  zt(t) {\n    // Note that draining may generate more delayed ops, so we do that first.\n    return this.Mt().then(() => {\n      // Run ops in the same order they'd run if they ran naturally.\n      this.St.sort((t, e) => t.targetTimeMs - e.targetTimeMs);\n\n      for (const e of this.St) if (e.skipDelay(), \"all\"\n      /* All */\n      !== t && e.timerId === t) break;\n\n      return this.Mt();\n    });\n  }\n  /**\n   * For Tests: Skip all subsequent delays for a timer id.\n   */\n\n\n  Gt(t) {\n    this.Ot.push(t);\n  }\n  /** Called once a DelayedOperation is run or canceled. */\n\n\n  jt(t) {\n    // NOTE: indexOf / slice are O(n), but delayedOperations is expected to be small.\n    const e = this.St.indexOf(t);\n    this.St.splice(e, 1);\n  }\n\n}\n\nclass Ur {\n  /** @hideconstructor */\n  constructor(t, e) {\n    this._firestore = t, this._transaction = e, this._dataReader = Vn(t);\n  }\n  /**\n   * Reads the document referenced by the provided {@link DocumentReference}.\n   *\n   * @param documentRef - A reference to the document to be read.\n   * @returns A `DocumentSnapshot` with the read data.\n   */\n\n\n  get(t) {\n    const e = Sr(t, this._firestore),\n          n = new gr(this._firestore);\n    return this._transaction.lookup([e._key]).then(t => {\n      if (!t || 1 !== t.length) return g();\n      const r = t[0];\n      if (r.isFoundDocument()) return new Yn(this._firestore, n, r.key, r, e.converter);\n      if (r.isNoDocument()) return new Yn(this._firestore, n, e._key, null, e.converter);\n      throw g();\n    });\n  }\n\n  set(t, e, n) {\n    const r = Sr(t, this._firestore),\n          s = _r(r.converter, e, n),\n          i = Dn(this._dataReader, \"Transaction.set\", r._key, s, null !== r.converter, n);\n\n    return this._transaction.set(r._key, i), this;\n  }\n\n  update(t, e, n, ...r) {\n    const s = Sr(t, this._firestore); // For Compat types, we have to \"extract\" the underlying types before\n    // performing validation.\n\n    let i;\n    return i = \"string\" == typeof (e = getModularInstance(e)) || e instanceof yn ? Cn(this._dataReader, \"Transaction.update\", s._key, e, n, r) : On(this._dataReader, \"Transaction.update\", s._key, e), this._transaction.update(s._key, i), this;\n  }\n  /**\n   * Deletes the document referred to by the provided {@link DocumentReference}.\n   *\n   * @param documentRef - A reference to the document to be deleted.\n   * @returns This `Transaction` instance. Used for chaining method calls.\n   */\n\n\n  delete(t) {\n    const e = Sr(t, this._firestore);\n    return this._transaction.delete(e._key), this;\n  }\n\n}\n/**\n * Executes the given `updateFunction` and then attempts to commit the changes\n * applied within the transaction. If any document read within the transaction\n * has changed, Cloud Firestore retries the `updateFunction`. If it fails to\n * commit after 5 attempts, the transaction fails.\n *\n * The maximum number of writes allowed in a single transaction is 500.\n *\n * @param firestore - A reference to the Firestore database to run this\n * transaction against.\n * @param updateFunction - The function to execute within the transaction\n * context.\n * @returns If the transaction completed successfully or was explicitly aborted\n * (the `updateFunction` returned a failed promise), the promise returned by the\n * `updateFunction `is returned here. Otherwise, if the transaction failed, a\n * rejected promise with the corresponding failure error is returned.\n */\n\n\nfunction kr(t, e) {\n  const n = en(t = ot(t, rn)),\n        r = new k();\n  return new qr(new Lr(), n, n => e(new Ur(t, n)), r).run(), r.promise;\n}\n/**\n * Firestore Lite\n *\n * @remarks Firestore Lite is a small online-only SDK that allows read\n * and write access to your Firestore database. All operations connect\n * directly to the backend, and `onSnapshot()` APIs are not supported.\n * @packageDocumentation\n */\n\n\n!function (t) {\n  f = t;\n}(`${SDK_VERSION}_lite`), _registerComponent(new Component(\"firestore/lite\", (t, {\n  options: e\n}) => {\n  const n = t.getProvider(\"app\").getImmediate(),\n        r = new rn(n, new z(t.getProvider(\"auth-internal\")), new Y(t.getProvider(\"app-check-internal\")));\n  return e && r._setSettings(e), r;\n}, \"PUBLIC\")), // RUNTIME_ENV and BUILD_TARGET are replaced by real values during the compilation\nregisterVersion(\"firestore-lite\", \"3.4.5\", \"\"), registerVersion(\"firestore-lite\", \"3.4.5\", \"esm2017\");\nexport { gn as Bytes, ln as CollectionReference, an as DocumentReference, Yn as DocumentSnapshot, yn as FieldPath, vn as FieldValue, rn as Firestore, U as FirestoreError, bn as GeoPoint, hn as Query, Zn as QueryConstraint, Hn as QueryDocumentSnapshot, Kn as QuerySnapshot, gt as Timestamp, Ur as Transaction, $r as WriteBatch, Ar as addDoc, Dr as arrayRemove, Vr as arrayUnion, fn as collection, dn as collectionGroup, un as connectFirestoreEmulator, Ir as deleteDoc, Rr as deleteField, wn as doc, _n as documentId, dr as endAt, fr as endBefore, vr as getDoc, br as getDocs, on as getFirestore, Nr as increment, sn as initializeFirestore, or as limit, ur as limitToLast, sr as orderBy, tr as query, pn as queryEqual, mn as refEqual, kr as runTransaction, Pr as serverTimestamp, Er as setDoc, w as setLogLevel, Jn as snapshotEqual, hr as startAfter, ar as startAt, cn as terminate, Tr as updateDoc, nr as where, Fr as writeBatch };","map":{"version":3,"sources":["C:/Dev/blackthread-ng/bt-store/node_modules/@firebase/firestore/dist/lite/index.browser.esm2017.js"],"names":["_registerComponent","registerVersion","_getProvider","getApp","_removeServiceInstance","SDK_VERSION","Component","Logger","LogLevel","FirebaseError","createMockUserToken","getModularInstance","l","constructor","t","uid","isAuthenticated","toKey","isEqual","UNAUTHENTICATED","GOOGLE_CREDENTIALS","FIRST_PARTY","MOCK_USER","f","d","w","setLogLevel","m","e","logLevel","DEBUG","n","map","_","debug","p","ERROR","error","y","WARN","warn","JSON","stringify","g","Error","v","b","E","T","I","A","R","P","V","D","N","$","S","F","x","q","O","C","L","U","code","message","toString","name","k","promise","Promise","resolve","reject","j","user","type","headers","Map","set","M","getToken","invalidateToken","start","enqueueRetryable","shutdown","B","token","changeListener","z","auth","onInit","then","accessToken","getUid","G","r","getAuthHeaderValueForFirstParty","Q","i","o","W","value","length","Y","u","appCheck","H","s","databaseId","appId","persistenceKey","host","ssl","forceLongPolling","autoDetectLongPolling","useFetchStreams","K","projectId","database","empty","isDefaultDatabase","J","segments","offset","len","comparator","child","slice","limit","forEach","push","construct","popFirst","popLast","firstSegment","lastSegment","get","isEmpty","isPrefixOf","isImmediateParentOf","toArray","Math","min","X","canonicalString","join","fromString","indexOf","split","filter","emptyPath","Z","tt","isValidIdentifier","test","replace","isKeyField","keyField","fromServerFormat","et","path","fromPath","fromName","collectionGroup","hasCollectionId","getCollectionGroup","getCollectionPath","isDocumentKey","fromSegments","nt","rt","st","it","substring","Array","ot","_delegate","ut","ct","at","ht","BatchGetDocuments","Commit","RunQuery","lt","ft","dt","OK","CANCELLED","UNKNOWN","INVALID_ARGUMENT","DEADLINE_EXCEEDED","NOT_FOUND","ALREADY_EXISTS","PERMISSION_DENIED","RESOURCE_EXHAUSTED","FAILED_PRECONDITION","ABORTED","OUT_OF_RANGE","UNIMPLEMENTED","INTERNAL","UNAVAILABLE","DATA_LOSS","wt","databaseInfo","h","method","body","status","statusText","ok","json","mt","self","crypto","msCrypto","Uint8Array","getRandomValues","floor","random","pt","charAt","yt","_t","every","gt","seconds","nanoseconds","now","fromMillis","Date","fromDate","getTime","toDate","toMillis","_compareTo","toJSON","valueOf","String","padStart","vt","timestamp","fromTimestamp","compareTo","toMicroseconds","toTimestamp","bt","Object","prototype","hasOwnProperty","call","Et","Tt","fields","sort","covers","It","binaryString","fromBase64String","atob","fromUint8Array","fromCharCode","Symbol","iterator","next","charCodeAt","done","toBase64","btoa","toUint8Array","approximateByteSize","EMPTY_BYTE_STRING","At","RegExp","Rt","exec","substr","Number","nanos","Pt","Vt","Dt","mapValue","__type__","stringValue","Nt","__previous_value__","$t","__local_write_time__","timestampValue","St","Ft","booleanValue","bytesValue","referenceValue","geoPointValue","latitude","longitude","integerValue","doubleValue","isNaN","arrayValue","values","xt","find","qt","Ot","keys","Ct","Lt","Ut","kt","jt","Mt","assign","Bt","field","getFieldsMap","setAll","applyChanges","delete","clone","zt","key","documentType","version","readTime","data","documentState","newInvalidDocument","newFoundDocument","newNoDocument","newUnknownDocument","convertToFoundDocument","convertToNoDocument","convertToUnknownDocument","setHasCommittedMutations","setHasLocalMutations","setReadTime","hasLocalMutations","hasCommittedMutations","hasPendingWrites","isValidDocument","isFoundDocument","isNoDocument","isUnknownDocument","mutableCopy","Gt","orderBy","filters","startAt","endAt","Qt","Wt","op","create","Yt","Xt","Zt","te","ee","Ht","Kt","matches","Jt","some","nullValue","ne","position","inclusive","re","dir","se","ie","oe","explicitOrderBy","limitType","ue","ce","ae","he","le","fe","de","we","isInteger","MAX_SAFE_INTEGER","MIN_SAFE_INTEGER","me","pe","ye","elements","_e","ge","ve","transform","be","updateTime","exists","none","isNone","Ee","Te","precondition","fieldTransforms","Ie","fieldMask","Ae","Re","Pe","asc","desc","Ve","in","De","Ne","toISOString","$e","Se","Fe","xe","qe","Oe","We","Ce","Le","Ue","ke","found","missing","je","update","updateMask","Qe","verify","updateTransforms","fieldPath","setToServerValue","appendMissingElements","removeAllFromArray","increment","currentDocument","Me","structuredQuery","parent","from","collectionId","allDescendants","unaryFilter","Ge","fieldFilter","ze","compositeFilter","where","direction","Be","before","fieldPaths","Ye","He","timerId","reset","cancel","max","enqueueAfterDelay","skipDelay","Ke","authCredentials","appCheckCredentials","all","catch","terminate","Je","writes","Xe","documents","Ze","document","tn","en","_terminated","has","fetch","bind","_databaseId","app","options","_persistenceKey","_freezeSettings","experimentalForceLongPolling","experimentalAutoDetectLongPolling","_authCredentials","_appCheckCredentials","nn","credentials","ignoreUndefinedProperties","cacheSizeBytes","rn","_settings","_settingsFrozen","_app","apply","_initialized","_terminateTask","_setSettings","client","sessionIndex","iamToken","_getSettings","_delete","_terminate","settings","sn","isInitialized","initialize","on","getImmediate","un","mockUserToken","sub","user_id","cn","an","converter","_key","firestore","_path","id","ln","withConverter","hn","_query","fn","dn","wn","arguments","mn","pn","yn","_internalPath","_n","gn","_byteString","vn","_methodName","bn","isFinite","_lat","_long","En","Tn","toMutation","In","An","Rn","Qn","methodName","contains","Pn","Vn","Dn","merge","mergeFields","Mn","kn","c","a","Bn","Wn","Nn","_toFieldTransform","$n","Sn","Fn","Un","xn","qn","On","Gn","Cn","Ln","jn","getPrototypeOf","zn","search","Yn","_firestore","_userDataWriter","_document","_converter","ref","Hn","fromFirestore","convertValue","Xn","Kn","_docs","query","docs","size","Jn","Zn","tr","_apply","er","pr","mr","yr","concat","nr","rr","sr","ir","or","ur","cr","wr","ar","hr","lr","fr","dr","isArray","_r","toFirestore","gr","convertTimestamp","convertServerTimestamp","convertBytes","convertReference","convertGeoPoint","convertArray","convertObject","convertDocumentKey","vr","br","reverse","Er","Tr","Ir","Ar","Rr","Pr","Vr","Dr","Nr","$r","_commitHandler","_mutations","_committed","_dataReader","_verifyNotCommitted","Sr","commit","Fr","xr","datastore","readVersions","mutations","committed","lastWriteError","writtenDocs","Set","lookup","ensureCommitNotCalled","recordVersion","write","add","preconditionForUpdate","qr","asyncQueue","updateFunction","deferred","run","enqueueAndForget","Or","Cr","targetTimeMs","removalCallback","createAndSchedule","timerHandle","setTimeout","handleDelayElapsed","clearTimeout","Lr","visibilityState","addEventListener","isShuttingDown","enqueue","enqueueAndForgetEvenWhileRestricted","enterRestrictedMode","removeEventListener","shift","stack","includes","verifyOperationInProgress","splice","Ur","_transaction","kr","getProvider","Bytes","CollectionReference","DocumentReference","DocumentSnapshot","FieldPath","FieldValue","Firestore","FirestoreError","GeoPoint","Query","QueryConstraint","QueryDocumentSnapshot","QuerySnapshot","Timestamp","Transaction","WriteBatch","addDoc","arrayRemove","arrayUnion","collection","connectFirestoreEmulator","deleteDoc","deleteField","doc","documentId","endBefore","getDoc","getDocs","getFirestore","initializeFirestore","limitToLast","queryEqual","refEqual","runTransaction","serverTimestamp","setDoc","snapshotEqual","startAfter","updateDoc","writeBatch"],"mappings":"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AE,CAACliB,CAAC,CAACggB,SAAH,CAAH,EAAkB,QAAlB,EAA4B/e,CAAC,CAAC8e,IAA9B,EAAoC7a,CAApC,EAAuC,SAASjE,CAAC,CAAC6e,SAAlD,EAA6D,EAA7D,CAA3D;;AACA,SAAOnD,EAAE,CAACO,EAAE,CAACld,CAAC,CAACggB,SAAH,CAAH,EAAkB,CAAEla,CAAC,CAAC4b,UAAF,CAAazgB,CAAC,CAAC8e,IAAf,EAAqBhI,EAAE,CAACE,MAAH,CAAU,CAAC,CAAX,CAArB,CAAF,CAAlB,CAAF,CAA6DnT,IAA7D,CAAmE,MAAM7D,CAAzE,CAAP;AACH;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;;;AAAI,SAASmmB,EAAT,GAAc;AACd,SAAO,IAAIxE,EAAJ,CAAO,aAAP,CAAP;AACH;AAED;AACA;AACA;AACA;;;AAAI,SAASyE,EAAT,GAAc;AACd,SAAO,IAAItE,EAAJ,CAAO,iBAAP,CAAP;AACH;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAAI,SAASuE,EAAT,CAAY,GAAGtnB,CAAf,EAAkB;AAClB;AACA;AACA,SAAO,IAAIgjB,EAAJ,CAAO,YAAP,EAAqBhjB,CAArB,CAAP;AACH;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAAI,SAASunB,EAAT,CAAY,GAAGvnB,CAAf,EAAkB;AAClB;AACA;AACA,SAAO,IAAIkjB,EAAJ,CAAO,aAAP,EAAsBljB,CAAtB,CAAP;AACH;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAAI,SAASwnB,EAAT,CAAYxnB,CAAZ,EAAe;AACf,SAAO,IAAImjB,EAAJ,CAAO,WAAP,EAAoBnjB,CAApB,CAAP;AACH;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAAI,MAAMynB,EAAN,CAAS;AACT;AACA1nB,EAAAA,WAAW,CAACC,CAAD,EAAIc,CAAJ,EAAO;AACd,SAAK+iB,UAAL,GAAkB7jB,CAAlB,EAAqB,KAAK0nB,cAAL,GAAsB5mB,CAA3C,EAA8C,KAAK6mB,UAAL,GAAkB,EAAhE,EAAoE,KAAKC,UAAL,GAAkB,CAAC,CAAvF,EACA,KAAKC,WAAL,GAAmB3F,EAAE,CAACliB,CAAD,CADrB;AAEH;;AACDiE,EAAAA,GAAG,CAACjE,CAAD,EAAIc,CAAJ,EAAOG,CAAP,EAAU;AACT,SAAK6mB,mBAAL;;AACA,UAAM5iB,CAAC,GAAG6iB,EAAE,CAAC/nB,CAAD,EAAI,KAAK6jB,UAAT,CAAZ;AAAA,UAAkC/d,CAAC,GAAGogB,EAAE,CAAChhB,CAAC,CAAC4a,SAAH,EAAchf,CAAd,EAAiBG,CAAjB,CAAxC;AAAA,UAA6DoE,CAAC,GAAG8c,EAAE,CAAC,KAAK0F,WAAN,EAAmB,gBAAnB,EAAqC3iB,CAAC,CAAC6a,IAAvC,EAA6Cja,CAA7C,EAAgD,SAASZ,CAAC,CAAC4a,SAA3D,EAAsE7e,CAAtE,CAAnE;;AACA,WAAO,KAAK0mB,UAAL,CAAgBtgB,IAAhB,CAAqBhC,CAAC,CAACqc,UAAF,CAAaxc,CAAC,CAAC6a,IAAf,EAAqBhI,EAAE,CAACG,IAAH,EAArB,CAArB,GAAuD,IAA9D;AACH;;AACDgC,EAAAA,MAAM,CAACla,CAAD,EAAIc,CAAJ,EAAOG,CAAP,EAAU,GAAGiE,CAAb,EAAgB;AAClB,SAAK4iB,mBAAL;;AACA,UAAMhiB,CAAC,GAAGiiB,EAAE,CAAC/nB,CAAD,EAAI,KAAK6jB,UAAT,CAAZ,CAFkB,CAGlB;AACA;;AACQ,QAAIxe,CAAJ;AACR,WAAOA,CAAC,GAAG,YAAY,QAAQvE,CAAC,GAAGjB,kBAAkB,CAACiB,CAAD,CAA9B,CAAZ,IAAkDA,CAAC,YAAY+f,EAA/D,GAAoEyC,EAAE,CAAC,KAAKuE,WAAN,EAAmB,mBAAnB,EAAwC/hB,CAAC,CAACia,IAA1C,EAAgDjf,CAAhD,EAAmDG,CAAnD,EAAsDiE,CAAtD,CAAtE,GAAiIke,EAAE,CAAC,KAAKyE,WAAN,EAAmB,mBAAnB,EAAwC/hB,CAAC,CAACia,IAA1C,EAAgDjf,CAAhD,CAAvI,EACP,KAAK6mB,UAAL,CAAgBtgB,IAAhB,CAAqBhC,CAAC,CAACqc,UAAF,CAAa5b,CAAC,CAACia,IAAf,EAAqBhI,EAAE,CAACE,MAAH,CAAU,CAAC,CAAX,CAArB,CAArB,CADO,EACoD,IAD3D;AAEH;AACD;AACJ;AACA;AACA;AACA;AACA;;;AAAW9E,EAAAA,MAAM,CAACnT,CAAD,EAAI;AACb,SAAK8nB,mBAAL;;AACA,UAAMhnB,CAAC,GAAGinB,EAAE,CAAC/nB,CAAD,EAAI,KAAK6jB,UAAT,CAAZ;AACA,WAAO,KAAK8D,UAAL,GAAkB,KAAKA,UAAL,CAAgBxC,MAAhB,CAAuB,IAAIzM,EAAJ,CAAO5X,CAAC,CAACif,IAAT,EAAehI,EAAE,CAACG,IAAH,EAAf,CAAvB,CAAlB,EAAqE,IAA5E;AACH;AACD;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAAW8P,EAAAA,MAAM,GAAG;AACZ,WAAO,KAAKF,mBAAL,IAA4B,KAAKF,UAAL,GAAkB,CAAC,CAA/C,EAAkD,KAAKD,UAAL,CAAgBliB,MAAhB,GAAyB,CAAzB,GAA6B,KAAKiiB,cAAL,CAAoB,KAAKC,UAAzB,CAA7B,GAAoElkB,OAAO,CAACC,OAAR,EAA7H;AACH;;AACDokB,EAAAA,mBAAmB,GAAG;AAClB,QAAI,KAAKF,UAAT,EAAqB,MAAM,IAAI1kB,CAAJ,CAAMP,CAAN,EAAS,qEAAT,CAAN;AACxB;;AA9CQ;;AAiDb,SAASolB,EAAT,CAAY/nB,CAAZ,EAAec,CAAf,EAAkB;AACd,MAAI,CAACd,CAAC,GAAGH,kBAAkB,CAACG,CAAD,CAAvB,EAA4BggB,SAA5B,KAA0Clf,CAA9C,EAAiD,MAAM,IAAIoC,CAAJ,CAAMd,CAAN,EAAS,qEAAT,CAAN;AACjD,SAAOpC,CAAP;AACH;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAAI,SAASioB,EAAT,CAAYjoB,CAAZ,EAAe;AACf,QAAMc,CAAC,GAAGoc,EAAE,CAACld,CAAC,GAAGkK,EAAE,CAAClK,CAAD,EAAIoe,EAAJ,CAAP,CAAZ;AACA,SAAO,IAAIqJ,EAAJ,CAAOznB,CAAP,EAAWA,CAAC,IAAI2c,EAAE,CAAC7b,CAAD,EAAId,CAAJ,CAAlB,CAAP;AACH;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;;;AAAI,MAAMkoB,EAAN,CAAS;AACTnoB,EAAAA,WAAW,CAACC,CAAD,EAAI;AACX,SAAKmoB,SAAL,GAAiBnoB,CAAjB,EACA;AACA,SAAKooB,YAAL,GAAoB,IAAIpkB,GAAJ,EAFpB,EAE6B,KAAKqkB,SAAL,GAAiB,EAF9C,EAEkD,KAAKC,SAAL,GAAiB,CAAC,CAFpE;AAGA;AACR;AACA;AACA;AACQ,SAAKC,cAAL,GAAsB,IAPtB;AAQA;AACR;AACA;AACA;AACA;AACA;AACQ,SAAKC,WAAL,GAAmB,IAAIC,GAAJ,EAdnB;AAeH;;AACKC,EAAAA,MAAM,CAAC1oB,CAAD,EAAI;AAAA;;AAAA;AACZ,UAAI,MAAI,CAAC2oB,qBAAL,IAA8B,MAAI,CAACN,SAAL,CAAe5iB,MAAf,GAAwB,CAA1D,EAA6D,MAAM,IAAIvC,CAAJ,CAAMd,CAAN,EAAS,4EAAT,CAAN;AAC7D,YAAMtB,CAAC,SAAS+b,EAAE,CAAC,MAAI,CAACsL,SAAN,EAAiBnoB,CAAjB,CAAlB;AACA,aAAOc,CAAC,CAACsG,OAAF,CAAWpH,CAAC,IAAI,MAAI,CAAC4oB,aAAL,CAAmB5oB,CAAnB,CAAhB,GAAyCc,CAAhD;AAHY;AAIf;;AACDmD,EAAAA,GAAG,CAACjE,CAAD,EAAIc,CAAJ,EAAO;AACN,SAAK+nB,KAAL,CAAW/nB,CAAC,CAAC4gB,UAAF,CAAa1hB,CAAb,EAAgB,KAAKsY,YAAL,CAAkBtY,CAAlB,CAAhB,CAAX,GAAmD,KAAKwoB,WAAL,CAAiBM,GAAjB,CAAqB9oB,CAAC,CAACqD,QAAF,EAArB,CAAnD;AACH;;AACD6W,EAAAA,MAAM,CAACla,CAAD,EAAIc,CAAJ,EAAO;AACT,QAAI;AACA,WAAK+nB,KAAL,CAAW/nB,CAAC,CAAC4gB,UAAF,CAAa1hB,CAAb,EAAgB,KAAK+oB,qBAAL,CAA2B/oB,CAA3B,CAAhB,CAAX;AACH,KAFD,CAEE,OAAOA,CAAP,EAAU;AACR,WAAKuoB,cAAL,GAAsBvoB,CAAtB;AACH;;AACD,SAAKwoB,WAAL,CAAiBM,GAAjB,CAAqB9oB,CAAC,CAACqD,QAAF,EAArB;AACH;;AACD8P,EAAAA,MAAM,CAACnT,CAAD,EAAI;AACN,SAAK6oB,KAAL,CAAW,IAAInQ,EAAJ,CAAO1Y,CAAP,EAAU,KAAKsY,YAAL,CAAkBtY,CAAlB,CAAV,CAAX,GAA6C,KAAKwoB,WAAL,CAAiBM,GAAjB,CAAqB9oB,CAAC,CAACqD,QAAF,EAArB,CAA7C;AACH;;AACK2kB,EAAAA,MAAM,GAAG;AAAA;;AAAA;AACX,UAAI,MAAI,CAACW,qBAAL,IAA8B,MAAI,CAACJ,cAAvC,EAAuD,MAAM,MAAI,CAACA,cAAX;AACvD,YAAMvoB,CAAC,GAAG,MAAI,CAACooB,YAAf,CAFW,CAGX;;AACQ,MAAA,MAAI,CAACC,SAAL,CAAejhB,OAAf,CAAwBtG,CAAC,IAAI;AACjCd,QAAAA,CAAC,CAACmT,MAAF,CAASrS,CAAC,CAACwS,GAAF,CAAMjQ,QAAN,EAAT;AACH,OAFO,GAGR;AACA;AACArD,MAAAA,CAAC,CAACoH,OAAF,CAAW,CAACpH,CAAD,EAAIc,CAAJ,KAAU;AACjB,cAAMG,CAAC,GAAGiI,EAAE,CAACE,QAAH,CAAYtI,CAAZ,CAAV;;AACA,QAAA,MAAI,CAACunB,SAAL,CAAehhB,IAAf,CAAoB,IAAIsR,EAAJ,CAAO1X,CAAP,EAAU,MAAI,CAACqX,YAAL,CAAkBrX,CAAlB,CAAV,CAApB;AACH,OAHD,CALQ,QAQG0b,EAAE,CAAC,MAAI,CAACwL,SAAN,EAAiB,MAAI,CAACE,SAAtB,CARL,EAQuC,MAAI,CAACC,SAAL,GAAiB,CAAC,CARzD;AAJG;AAad;;AACDM,EAAAA,aAAa,CAAC5oB,CAAD,EAAI;AACb,QAAIc,CAAJ;AACA,QAAId,CAAC,CAAC0U,eAAF,EAAJ,EAAyB5T,CAAC,GAAGd,CAAC,CAACwT,OAAN,CAAzB,KAA6C;AACzC,UAAI,CAACxT,CAAC,CAAC2U,YAAF,EAAL,EAAuB,MAAM9S,CAAC,EAAP,CADkB,CAEzC;;AACAf,MAAAA,CAAC,GAAGqN,EAAE,CAAClG,GAAH,EAAJ;AACH;AACD,UAAMhH,CAAC,GAAG,KAAKmnB,YAAL,CAAkBzgB,GAAlB,CAAsB3H,CAAC,CAACsT,GAAF,CAAMjQ,QAAN,EAAtB,CAAV;;AACA,QAAIpC,CAAJ,EAAO;AACH,UAAI,CAACH,CAAC,CAACV,OAAF,CAAUa,CAAV,CAAL,EACA;AACA,cAAM,IAAIiC,CAAJ,CAAMN,CAAN,EAAS,6CAAT,CAAN;AACH,KAJD,MAIO,KAAKwlB,YAAL,CAAkBnkB,GAAlB,CAAsBjE,CAAC,CAACsT,GAAF,CAAMjQ,QAAN,EAAtB,EAAwCvC,CAAxC;AACV;AACD;AACJ;AACA;AACA;;;AAAWwX,EAAAA,YAAY,CAACtY,CAAD,EAAI;AACnB,UAAMc,CAAC,GAAG,KAAKsnB,YAAL,CAAkBzgB,GAAlB,CAAsB3H,CAAC,CAACqD,QAAF,EAAtB,CAAV;AACA,WAAO,CAAC,KAAKmlB,WAAL,CAAiBpL,GAAjB,CAAqBpd,CAAC,CAACqD,QAAF,EAArB,CAAD,IAAuCvC,CAAvC,GAA2CiX,EAAE,CAACC,UAAH,CAAclX,CAAd,CAA3C,GAA8DiX,EAAE,CAACG,IAAH,EAArE;AACH;AACD;AACJ;AACA;;;AAAW6Q,EAAAA,qBAAqB,CAAC/oB,CAAD,EAAI;AAC5B,UAAMc,CAAC,GAAG,KAAKsnB,YAAL,CAAkBzgB,GAAlB,CAAsB3H,CAAC,CAACqD,QAAF,EAAtB,CAAV,CAD4B,CAE5B;AACA;;AACQ,QAAI,CAAC,KAAKmlB,WAAL,CAAiBpL,GAAjB,CAAqBpd,CAAC,CAACqD,QAAF,EAArB,CAAD,IAAuCvC,CAA3C,EAA8C;AAClD,UAAIA,CAAC,CAACV,OAAF,CAAU+N,EAAE,CAAClG,GAAH,EAAV,CAAJ,EACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAM,IAAI/E,CAAJ,CAAMd,CAAN,EAAS,6CAAT,CAAN,CAXkD,CAYlD;;AACY,aAAO2V,EAAE,CAACC,UAAH,CAAclX,CAAd,CAAP;AACf,KAlB2B,CAmB5B;AACA;;;AACA,WAAOiX,EAAE,CAACE,MAAH,CAAU,CAAC,CAAX,CAAP;AACH;;AACD4Q,EAAAA,KAAK,CAAC7oB,CAAD,EAAI;AACL,SAAK2oB,qBAAL,IAA8B,KAAKN,SAAL,CAAehhB,IAAf,CAAoBrH,CAApB,CAA9B;AACH;;AACD2oB,EAAAA,qBAAqB,GAAG,CAAE;;AApGjB;AAuGb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;;;AACA,MAAMK,EAAN,CAAS;AACLjpB,EAAAA,WAAW,CAACC,CAAD,EAAIc,CAAJ,EAAOG,CAAP,EAAUiE,CAAV,EAAa;AACpB,SAAK+jB,UAAL,GAAkBjpB,CAAlB,EAAqB,KAAKmoB,SAAL,GAAiBrnB,CAAtC,EAAyC,KAAKooB,cAAL,GAAsBjoB,CAA/D,EAAkE,KAAKkoB,QAAL,GAAgBjkB,CAAlF,EACA,KAAK6J,EAAL,GAAU,CADV,EACa,KAAKI,EAAL,GAAU,IAAI2M,EAAJ,CAAO,KAAKmN,UAAZ,EAAwB;AAAoB;AAA5C,KADvB;AAEH;AACD;;;AAAgEG,EAAAA,GAAG,GAAG;AAClE,SAAKra,EAAL,IAAW,CAAX,EAAc,KAAKoB,EAAL,EAAd;AACH;;AACDA,EAAAA,EAAE,GAAG;AAAA;;AACD,SAAKhB,EAAL,CAAQ5J,CAAR,iCAAW,aAAY;AACnB,YAAMvF,CAAC,GAAG,IAAIkoB,EAAJ,CAAO,MAAI,CAACC,SAAZ,CAAV;AAAA,YAAkCrnB,CAAC,GAAG,MAAI,CAACuP,EAAL,CAAQrQ,CAAR,CAAtC;;AACAc,MAAAA,CAAC,IAAIA,CAAC,CAACgE,IAAF,CAAQhE,CAAC,IAAI;AACd,QAAA,MAAI,CAACmoB,UAAL,CAAgBI,gBAAhB,CAAkC,MAAMrpB,CAAC,CAACgoB,MAAF,GAAWljB,IAAX,CAAiB,MAAM;AAC3D,UAAA,MAAI,CAACqkB,QAAL,CAAczlB,OAAd,CAAsB5C,CAAtB;AACH,SAFuC,EAEpC2b,KAFoC,CAE7Bzc,CAAC,IAAI;AACZ,UAAA,MAAI,CAAC0Q,EAAL,CAAQ1Q,CAAR;AACH,SAJuC,CAAxC;AAKH,OANI,EAMDyc,KANC,CAMMzc,CAAC,IAAI;AACZ,QAAA,MAAI,CAAC0Q,EAAL,CAAQ1Q,CAAR;AACH,OARI,CAAL;AASH,KAXD;AAYH;;AACDqQ,EAAAA,EAAE,CAACrQ,CAAD,EAAI;AACF,QAAI;AACA,YAAMc,CAAC,GAAG,KAAKooB,cAAL,CAAoBlpB,CAApB,CAAV;AACA,aAAO,CAACqK,EAAE,CAACvJ,CAAD,CAAH,IAAUA,CAAC,CAAC2b,KAAZ,IAAqB3b,CAAC,CAACgE,IAAvB,GAA8BhE,CAA9B,IAAmC,KAAKqoB,QAAL,CAAcxlB,MAAd,CAAqB7B,KAAK,CAAC,4CAAD,CAA1B,GAC1C,IADO,CAAP;AAEH,KAJD,CAIE,OAAO9B,CAAP,EAAU;AACR;AACA,aAAO,KAAKmpB,QAAL,CAAcxlB,MAAd,CAAqB3D,CAArB,GAAyB,IAAhC;AACH;AACJ;;AACD0Q,EAAAA,EAAE,CAAC1Q,CAAD,EAAI;AACF,SAAK+O,EAAL,GAAU,CAAV,IAAe,KAAK4B,EAAL,CAAQ3Q,CAAR,CAAf,IAA6B,KAAK+O,EAAL,IAAW,CAAX,EAAc,KAAKka,UAAL,CAAgBI,gBAAhB,CAAkC,OAAO,KAAKlZ,EAAL,IACpF1M,OAAO,CAACC,OAAR,EAD6E,CAAlC,CAA3C,IACwB,KAAKylB,QAAL,CAAcxlB,MAAd,CAAqB3D,CAArB,CADxB;AAEH;;AACD2Q,EAAAA,EAAE,CAAC3Q,CAAD,EAAI;AACF,QAAI,oBAAoBA,CAAC,CAACsD,IAA1B,EAAgC;AAC5B;AACA;AACA,YAAMxC,CAAC,GAAGd,CAAC,CAACmD,IAAZ;AACA,aAAO,cAAcrC,CAAd,IAAmB,0BAA0BA,CAA7C,IAAkD;AACzD;AACZ;AACA;AACA;AACA;AACA;AACY,gBAASd,CAAT,EAAY;AACR,gBAAQA,CAAR;AACE;AACE,mBAAO6B,CAAC,EAAR;;AAEF,eAAKK,CAAL;AACA,eAAKC,CAAL;AACA,eAAKE,CAAL;AACA,eAAKK,CAAL;AACA,eAAKK,CAAL;AACA,eAAKC,CAAL,CATF,CAUf;AACmB;;AACkB,eAAKP,CAAL;AAClB,mBAAO,CAAC,CAAR;;AAEF,eAAKL,CAAL;AACA,eAAKE,CAAL;AACA,eAAKC,CAAL;AACA,eAAKC,CAAL;AACA,eAAKG,CAAL,CAnBF,CAoBf;AACmB;AACA;;AACkB,eAAKC,CAAL;AACpB,eAAKC,CAAL;AACA,eAAKC,CAAL;AACA,eAAKG,CAAL;AACE,mBAAO,CAAC,CAAR;AA3BJ;AA6BH,OA9BD,CA8BEnC,CA9BF,CAPA;AAsCH;;AACD,WAAO,CAAC,CAAR;AACH;;AAjFI;AAoFT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;;;AAA0E,SAASwoB,EAAT,GAAc;AACpF;AACA;AACA,SAAO,eAAe,OAAOtM,QAAtB,GAAiCA,QAAjC,GAA4C,IAAnD;AACH;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAAI,MAAMuM,EAAN,CAAS;AACTxpB,EAAAA,WAAW,CAACC,CAAD,EAAIc,CAAJ,EAAOG,CAAP,EAAUiE,CAAV,EAAaY,CAAb,EAAgB;AACvB,SAAKmjB,UAAL,GAAkBjpB,CAAlB,EAAqB,KAAK+b,OAAL,GAAejb,CAApC,EAAuC,KAAK0oB,YAAL,GAAoBvoB,CAA3D,EAA8D,KAAKoU,EAAL,GAAUnQ,CAAxE,EAA2E,KAAKukB,eAAL,GAAuB3jB,CAAlG,EACA,KAAKqjB,QAAL,GAAgB,IAAI5lB,CAAJ,EADhB,EACuB,KAAKuB,IAAL,GAAY,KAAKqkB,QAAL,CAAc3lB,OAAd,CAAsBsB,IAAtB,CAA2BwY,IAA3B,CAAgC,KAAK6L,QAAL,CAAc3lB,OAA9C,CADnC,EAEA;AACA;AACA;AACA,SAAK2lB,QAAL,CAAc3lB,OAAd,CAAsBiZ,KAAtB,CAA6Bzc,CAAC,IAAI,CAAE,CAApC,CALA;AAMH;AACD;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAAmC,SAAjB0pB,iBAAiB,CAAC1pB,CAAD,EAAIc,CAAJ,EAAOG,CAAP,EAAUiE,CAAV,EAAaY,CAAb,EAAgB;AAC3C,UAAMT,CAAC,GAAGoI,IAAI,CAACF,GAAL,KAAatM,CAAvB;AAAA,UAA0BqE,CAAC,GAAG,IAAIikB,EAAJ,CAAOvpB,CAAP,EAAUc,CAAV,EAAauE,CAAb,EAAgBH,CAAhB,EAAmBY,CAAnB,CAA9B;AACA,WAAOR,CAAC,CAACjB,KAAF,CAAQpD,CAAR,GAAYqE,CAAnB;AACH;AACD;AACJ;AACA;AACA;;;AAAWjB,EAAAA,KAAK,CAACrE,CAAD,EAAI;AACZ,SAAK2pB,WAAL,GAAmBC,UAAU,CAAE,MAAM,KAAKC,kBAAL,EAAR,EAAoC7pB,CAApC,CAA7B;AACH;AACD;AACJ;AACA;AACA;;;AAAWoc,EAAAA,SAAS,GAAG;AACf,WAAO,KAAKyN,kBAAL,EAAP;AACH;AACD;AACJ;AACA;AACA;AACA;AACA;AACA;;;AAAW5N,EAAAA,MAAM,CAACjc,CAAD,EAAI;AACb,aAAS,KAAK2pB,WAAd,KAA8B,KAAKG,YAAL,IAAqB,KAAKX,QAAL,CAAcxlB,MAAd,CAAqB,IAAIT,CAAJ,CAAMhB,CAAN,EAAS,yBAAyBlC,CAAC,GAAG,OAAOA,CAAV,GAAc,EAAxC,CAAT,CAArB,CAAnD;AACH;;AACD6pB,EAAAA,kBAAkB,GAAG;AACjB,SAAKZ,UAAL,CAAgBI,gBAAhB,CAAkC,MAAM,SAAS,KAAKM,WAAd,IAA6B,KAAKG,YAAL,IACrE,KAAKzU,EAAL,GAAUvQ,IAAV,CAAgB9E,CAAC,IAAI,KAAKmpB,QAAL,CAAczlB,OAAd,CAAsB1D,CAAtB,CAArB,CADwC,IACWyD,OAAO,CAACC,OAAR,EADnD;AAEH;;AACDomB,EAAAA,YAAY,GAAG;AACX,aAAS,KAAKH,WAAd,KAA8B,KAAKF,eAAL,CAAqB,IAArB,GAA4BK,YAAY,CAAC,KAAKH,WAAN,CAAxC,EAC9B,KAAKA,WAAL,GAAmB,IADnB;AAEH;;AAtDQ;AAyDb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAAI,MAAMI,EAAN,CAAS;AACThqB,EAAAA,WAAW,GAAG;AACV;AACA,SAAK6Q,EAAL,GAAUnN,OAAO,CAACC,OAAR,EAAV,EACA;AACA;AACA,SAAKsN,EAAL,GAAU,EAHV,EAIA;AACA;AACA,SAAKE,EAAL,GAAU,CAAC,CANX,EAOA;AACA;AACA,SAAKG,EAAL,GAAU,EATV,EAUA;AACA,SAAKC,EAAL,GAAU,IAXV,EAYA;AACA;AACA,SAAKY,EAAL,GAAU,CAAC,CAdX,EAeA;AACA,SAAKE,EAAL,GAAU,CAAC,CAhBX,EAiBA;AACA,SAAKC,EAAL,GAAU,EAlBV,EAmBA;AACA,SAAKlD,EAAL,GAAU,IAAI2M,EAAJ,CAAO,IAAP,EAAa;AAAoB;AAAjC,KApBV,EAqBA;AACA;AACA;AACA,SAAKvJ,EAAL,GAAU,MAAM;AACZ,YAAMvS,CAAC,GAAGspB,EAAE,EAAZ;AACAtpB,MAAAA,CAAC,IAAIa,CAAC,CAAC,YAAD,EAAe,iCAAiCb,CAAC,CAACgqB,eAAlD,CAAN,EAA0E,KAAK7a,EAAL,CAAQtJ,CAAR,EAA1E;AACH,KA3BD;AA4BA,UAAM7F,CAAC,GAAGspB,EAAE,EAAZ;AACAtpB,IAAAA,CAAC,IAAI,cAAc,OAAOA,CAAC,CAACiqB,gBAA5B,IAAgDjqB,CAAC,CAACiqB,gBAAF,CAAmB,kBAAnB,EAAuC,KAAK1X,EAA5C,CAAhD;AACH;;AACiB,MAAd2X,cAAc,GAAG;AACjB,WAAO,KAAKhZ,EAAZ;AACH;AACD;AACJ;AACA;AACA;;;AAAWmY,EAAAA,gBAAgB,CAACrpB,CAAD,EAAI;AACvB;AACA,SAAKmqB,OAAL,CAAanqB,CAAb;AACH;;AACDoqB,EAAAA,mCAAmC,CAACpqB,CAAD,EAAI;AACnC,SAAKwS,EAAL,IACA;AACA,SAAKC,EAAL,CAAQzS,CAAR,CAFA;AAGH;;AACDqqB,EAAAA,mBAAmB,CAACrqB,CAAD,EAAI;AACnB,QAAI,CAAC,KAAKkR,EAAV,EAAc;AACV,WAAKA,EAAL,GAAU,CAAC,CAAX,EAAc,KAAKkB,EAAL,GAAUpS,CAAC,IAAI,CAAC,CAA9B;AACA,YAAMc,CAAC,GAAGwoB,EAAE,EAAZ;AACAxoB,MAAAA,CAAC,IAAI,cAAc,OAAOA,CAAC,CAACwpB,mBAA5B,IAAmDxpB,CAAC,CAACwpB,mBAAF,CAAsB,kBAAtB,EAA0C,KAAK/X,EAA/C,CAAnD;AACH;AACJ;;AACD4X,EAAAA,OAAO,CAACnqB,CAAD,EAAI;AACP,QAAI,KAAKwS,EAAL,IAAW,KAAKtB,EAApB,EACA;AACA,aAAO,IAAIzN,OAAJ,CAAa,MAAM,CAAE,CAArB,CAAP,CAHO,CAIP;AACA;AACA;;AACQ,UAAM3C,CAAC,GAAG,IAAIyC,CAAJ,EAAV;AACR,WAAO,KAAKkP,EAAL,CAAS,MAAM,KAAKvB,EAAL,IAAW,KAAKkB,EAAhB,GAAqB3O,OAAO,CAACC,OAAR,EAArB,IAA0C1D,CAAC,GAAG8E,IAAJ,CAAShE,CAAC,CAAC4C,OAAX,EAAoB5C,CAAC,CAAC6C,MAAtB,GAChE7C,CAAC,CAAC0C,OADoB,CAAf,EACMsB,IADN,CACY,MAAMhE,CAAC,CAAC0C,OADpB,CAAP;AAEH;;AACDc,EAAAA,gBAAgB,CAACtE,CAAD,EAAI;AAChB,SAAKqpB,gBAAL,CAAuB,OAAO,KAAKrY,EAAL,CAAQ3J,IAAR,CAAarH,CAAb,GAAiB,KAAK0S,EAAL,EAAxB,CAAvB;AACH;AACD;AACJ;AACA;AACA;;;AAAiBA,EAAAA,EAAE,GAAG;AAAA;;AAAA;AACd,UAAI,MAAM,MAAI,CAAC1B,EAAL,CAAQvL,MAAlB,EAA0B;AACtB,YAAI;AACA,gBAAM,MAAI,CAACuL,EAAL,CAAQ,CAAR,GAAN,EAAoB,MAAI,CAACA,EAAL,CAAQuZ,KAAR,EAApB,EAAqC,MAAI,CAACpb,EAAL,CAAQ6M,KAAR,EAArC;AACH,SAFD,CAEE,OAAOhc,CAAP,EAAU;AACR,cAAI;AACJ;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACgB;AACA,oBAASA,CAAT,EAAY;AACR;AACA;AACA,mBAAO,gCAAgCA,CAAC,CAACsD,IAAzC;AACH;AACD;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AApBgB,WAoBXtD,CApBW,CAlBA,EAsCP,MAAMA,CAAN,CAvCe,CAwCvB;;AAC+Ba,UAAAA,CAAC,CAAC,YAAD,EAAe,4CAA4Cb,CAA3D,CAAD;AACnB;;AACD,QAAA,MAAI,CAACgR,EAAL,CAAQvL,MAAR,GAAiB,CAAjB,IACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAA,MAAI,CAAC0J,EAAL,CAAQ5J,CAAR,CAAW,MAAM,MAAI,CAACmN,EAAL,EAAjB,CAXA;AAYH;AA3Da;AA4DjB;;AACDD,EAAAA,EAAE,CAACzS,CAAD,EAAI;AACF,UAAMc,CAAC,GAAG,KAAK8P,EAAL,CAAQ9L,IAAR,CAAc,OAAO,KAAKoN,EAAL,GAAU,CAAC,CAAX,EAAclS,CAAC,GAAGyc,KAAJ,CAAWzc,CAAC,IAAI;AACzD,WAAKsR,EAAL,GAAUtR,CAAV,EAAa,KAAKkS,EAAL,GAAU,CAAC,CAAxB;;AACA,YAAMpR,CAAC;AACP;AACZ;AACA;AACA;AACA;AACY,gBAASd,CAAT,EAAY;AACR,YAAIc,CAAC,GAAGd,CAAC,CAACoD,OAAF,IAAa,EAArB;AACApD,QAAAA,CAAC,CAACwqB,KAAF,KAAY1pB,CAAC,GAAGd,CAAC,CAACwqB,KAAF,CAAQC,QAAR,CAAiBzqB,CAAC,CAACoD,OAAnB,IAA8BpD,CAAC,CAACwqB,KAAhC,GAAwCxqB,CAAC,CAACoD,OAAF,GAAY,IAAZ,GAAmBpD,CAAC,CAACwqB,KAA7E;AACA,eAAO1pB,CAAP;AACH;AACD;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACY;AACA;;AACA;AACZ;AACA;AACA;AACA;AACA;AACA;AA7BY,OA6BPd,CA7BO,CANA,CAFyD,CAsCzD;AACA;AACA;;;AACA,YAAMqB,CAAC,CAAC,4BAAD,EAA+BP,CAA/B,CAAD,EAAoCd,CAA1C;AACH,KA1C4C,EA0CzC8E,IA1CyC,CA0CnC9E,CAAC,KAAK,KAAKkS,EAAL,GAAU,CAAC,CAAX,EAAclS,CAAnB,CA1CkC,CAArB,CAAd,CAAV;AA2CA,WAAO,KAAK4Q,EAAL,GAAU9P,CAAV,EAAaA,CAApB;AACH;;AACDqb,EAAAA,iBAAiB,CAACnc,CAAD,EAAIc,CAAJ,EAAOG,CAAP,EAAU;AACvB,SAAKuR,EAAL,IACA;AACA,SAAKH,EAAL,CAAQ/J,OAAR,CAAgBtI,CAAhB,IAAqB,CAAC,CAAtB,KAA4Bc,CAAC,GAAG,CAAhC,CAFA;AAGA,UAAMoE,CAAC,GAAGqkB,EAAE,CAACG,iBAAH,CAAqB,IAArB,EAA2B1pB,CAA3B,EAA8Bc,CAA9B,EAAiCG,CAAjC,EAAqCjB,CAAC,IAAI,KAAK2S,EAAL,CAAQ3S,CAAR,CAA1C,CAAV;AACA,WAAO,KAAKqR,EAAL,CAAQhK,IAAR,CAAanC,CAAb,GAAiBA,CAAxB;AACH;;AACDsN,EAAAA,EAAE,GAAG;AACD,SAAKlB,EAAL,IAAWzP,CAAC,EAAZ;AACH;;AACD6oB,EAAAA,yBAAyB,GAAG,CAAE;AAC9B;AACJ;AACA;AACA;;;AAAiB9X,EAAAA,EAAE,GAAG;AAAA;;AAAA;AACd;AACA;AACA;AACA;AACA,UAAI5S,CAAJ;;AACA,SAAG;AACCA,QAAAA,CAAC,GAAG,MAAI,CAAC4Q,EAAT,QAAmB5Q,CAAnB;AACH,OAFD,QAESA,CAAC,KAAK,MAAI,CAAC4Q,EAFpB;AANc;AASjB;AACD;AACJ;AACA;AACA;;;AAAWkC,EAAAA,EAAE,CAAC9S,CAAD,EAAI;AACT,SAAK,MAAMc,CAAX,IAAgB,KAAKuQ,EAArB,EAAyB,IAAIvQ,CAAC,CAACib,OAAF,KAAc/b,CAAlB,EAAqB,OAAO,CAAC,CAAR;;AAC9C,WAAO,CAAC,CAAR;AACH;AACD;AACJ;AACA;AACA;AACA;AACA;AACA;;;AAAWqT,EAAAA,EAAE,CAACrT,CAAD,EAAI;AACT;AACA,WAAO,KAAK4S,EAAL,GAAU9N,IAAV,CAAgB,MAAM;AACzB;AACA,WAAKuM,EAAL,CAAQpC,IAAR,CAAc,CAACjP,CAAD,EAAIc,CAAJ,KAAUd,CAAC,CAACwpB,YAAF,GAAiB1oB,CAAC,CAAC0oB,YAA3C;;AACA,WAAK,MAAM1oB,CAAX,IAAgB,KAAKuQ,EAArB,EAAyB,IAAIvQ,CAAC,CAACsb,SAAF,IAAe;AAAM;AAAN,UAAoBpc,CAApB,IAAyBc,CAAC,CAACib,OAAF,KAAc/b,CAA1D,EAA6D;;AACtF,aAAO,KAAK4S,EAAL,EAAP;AACH,KALM,CAAP;AAMH;AACD;AACJ;AACA;;;AAAWkC,EAAAA,EAAE,CAAC9U,CAAD,EAAI;AACT,SAAKqS,EAAL,CAAQhL,IAAR,CAAarH,CAAb;AACH;AACD;;;AAA6D2S,EAAAA,EAAE,CAAC3S,CAAD,EAAI;AAC/D;AACA,UAAMc,CAAC,GAAG,KAAKuQ,EAAL,CAAQ/I,OAAR,CAAgBtI,CAAhB,CAAV;AACA,SAAKqR,EAAL,CAAQsZ,MAAR,CAAe7pB,CAAf,EAAkB,CAAlB;AACH;;AA3OQ;;AA8Ob,MAAM8pB,EAAN,CAAS;AACL;AACA7qB,EAAAA,WAAW,CAACC,CAAD,EAAIc,CAAJ,EAAO;AACd,SAAK+iB,UAAL,GAAkB7jB,CAAlB,EAAqB,KAAK6qB,YAAL,GAAoB/pB,CAAzC,EAA4C,KAAK+mB,WAAL,GAAmB3F,EAAE,CAACliB,CAAD,CAAjE;AACH;AACD;AACJ;AACA;AACA;AACA;AACA;;;AAAW2H,EAAAA,GAAG,CAAC3H,CAAD,EAAI;AACV,UAAMc,CAAC,GAAGinB,EAAE,CAAC/nB,CAAD,EAAI,KAAK6jB,UAAT,CAAZ;AAAA,UAAkC5iB,CAAC,GAAG,IAAImlB,EAAJ,CAAO,KAAKvC,UAAZ,CAAtC;AACA,WAAO,KAAKgH,YAAL,CAAkBnC,MAAlB,CAAyB,CAAE5nB,CAAC,CAACif,IAAJ,CAAzB,EAAqCjb,IAArC,CAA2C9E,CAAC,IAAI;AACnD,UAAI,CAACA,CAAD,IAAM,MAAMA,CAAC,CAACyF,MAAlB,EAA0B,OAAO5D,CAAC,EAAR;AAC1B,YAAMqD,CAAC,GAAGlF,CAAC,CAAC,CAAD,CAAX;AACA,UAAIkF,CAAC,CAACwP,eAAF,EAAJ,EAAyB,OAAO,IAAIkP,EAAJ,CAAO,KAAKC,UAAZ,EAAwB5iB,CAAxB,EAA2BiE,CAAC,CAACoO,GAA7B,EAAkCpO,CAAlC,EAAqCpE,CAAC,CAACgf,SAAvC,CAAP;AACzB,UAAI5a,CAAC,CAACyP,YAAF,EAAJ,EAAsB,OAAO,IAAIiP,EAAJ,CAAO,KAAKC,UAAZ,EAAwB5iB,CAAxB,EAA2BH,CAAC,CAACif,IAA7B,EAAmC,IAAnC,EAAyCjf,CAAC,CAACgf,SAA3C,CAAP;AACtB,YAAMje,CAAC,EAAP;AACH,KANM,CAAP;AAOH;;AACDoC,EAAAA,GAAG,CAACjE,CAAD,EAAIc,CAAJ,EAAOG,CAAP,EAAU;AACT,UAAMiE,CAAC,GAAG6iB,EAAE,CAAC/nB,CAAD,EAAI,KAAK6jB,UAAT,CAAZ;AAAA,UAAkC/d,CAAC,GAAGogB,EAAE,CAAChhB,CAAC,CAAC4a,SAAH,EAAchf,CAAd,EAAiBG,CAAjB,CAAxC;AAAA,UAA6DoE,CAAC,GAAG8c,EAAE,CAAC,KAAK0F,WAAN,EAAmB,iBAAnB,EAAsC3iB,CAAC,CAAC6a,IAAxC,EAA8Cja,CAA9C,EAAiD,SAASZ,CAAC,CAAC4a,SAA5D,EAAuE7e,CAAvE,CAAnE;;AACA,WAAO,KAAK4pB,YAAL,CAAkB5mB,GAAlB,CAAsBiB,CAAC,CAAC6a,IAAxB,EAA8B1a,CAA9B,GAAkC,IAAzC;AACH;;AACD6U,EAAAA,MAAM,CAACla,CAAD,EAAIc,CAAJ,EAAOG,CAAP,EAAU,GAAGiE,CAAb,EAAgB;AAClB,UAAMY,CAAC,GAAGiiB,EAAE,CAAC/nB,CAAD,EAAI,KAAK6jB,UAAT,CAAZ,CADkB,CAElB;AACA;;AACQ,QAAIxe,CAAJ;AACR,WAAOA,CAAC,GAAG,YAAY,QAAQvE,CAAC,GAAGjB,kBAAkB,CAACiB,CAAD,CAA9B,CAAZ,IAAkDA,CAAC,YAAY+f,EAA/D,GAAoEyC,EAAE,CAAC,KAAKuE,WAAN,EAAmB,oBAAnB,EAAyC/hB,CAAC,CAACia,IAA3C,EAAiDjf,CAAjD,EAAoDG,CAApD,EAAuDiE,CAAvD,CAAtE,GAAkIke,EAAE,CAAC,KAAKyE,WAAN,EAAmB,oBAAnB,EAAyC/hB,CAAC,CAACia,IAA3C,EAAiDjf,CAAjD,CAAxI,EACP,KAAK+pB,YAAL,CAAkB3Q,MAAlB,CAAyBpU,CAAC,CAACia,IAA3B,EAAiC1a,CAAjC,CADO,EAC8B,IADrC;AAEH;AACD;AACJ;AACA;AACA;AACA;AACA;;;AAAW8N,EAAAA,MAAM,CAACnT,CAAD,EAAI;AACb,UAAMc,CAAC,GAAGinB,EAAE,CAAC/nB,CAAD,EAAI,KAAK6jB,UAAT,CAAZ;AACA,WAAO,KAAKgH,YAAL,CAAkB1X,MAAlB,CAAyBrS,CAAC,CAACif,IAA3B,GAAkC,IAAzC;AACH;;AAxCI;AA2CT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAAI,SAAS+K,EAAT,CAAY9qB,CAAZ,EAAec,CAAf,EAAkB;AAClB,QAAMG,CAAC,GAAGic,EAAE,CAACld,CAAC,GAAGkK,EAAE,CAAClK,CAAD,EAAIoe,EAAJ,CAAP,CAAZ;AAAA,QAA6BlZ,CAAC,GAAG,IAAI3B,CAAJ,EAAjC;AACA,SAAO,IAAIylB,EAAJ,CAAO,IAAIe,EAAJ,EAAP,EAAe9oB,CAAf,EAAmBA,CAAC,IAAIH,CAAC,CAAC,IAAI8pB,EAAJ,CAAO5qB,CAAP,EAAUiB,CAAV,CAAD,CAAzB,EAA0CiE,CAA1C,EAA6CkkB,GAA7C,IAAoDlkB,CAAC,CAAC1B,OAA7D;AACH;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAAI,CAAC,UAASxD,CAAT,EAAY;AACbS,EAAAA,CAAC,GAAGT,CAAJ;AACH,CAFI,CAEF,GAAET,WAAY,OAFZ,CAAD,EAEsBL,kBAAkB,CAAC,IAAIM,SAAJ,CAAc,gBAAd,EAAiC,CAACQ,CAAD,EAAI;AAACyd,EAAAA,OAAO,EAAE3c;AAAV,CAAJ,KAAqB;AAC/F,QAAMG,CAAC,GAAGjB,CAAC,CAAC+qB,WAAF,CAAc,KAAd,EAAqBxL,YAArB,EAAV;AAAA,QAA+Cra,CAAC,GAAG,IAAIkZ,EAAJ,CAAOnd,CAAP,EAAU,IAAI0D,CAAJ,CAAM3E,CAAC,CAAC+qB,WAAF,CAAc,eAAd,CAAN,CAAV,EAAiD,IAAIrlB,CAAJ,CAAM1F,CAAC,CAAC+qB,WAAF,CAAc,oBAAd,CAAN,CAAjD,CAAnD;AACA,SAAOjqB,CAAC,IAAIoE,CAAC,CAACyZ,YAAF,CAAe7d,CAAf,CAAL,EAAwBoE,CAA/B;AACH,CAH4C,EAGzC,QAHyC,CAAD,CAFxC,EAMJ;AACA/F,eAAe,CAAC,gBAAD,EAAmB,OAAnB,EAA4B,EAA5B,CAPX,EAO4CA,eAAe,CAAC,gBAAD,EAAmB,OAAnB,EAA4B,SAA5B,CAP3D;AASJ,SAAS6hB,EAAE,IAAIgK,KAAf,EAAsB7K,EAAE,IAAI8K,mBAA5B,EAAiDpL,EAAE,IAAIqL,iBAAvD,EAA0EtH,EAAE,IAAIuH,gBAAhF,EAAkGtK,EAAE,IAAIuK,SAAxG,EAAmHlK,EAAE,IAAImK,UAAzH,EAAqIjN,EAAE,IAAIkN,SAA3I,EAAsJpoB,CAAC,IAAIqoB,cAA3J,EAA2KnK,EAAE,IAAIoK,QAAjL,EAA2LnL,EAAE,IAAIoL,KAAjM,EAAwM7G,EAAE,IAAI8G,eAA9M,EAA+NxH,EAAE,IAAIyH,qBAArO,EAA4PrH,EAAE,IAAIsH,aAAlQ,EAAiRxe,EAAE,IAAIye,SAAvR,EAAkSjB,EAAE,IAAIkB,WAAxS,EAAqTrE,EAAE,IAAIsE,UAA3T,EAAuU5E,EAAE,IAAI6E,MAA7U,EAAqVzE,EAAE,IAAI0E,WAA3V,EAAwW3E,EAAE,IAAI4E,UAA9W,EAA0X3L,EAAE,IAAI4L,UAAhY,EAA4Y3L,EAAE,IAAIlX,eAAlZ,EAAmakW,EAAE,IAAI4M,wBAAza,EAAmclF,EAAE,IAAImF,SAAzc,EAAodjF,EAAE,IAAIkF,WAA1d,EAAue7L,EAAE,IAAI8L,GAA7e,EAAkfxL,EAAE,IAAIyL,UAAxf,EAAogBxG,EAAE,IAAI9Q,KAA1gB,EAAihB6Q,EAAE,IAAI0G,SAAvhB,EAAkiB5F,EAAE,IAAI6F,MAAxiB,EAAgjB5F,EAAE,IAAI6F,OAAtjB,EAA+jBrN,EAAE,IAAIsN,YAArkB,EAAmlBpF,EAAE,IAAI7M,SAAzlB,EAAomBwE,EAAE,IAAI0N,mBAA1mB,EAA+nBrH,EAAE,IAAIre,KAAroB,EAA4oBse,EAAE,IAAIqH,WAAlpB,EAA+pBxH,EAAE,IAAIvQ,OAArqB,EAA8qB8P,EAAE,IAAIL,KAAprB,EAA2rB5D,EAAE,IAAImM,UAAjsB,EAA6sBpM,EAAE,IAAIqM,QAAntB,EAA6tBlC,EAAE,IAAImC,cAAnuB,EAAmvB5F,EAAE,IAAI6F,eAAzvB,EAA0wBlG,EAAE,IAAImG,MAAhxB,EAAwxBxsB,CAAC,IAAIC,WAA7xB,EAA0yB+jB,EAAE,IAAIyI,aAAhzB,EAA+zBvH,EAAE,IAAIwH,UAAr0B,EAAi1BzH,EAAE,IAAI3Q,OAAv1B,EAAg2B2K,EAAE,IAAIlD,SAAt2B,EAAi3BuK,EAAE,IAAIqG,SAAv3B,EAAk4BlI,EAAE,IAAI5J,KAAx4B,EAA+4ByM,EAAE,IAAIsF,UAAr5B","sourcesContent":["import { _registerComponent, registerVersion, _getProvider, getApp, _removeServiceInstance, SDK_VERSION } from '@firebase/app';\nimport { Component } from '@firebase/component';\nimport { Logger, LogLevel } from '@firebase/logger';\nimport { FirebaseError, createMockUserToken, getModularInstance } from '@firebase/util';\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Simple wrapper around a nullable UID. Mostly exists to make code more\n * readable.\n */\nclass l {\n    constructor(t) {\n        this.uid = t;\n    }\n    isAuthenticated() {\n        return null != this.uid;\n    }\n    /**\n     * Returns a key representing this user, suitable for inclusion in a\n     * dictionary.\n     */    toKey() {\n        return this.isAuthenticated() ? \"uid:\" + this.uid : \"anonymous-user\";\n    }\n    isEqual(t) {\n        return t.uid === this.uid;\n    }\n}\n\n/** A user with a null UID. */ l.UNAUTHENTICATED = new l(null), \n// TODO(mikelehen): Look into getting a proper uid-equivalent for\n// non-FirebaseAuth providers.\nl.GOOGLE_CREDENTIALS = new l(\"google-credentials-uid\"), l.FIRST_PARTY = new l(\"first-party-uid\"), \nl.MOCK_USER = new l(\"mock-user\");\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nlet f = \"9.6.7\";\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nconst d = new Logger(\"@firebase/firestore\");\n\n/**\n * Sets the verbosity of Cloud Firestore logs (debug, error, or silent).\n *\n * @param logLevel - The verbosity you set for activity and error logging. Can\n *   be any of the following values:\n *\n *   <ul>\n *     <li>`debug` for the most verbose logging level, primarily for\n *     debugging.</li>\n *     <li>`error` to log errors only.</li>\n *     <li><code>`silent` to turn off logging.</li>\n *   </ul>\n */ function w(t) {\n    d.setLogLevel(t);\n}\n\nfunction m(t, ...e) {\n    if (d.logLevel <= LogLevel.DEBUG) {\n        const n = e.map(_);\n        d.debug(`Firestore (${f}): ${t}`, ...n);\n    }\n}\n\nfunction p(t, ...e) {\n    if (d.logLevel <= LogLevel.ERROR) {\n        const n = e.map(_);\n        d.error(`Firestore (${f}): ${t}`, ...n);\n    }\n}\n\n/**\n * @internal\n */ function y(t, ...e) {\n    if (d.logLevel <= LogLevel.WARN) {\n        const n = e.map(_);\n        d.warn(`Firestore (${f}): ${t}`, ...n);\n    }\n}\n\n/**\n * Converts an additional log parameter to a string representation.\n */ function _(t) {\n    if (\"string\" == typeof t) return t;\n    try {\n        return e = t, JSON.stringify(e);\n    } catch (e) {\n        // Converting to JSON failed, just log the object directly\n        return t;\n    }\n    /**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n    /** Formats an object as a JSON string, suitable for logging. */\n    var e;\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Unconditionally fails, throwing an Error with the given message.\n * Messages are stripped in production builds.\n *\n * Returns `never` and can be used in expressions:\n * @example\n * let futureVar = fail('not implemented yet');\n */ function g(t = \"Unexpected state\") {\n    // Log the failure in addition to throw an exception, just in case the\n    // exception is swallowed.\n    const e = `FIRESTORE (${f}) INTERNAL ASSERTION FAILED: ` + t;\n    // NOTE: We don't use FirestoreError here because these are internal failures\n    // that cannot be handled by the user. (Also it would create a circular\n    // dependency between the error and assert modules which doesn't work.)\n    throw p(e), new Error(e);\n}\n\n/**\n * Fails if the given assertion condition is false, throwing an Error with the\n * given message if it did.\n *\n * Messages are stripped in production builds.\n */ function v(t, e) {\n    t || g();\n}\n\n/**\n * Casts `obj` to `T`. In non-production builds, verifies that `obj` is an\n * instance of `T` before casting.\n */ function b(t, \n// eslint-disable-next-line @typescript-eslint/no-explicit-any\ne) {\n    return t;\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */ const E = \"ok\", T = \"cancelled\", I = \"unknown\", A = \"invalid-argument\", R = \"deadline-exceeded\", P = \"not-found\", V = \"already-exists\", D = \"permission-denied\", N = \"unauthenticated\", $ = \"resource-exhausted\", S = \"failed-precondition\", F = \"aborted\", x = \"out-of-range\", q = \"unimplemented\", O = \"internal\", C = \"unavailable\", L = \"data-loss\";\n\n/** An error returned by a Firestore operation. */ class U extends FirebaseError {\n    /** @hideconstructor */\n    constructor(\n    /**\n     * The backend error code associated with this error.\n     */\n    t, \n    /**\n     * A custom error description.\n     */\n    e) {\n        super(t, e), this.code = t, this.message = e, \n        // HACK: We write a toString property directly because Error is not a real\n        // class and so inheritance does not work correctly. We could alternatively\n        // do the same \"back-door inheritance\" trick that FirebaseError does.\n        this.toString = () => `${this.name}: [code=${this.code}]: ${this.message}`;\n    }\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */ class k {\n    constructor() {\n        this.promise = new Promise(((t, e) => {\n            this.resolve = t, this.reject = e;\n        }));\n    }\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */ class j {\n    constructor(t, e) {\n        this.user = e, this.type = \"OAuth\", this.headers = new Map, this.headers.set(\"Authorization\", `Bearer ${t}`);\n    }\n}\n\n/**\n * A CredentialsProvider that always yields an empty token.\n * @internal\n */ class M {\n    getToken() {\n        return Promise.resolve(null);\n    }\n    invalidateToken() {}\n    start(t, e) {\n        // Fire with initial user.\n        t.enqueueRetryable((() => e(l.UNAUTHENTICATED)));\n    }\n    shutdown() {}\n}\n\n/**\n * A CredentialsProvider that always returns a constant token. Used for\n * emulator token mocking.\n */ class B {\n    constructor(t) {\n        this.token = t, \n        /**\n         * Stores the listener registered with setChangeListener()\n         * This isn't actually necessary since the UID never changes, but we use this\n         * to verify the listen contract is adhered to in tests.\n         */\n        this.changeListener = null;\n    }\n    getToken() {\n        return Promise.resolve(this.token);\n    }\n    invalidateToken() {}\n    start(t, e) {\n        this.changeListener = e, \n        // Fire with initial user.\n        t.enqueueRetryable((() => e(this.token.user)));\n    }\n    shutdown() {\n        this.changeListener = null;\n    }\n}\n\n/** Credential provider for the Lite SDK. */ class z {\n    constructor(t) {\n        this.auth = null, t.onInit((t => {\n            this.auth = t;\n        }));\n    }\n    getToken() {\n        return this.auth ? this.auth.getToken().then((t => t ? (v(\"string\" == typeof t.accessToken), \n        new j(t.accessToken, new l(this.auth.getUid()))) : null)) : Promise.resolve(null);\n    }\n    invalidateToken() {}\n    start(t, e) {}\n    shutdown() {}\n}\n\n/*\n * FirstPartyToken provides a fresh token each time its value\n * is requested, because if the token is too old, requests will be rejected.\n * Technically this may no longer be necessary since the SDK should gracefully\n * recover from unauthenticated errors (see b/33147818 for context), but it's\n * safer to keep the implementation as-is.\n */ class G {\n    constructor(t, e, n) {\n        this.type = \"FirstParty\", this.user = l.FIRST_PARTY, this.headers = new Map, this.headers.set(\"X-Goog-AuthUser\", e);\n        const r = t.auth.getAuthHeaderValueForFirstParty([]);\n        r && this.headers.set(\"Authorization\", r), n && this.headers.set(\"X-Goog-Iam-Authorization-Token\", n);\n    }\n}\n\n/*\n * Provides user credentials required for the Firestore JavaScript SDK\n * to authenticate the user, using technique that is only available\n * to applications hosted by Google.\n */ class Q {\n    constructor(t, e, n) {\n        this.t = t, this.i = e, this.o = n;\n    }\n    getToken() {\n        return Promise.resolve(new G(this.t, this.i, this.o));\n    }\n    start(t, e) {\n        // Fire with initial uid.\n        t.enqueueRetryable((() => e(l.FIRST_PARTY)));\n    }\n    shutdown() {}\n    invalidateToken() {}\n}\n\nclass W {\n    constructor(t) {\n        this.value = t, this.type = \"AppCheck\", this.headers = new Map, t && t.length > 0 && this.headers.set(\"x-firebase-appcheck\", this.value);\n    }\n}\n\n/** AppCheck token provider for the Lite SDK. */ class Y {\n    constructor(t) {\n        this.u = t, this.appCheck = null, t.onInit((t => {\n            this.appCheck = t;\n        }));\n    }\n    getToken() {\n        return this.appCheck ? this.appCheck.getToken().then((t => t ? (v(\"string\" == typeof t.token), \n        new W(t.token)) : null)) : Promise.resolve(null);\n    }\n    invalidateToken() {}\n    start(t, e) {}\n    shutdown() {}\n}\n\n/**\n * Builds a CredentialsProvider depending on the type of\n * the credentials passed in.\n */\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nclass H {\n    /**\n     * Constructs a DatabaseInfo using the provided host, databaseId and\n     * persistenceKey.\n     *\n     * @param databaseId - The database to use.\n     * @param appId - The Firebase App Id.\n     * @param persistenceKey - A unique identifier for this Firestore's local\n     * storage (used in conjunction with the databaseId).\n     * @param host - The Firestore backend host to connect to.\n     * @param ssl - Whether to use SSL when connecting.\n     * @param forceLongPolling - Whether to use the forceLongPolling option\n     * when using WebChannel as the network transport.\n     * @param autoDetectLongPolling - Whether to use the detectBufferingProxy\n     * option when using WebChannel as the network transport.\n     * @param useFetchStreams Whether to use the Fetch API instead of\n     * XMLHTTPRequest\n     */\n    constructor(t, e, n, r, s, i, o, u) {\n        this.databaseId = t, this.appId = e, this.persistenceKey = n, this.host = r, this.ssl = s, \n        this.forceLongPolling = i, this.autoDetectLongPolling = o, this.useFetchStreams = u;\n    }\n}\n\n/** The default database name for a project. */\n/**\n * Represents the database ID a Firestore client is associated with.\n * @internal\n */\nclass K {\n    constructor(t, e) {\n        this.projectId = t, this.database = e || \"(default)\";\n    }\n    static empty() {\n        return new K(\"\", \"\");\n    }\n    get isDefaultDatabase() {\n        return \"(default)\" === this.database;\n    }\n    isEqual(t) {\n        return t instanceof K && t.projectId === this.projectId && t.database === this.database;\n    }\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Path represents an ordered sequence of string segments.\n */\nclass J {\n    constructor(t, e, n) {\n        void 0 === e ? e = 0 : e > t.length && g(), void 0 === n ? n = t.length - e : n > t.length - e && g(), \n        this.segments = t, this.offset = e, this.len = n;\n    }\n    get length() {\n        return this.len;\n    }\n    isEqual(t) {\n        return 0 === J.comparator(this, t);\n    }\n    child(t) {\n        const e = this.segments.slice(this.offset, this.limit());\n        return t instanceof J ? t.forEach((t => {\n            e.push(t);\n        })) : e.push(t), this.construct(e);\n    }\n    /** The index of one past the last segment of the path. */    limit() {\n        return this.offset + this.length;\n    }\n    popFirst(t) {\n        return t = void 0 === t ? 1 : t, this.construct(this.segments, this.offset + t, this.length - t);\n    }\n    popLast() {\n        return this.construct(this.segments, this.offset, this.length - 1);\n    }\n    firstSegment() {\n        return this.segments[this.offset];\n    }\n    lastSegment() {\n        return this.get(this.length - 1);\n    }\n    get(t) {\n        return this.segments[this.offset + t];\n    }\n    isEmpty() {\n        return 0 === this.length;\n    }\n    isPrefixOf(t) {\n        if (t.length < this.length) return !1;\n        for (let e = 0; e < this.length; e++) if (this.get(e) !== t.get(e)) return !1;\n        return !0;\n    }\n    isImmediateParentOf(t) {\n        if (this.length + 1 !== t.length) return !1;\n        for (let e = 0; e < this.length; e++) if (this.get(e) !== t.get(e)) return !1;\n        return !0;\n    }\n    forEach(t) {\n        for (let e = this.offset, n = this.limit(); e < n; e++) t(this.segments[e]);\n    }\n    toArray() {\n        return this.segments.slice(this.offset, this.limit());\n    }\n    static comparator(t, e) {\n        const n = Math.min(t.length, e.length);\n        for (let r = 0; r < n; r++) {\n            const n = t.get(r), s = e.get(r);\n            if (n < s) return -1;\n            if (n > s) return 1;\n        }\n        return t.length < e.length ? -1 : t.length > e.length ? 1 : 0;\n    }\n}\n\n/**\n * A slash-separated path for navigating resources (documents and collections)\n * within Firestore.\n *\n * @internal\n */ class X extends J {\n    construct(t, e, n) {\n        return new X(t, e, n);\n    }\n    canonicalString() {\n        // NOTE: The client is ignorant of any path segments containing escape\n        // sequences (e.g. __id123__) and just passes them through raw (they exist\n        // for legacy reasons and should not be used frequently).\n        return this.toArray().join(\"/\");\n    }\n    toString() {\n        return this.canonicalString();\n    }\n    /**\n     * Creates a resource path from the given slash-delimited string. If multiple\n     * arguments are provided, all components are combined. Leading and trailing\n     * slashes from all components are ignored.\n     */    static fromString(...t) {\n        // NOTE: The client is ignorant of any path segments containing escape\n        // sequences (e.g. __id123__) and just passes them through raw (they exist\n        // for legacy reasons and should not be used frequently).\n        const e = [];\n        for (const n of t) {\n            if (n.indexOf(\"//\") >= 0) throw new U(A, `Invalid segment (${n}). Paths must not contain // in them.`);\n            // Strip leading and traling slashed.\n                        e.push(...n.split(\"/\").filter((t => t.length > 0)));\n        }\n        return new X(e);\n    }\n    static emptyPath() {\n        return new X([]);\n    }\n}\n\nconst Z = /^[_a-zA-Z][_a-zA-Z0-9]*$/;\n\n/**\n * A dot-separated path for navigating sub-objects within a document.\n * @internal\n */ class tt extends J {\n    construct(t, e, n) {\n        return new tt(t, e, n);\n    }\n    /**\n     * Returns true if the string could be used as a segment in a field path\n     * without escaping.\n     */    static isValidIdentifier(t) {\n        return Z.test(t);\n    }\n    canonicalString() {\n        return this.toArray().map((t => (t = t.replace(/\\\\/g, \"\\\\\\\\\").replace(/`/g, \"\\\\`\"), \n        tt.isValidIdentifier(t) || (t = \"`\" + t + \"`\"), t))).join(\".\");\n    }\n    toString() {\n        return this.canonicalString();\n    }\n    /**\n     * Returns true if this field references the key of a document.\n     */    isKeyField() {\n        return 1 === this.length && \"__name__\" === this.get(0);\n    }\n    /**\n     * The field designating the key of a document.\n     */    static keyField() {\n        return new tt([ \"__name__\" ]);\n    }\n    /**\n     * Parses a field string from the given server-formatted string.\n     *\n     * - Splitting the empty string is not allowed (for now at least).\n     * - Empty segments within the string (e.g. if there are two consecutive\n     *   separators) are not allowed.\n     *\n     * TODO(b/37244157): we should make this more strict. Right now, it allows\n     * non-identifier path components, even if they aren't escaped.\n     */    static fromServerFormat(t) {\n        const e = [];\n        let n = \"\", r = 0;\n        const s = () => {\n            if (0 === n.length) throw new U(A, `Invalid field path (${t}). Paths must not be empty, begin with '.', end with '.', or contain '..'`);\n            e.push(n), n = \"\";\n        };\n        let i = !1;\n        for (;r < t.length; ) {\n            const e = t[r];\n            if (\"\\\\\" === e) {\n                if (r + 1 === t.length) throw new U(A, \"Path has trailing escape character: \" + t);\n                const e = t[r + 1];\n                if (\"\\\\\" !== e && \".\" !== e && \"`\" !== e) throw new U(A, \"Path has invalid escape sequence: \" + t);\n                n += e, r += 2;\n            } else \"`\" === e ? (i = !i, r++) : \".\" !== e || i ? (n += e, r++) : (s(), r++);\n        }\n        if (s(), i) throw new U(A, \"Unterminated ` in path: \" + t);\n        return new tt(e);\n    }\n    static emptyPath() {\n        return new tt([]);\n    }\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * @internal\n */ class et {\n    constructor(t) {\n        this.path = t;\n    }\n    static fromPath(t) {\n        return new et(X.fromString(t));\n    }\n    static fromName(t) {\n        return new et(X.fromString(t).popFirst(5));\n    }\n    static empty() {\n        return new et(X.emptyPath());\n    }\n    get collectionGroup() {\n        return this.path.popLast().lastSegment();\n    }\n    /** Returns true if the document is in the specified collectionId. */    hasCollectionId(t) {\n        return this.path.length >= 2 && this.path.get(this.path.length - 2) === t;\n    }\n    /** Returns the collection group (i.e. the name of the parent collection) for this key. */    getCollectionGroup() {\n        return this.path.get(this.path.length - 2);\n    }\n    /** Returns the fully qualified path to the parent collection. */    getCollectionPath() {\n        return this.path.popLast();\n    }\n    isEqual(t) {\n        return null !== t && 0 === X.comparator(this.path, t.path);\n    }\n    toString() {\n        return this.path.toString();\n    }\n    static comparator(t, e) {\n        return X.comparator(t.path, e.path);\n    }\n    static isDocumentKey(t) {\n        return t.length % 2 == 0;\n    }\n    /**\n     * Creates and returns a new document key with the given segments.\n     *\n     * @param segments - The segments of the path to the document\n     * @returns A new instance of DocumentKey\n     */    static fromSegments(t) {\n        return new et(new X(t.slice()));\n    }\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */ function nt(t, e, n) {\n    if (!n) throw new U(A, `Function ${t}() cannot be called with an empty ${e}.`);\n}\n\n/**\n * Validates that two boolean options are not set at the same time.\n * @internal\n */\n/**\n * Validates that `path` refers to a document (indicated by the fact it contains\n * an even numbers of segments).\n */\nfunction rt(t) {\n    if (!et.isDocumentKey(t)) throw new U(A, `Invalid document reference. Document references must have an even number of segments, but ${t} has ${t.length}.`);\n}\n\n/**\n * Validates that `path` refers to a collection (indicated by the fact it\n * contains an odd numbers of segments).\n */ function st(t) {\n    if (et.isDocumentKey(t)) throw new U(A, `Invalid collection reference. Collection references must have an odd number of segments, but ${t} has ${t.length}.`);\n}\n\n/**\n * Returns true if it's a non-null object without a custom prototype\n * (i.e. excludes Array, Date, etc.).\n */\n/** Returns a string describing the type / value of the provided input. */\nfunction it(t) {\n    if (void 0 === t) return \"undefined\";\n    if (null === t) return \"null\";\n    if (\"string\" == typeof t) return t.length > 20 && (t = `${t.substring(0, 20)}...`), \n    JSON.stringify(t);\n    if (\"number\" == typeof t || \"boolean\" == typeof t) return \"\" + t;\n    if (\"object\" == typeof t) {\n        if (t instanceof Array) return \"an array\";\n        {\n            const e = \n            /** try to get the constructor name for an object. */\n            function(t) {\n                if (t.constructor) return t.constructor.name;\n                return null;\n            }\n            /**\n * Casts `obj` to `T`, optionally unwrapping Compat types to expose the\n * underlying instance. Throws if  `obj` is not an instance of `T`.\n *\n * This cast is used in the Lite and Full SDK to verify instance types for\n * arguments passed to the public API.\n * @internal\n */ (t);\n            return e ? `a custom ${e} object` : \"an object\";\n        }\n    }\n    return \"function\" == typeof t ? \"a function\" : g();\n}\n\nfunction ot(t, \n// eslint-disable-next-line @typescript-eslint/no-explicit-any\ne) {\n    if (\"_delegate\" in t && (\n    // Unwrap Compat types\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    t = t._delegate), !(t instanceof e)) {\n        if (e.name === t.constructor.name) throw new U(A, \"Type does not match the expected instance. Did you pass a reference from a different Firestore SDK?\");\n        {\n            const n = it(t);\n            throw new U(A, `Expected type '${e.name}', but it was: ${n}`);\n        }\n    }\n    return t;\n}\n\nfunction ut(t, e) {\n    if (e <= 0) throw new U(A, `Function ${t}() requires a positive number, but it was: ${e}.`);\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Returns whether a variable is either undefined or null.\n */ function ct(t) {\n    return null == t;\n}\n\n/** Returns whether the value represents -0. */ function at(t) {\n    // Detect if the value is -0.0. Based on polyfill from\n    // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/is\n    return 0 === t && 1 / t == -1 / 0;\n}\n\n/**\n * Returns whether a value is an integer and in the safe integer range\n * @param value - The value to test for being an integer and in the safe range\n */\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nconst ht = {\n    BatchGetDocuments: \"batchGet\",\n    Commit: \"commit\",\n    RunQuery: \"runQuery\"\n};\n\n/**\n * Maps RPC names to the corresponding REST endpoint name.\n *\n * We use array notation to avoid mangling.\n */\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Error Codes describing the different ways GRPC can fail. These are copied\n * directly from GRPC's sources here:\n *\n * https://github.com/grpc/grpc/blob/bceec94ea4fc5f0085d81235d8e1c06798dc341a/include/grpc%2B%2B/impl/codegen/status_code_enum.h\n *\n * Important! The names of these identifiers matter because the string forms\n * are used for reverse lookups from the webchannel stream. Do NOT change the\n * names of these identifiers or change this into a const enum.\n */\nvar lt, ft;\n\n/**\n * Converts an HTTP Status Code to the equivalent error code.\n *\n * @param status - An HTTP Status Code, like 200, 404, 503, etc.\n * @returns The equivalent Code. Unknown status codes are mapped to\n *     Code.UNKNOWN.\n */\nfunction dt(t) {\n    if (void 0 === t) return p(\"RPC_ERROR\", \"HTTP error has no status\"), I;\n    // The canonical error codes for Google APIs [1] specify mapping onto HTTP\n    // status codes but the mapping is not bijective. In each case of ambiguity\n    // this function chooses a primary error.\n    \n    // [1]\n    // https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto\n        switch (t) {\n      case 200:\n        // OK\n        return E;\n\n      case 400:\n        // Bad Request\n        return S;\n\n        // Other possibilities based on the forward mapping\n        // return Code.INVALID_ARGUMENT;\n        // return Code.OUT_OF_RANGE;\n              case 401:\n        // Unauthorized\n        return N;\n\n      case 403:\n        // Forbidden\n        return D;\n\n      case 404:\n        // Not Found\n        return P;\n\n      case 409:\n        // Conflict\n        return F;\n\n        // Other possibilities:\n        // return Code.ALREADY_EXISTS;\n              case 416:\n        // Range Not Satisfiable\n        return x;\n\n      case 429:\n        // Too Many Requests\n        return $;\n\n      case 499:\n        // Client Closed Request\n        return T;\n\n      case 500:\n        // Internal Server Error\n        return I;\n\n        // Other possibilities:\n        // return Code.INTERNAL;\n        // return Code.DATA_LOSS;\n              case 501:\n        // Unimplemented\n        return q;\n\n      case 503:\n        // Service Unavailable\n        return C;\n\n      case 504:\n        // Gateway Timeout\n        return R;\n\n      default:\n        return t >= 200 && t < 300 ? E : t >= 400 && t < 500 ? S : t >= 500 && t < 600 ? O : I;\n    }\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * A Rest-based connection that relies on the native HTTP stack\n * (e.g. `fetch` or a polyfill).\n */ (ft = lt || (lt = {}))[ft.OK = 0] = \"OK\", ft[ft.CANCELLED = 1] = \"CANCELLED\", \nft[ft.UNKNOWN = 2] = \"UNKNOWN\", ft[ft.INVALID_ARGUMENT = 3] = \"INVALID_ARGUMENT\", \nft[ft.DEADLINE_EXCEEDED = 4] = \"DEADLINE_EXCEEDED\", ft[ft.NOT_FOUND = 5] = \"NOT_FOUND\", \nft[ft.ALREADY_EXISTS = 6] = \"ALREADY_EXISTS\", ft[ft.PERMISSION_DENIED = 7] = \"PERMISSION_DENIED\", \nft[ft.UNAUTHENTICATED = 16] = \"UNAUTHENTICATED\", ft[ft.RESOURCE_EXHAUSTED = 8] = \"RESOURCE_EXHAUSTED\", \nft[ft.FAILED_PRECONDITION = 9] = \"FAILED_PRECONDITION\", ft[ft.ABORTED = 10] = \"ABORTED\", \nft[ft.OUT_OF_RANGE = 11] = \"OUT_OF_RANGE\", ft[ft.UNIMPLEMENTED = 12] = \"UNIMPLEMENTED\", \nft[ft.INTERNAL = 13] = \"INTERNAL\", ft[ft.UNAVAILABLE = 14] = \"UNAVAILABLE\", ft[ft.DATA_LOSS = 15] = \"DATA_LOSS\";\n\nclass wt extends \n/**\n * Base class for all Rest-based connections to the backend (WebChannel and\n * HTTP).\n */\nclass {\n    constructor(t) {\n        this.databaseInfo = t, this.databaseId = t.databaseId;\n        const e = t.ssl ? \"https\" : \"http\";\n        this.h = e + \"://\" + t.host, this.l = \"projects/\" + this.databaseId.projectId + \"/databases/\" + this.databaseId.database + \"/documents\";\n    }\n    m(t, e, n, r, s) {\n        const i = this.p(t, e);\n        m(\"RestConnection\", \"Sending: \", i, n);\n        const o = {};\n        return this.g(o, r, s), this.v(t, i, o, n).then((t => (m(\"RestConnection\", \"Received: \", t), \n        t)), (e => {\n            throw y(\"RestConnection\", `${t} failed with error: `, e, \"url: \", i, \"request:\", n), \n            e;\n        }));\n    }\n    T(t, e, n, r, s) {\n        // The REST API automatically aggregates all of the streamed results, so we\n        // can just use the normal invoke() method.\n        return this.m(t, e, n, r, s);\n    }\n    /**\n     * Modifies the headers for a request, adding any authorization token if\n     * present and any additional headers for the request.\n     */    g(t, e, n) {\n        t[\"X-Goog-Api-Client\"] = \"gl-js/ fire/\" + f, \n        // Content-Type: text/plain will avoid preflight requests which might\n        // mess with CORS and redirects by proxies. If we add custom headers\n        // we will need to change this code to potentially use the $httpOverwrite\n        // parameter supported by ESF to avoid triggering preflight requests.\n        t[\"Content-Type\"] = \"text/plain\", this.databaseInfo.appId && (t[\"X-Firebase-GMPID\"] = this.databaseInfo.appId), \n        e && e.headers.forEach(((e, n) => t[n] = e)), n && n.headers.forEach(((e, n) => t[n] = e));\n    }\n    p(t, e) {\n        const n = ht[t];\n        return `${this.h}/v1/${e}:${n}`;\n    }\n} {\n    /**\n     * @param databaseInfo - The connection info.\n     * @param fetchImpl - `fetch` or a Polyfill that implements the fetch API.\n     */\n    constructor(t, e) {\n        super(t), this.I = e;\n    }\n    A(t, e) {\n        throw new Error(\"Not supported by FetchConnection\");\n    }\n    async v(t, e, n, r) {\n        const s = JSON.stringify(r);\n        let i;\n        try {\n            i = await this.I(e, {\n                method: \"POST\",\n                headers: n,\n                body: s\n            });\n        } catch (t) {\n            throw new U(dt(t.status), \"Request failed with error: \" + t.statusText);\n        }\n        if (!i.ok) throw new U(dt(i.status), \"Request failed with error: \" + i.statusText);\n        return i.json();\n    }\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/** Initializes the HTTP connection for the REST API. */\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Generates `nBytes` of random bytes.\n *\n * If `nBytes < 0` , an error will be thrown.\n */\nfunction mt(t) {\n    // Polyfills for IE and WebWorker by using `self` and `msCrypto` when `crypto` is not available.\n    const e = \n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    \"undefined\" != typeof self && (self.crypto || self.msCrypto), n = new Uint8Array(t);\n    if (e && \"function\" == typeof e.getRandomValues) e.getRandomValues(n); else \n    // Falls back to Math.random\n    for (let e = 0; e < t; e++) n[e] = Math.floor(256 * Math.random());\n    return n;\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */ class pt {\n    static R() {\n        // Alphanumeric characters\n        const t = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\", e = Math.floor(256 / t.length) * t.length;\n        // The largest byte value that is a multiple of `char.length`.\n                let n = \"\";\n        for (;n.length < 20; ) {\n            const r = mt(40);\n            for (let s = 0; s < r.length; ++s) \n            // Only accept values that are [0, maxMultiple), this ensures they can\n            // be evenly mapped to indices of `chars` via a modulo operation.\n            n.length < 20 && r[s] < e && (n += t.charAt(r[s] % t.length));\n        }\n        return n;\n    }\n}\n\nfunction yt(t, e) {\n    return t < e ? -1 : t > e ? 1 : 0;\n}\n\n/** Helper to compare arrays using isEqual(). */ function _t(t, e, n) {\n    return t.length === e.length && t.every(((t, r) => n(t, e[r])));\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n// The earliest date supported by Firestore timestamps (0001-01-01T00:00:00Z).\n/**\n * A `Timestamp` represents a point in time independent of any time zone or\n * calendar, represented as seconds and fractions of seconds at nanosecond\n * resolution in UTC Epoch time.\n *\n * It is encoded using the Proleptic Gregorian Calendar which extends the\n * Gregorian calendar backwards to year one. It is encoded assuming all minutes\n * are 60 seconds long, i.e. leap seconds are \"smeared\" so that no leap second\n * table is needed for interpretation. Range is from 0001-01-01T00:00:00Z to\n * 9999-12-31T23:59:59.999999999Z.\n *\n * For examples and further specifications, refer to the\n * {@link https://github.com/google/protobuf/blob/master/src/google/protobuf/timestamp.proto | Timestamp definition}.\n */\nclass gt {\n    /**\n     * Creates a new timestamp.\n     *\n     * @param seconds - The number of seconds of UTC time since Unix epoch\n     *     1970-01-01T00:00:00Z. Must be from 0001-01-01T00:00:00Z to\n     *     9999-12-31T23:59:59Z inclusive.\n     * @param nanoseconds - The non-negative fractions of a second at nanosecond\n     *     resolution. Negative second values with fractions must still have\n     *     non-negative nanoseconds values that count forward in time. Must be\n     *     from 0 to 999,999,999 inclusive.\n     */\n    constructor(\n    /**\n     * The number of seconds of UTC time since Unix epoch 1970-01-01T00:00:00Z.\n     */\n    t, \n    /**\n     * The fractions of a second at nanosecond resolution.*\n     */\n    e) {\n        if (this.seconds = t, this.nanoseconds = e, e < 0) throw new U(A, \"Timestamp nanoseconds out of range: \" + e);\n        if (e >= 1e9) throw new U(A, \"Timestamp nanoseconds out of range: \" + e);\n        if (t < -62135596800) throw new U(A, \"Timestamp seconds out of range: \" + t);\n        // This will break in the year 10,000.\n                if (t >= 253402300800) throw new U(A, \"Timestamp seconds out of range: \" + t);\n    }\n    /**\n     * Creates a new timestamp with the current date, with millisecond precision.\n     *\n     * @returns a new timestamp representing the current date.\n     */    static now() {\n        return gt.fromMillis(Date.now());\n    }\n    /**\n     * Creates a new timestamp from the given date.\n     *\n     * @param date - The date to initialize the `Timestamp` from.\n     * @returns A new `Timestamp` representing the same point in time as the given\n     *     date.\n     */    static fromDate(t) {\n        return gt.fromMillis(t.getTime());\n    }\n    /**\n     * Creates a new timestamp from the given number of milliseconds.\n     *\n     * @param milliseconds - Number of milliseconds since Unix epoch\n     *     1970-01-01T00:00:00Z.\n     * @returns A new `Timestamp` representing the same point in time as the given\n     *     number of milliseconds.\n     */    static fromMillis(t) {\n        const e = Math.floor(t / 1e3), n = Math.floor(1e6 * (t - 1e3 * e));\n        return new gt(e, n);\n    }\n    /**\n     * Converts a `Timestamp` to a JavaScript `Date` object. This conversion\n     * causes a loss of precision since `Date` objects only support millisecond\n     * precision.\n     *\n     * @returns JavaScript `Date` object representing the same point in time as\n     *     this `Timestamp`, with millisecond precision.\n     */    toDate() {\n        return new Date(this.toMillis());\n    }\n    /**\n     * Converts a `Timestamp` to a numeric timestamp (in milliseconds since\n     * epoch). This operation causes a loss of precision.\n     *\n     * @returns The point in time corresponding to this timestamp, represented as\n     *     the number of milliseconds since Unix epoch 1970-01-01T00:00:00Z.\n     */    toMillis() {\n        return 1e3 * this.seconds + this.nanoseconds / 1e6;\n    }\n    _compareTo(t) {\n        return this.seconds === t.seconds ? yt(this.nanoseconds, t.nanoseconds) : yt(this.seconds, t.seconds);\n    }\n    /**\n     * Returns true if this `Timestamp` is equal to the provided one.\n     *\n     * @param other - The `Timestamp` to compare against.\n     * @returns true if this `Timestamp` is equal to the provided one.\n     */    isEqual(t) {\n        return t.seconds === this.seconds && t.nanoseconds === this.nanoseconds;\n    }\n    /** Returns a textual representation of this `Timestamp`. */    toString() {\n        return \"Timestamp(seconds=\" + this.seconds + \", nanoseconds=\" + this.nanoseconds + \")\";\n    }\n    /** Returns a JSON-serializable representation of this `Timestamp`. */    toJSON() {\n        return {\n            seconds: this.seconds,\n            nanoseconds: this.nanoseconds\n        };\n    }\n    /**\n     * Converts this object to a primitive string, which allows `Timestamp` objects\n     * to be compared using the `>`, `<=`, `>=` and `>` operators.\n     */    valueOf() {\n        // This method returns a string of the form <seconds>.<nanoseconds> where\n        // <seconds> is translated to have a non-negative value and both <seconds>\n        // and <nanoseconds> are left-padded with zeroes to be a consistent length.\n        // Strings with this format then have a lexiographical ordering that matches\n        // the expected ordering. The <seconds> translation is done to avoid having\n        // a leading negative sign (i.e. a leading '-' character) in its string\n        // representation, which would affect its lexiographical ordering.\n        const t = this.seconds - -62135596800;\n        // Note: Up to 12 decimal digits are required to represent all valid\n        // 'seconds' values.\n                return String(t).padStart(12, \"0\") + \".\" + String(this.nanoseconds).padStart(9, \"0\");\n    }\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * A version of a document in Firestore. This corresponds to the version\n * timestamp, such as update_time or read_time.\n */ class vt {\n    constructor(t) {\n        this.timestamp = t;\n    }\n    static fromTimestamp(t) {\n        return new vt(t);\n    }\n    static min() {\n        return new vt(new gt(0, 0));\n    }\n    compareTo(t) {\n        return this.timestamp._compareTo(t.timestamp);\n    }\n    isEqual(t) {\n        return this.timestamp.isEqual(t.timestamp);\n    }\n    /** Returns a number representation of the version for use in spec tests. */    toMicroseconds() {\n        // Convert to microseconds.\n        return 1e6 * this.timestamp.seconds + this.timestamp.nanoseconds / 1e3;\n    }\n    toString() {\n        return \"SnapshotVersion(\" + this.timestamp.toString() + \")\";\n    }\n    toTimestamp() {\n        return this.timestamp;\n    }\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */ function bt(t) {\n    let e = 0;\n    for (const n in t) Object.prototype.hasOwnProperty.call(t, n) && e++;\n    return e;\n}\n\nfunction Et(t, e) {\n    for (const n in t) Object.prototype.hasOwnProperty.call(t, n) && e(n, t[n]);\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Provides a set of fields that can be used to partially patch a document.\n * FieldMask is used in conjunction with ObjectValue.\n * Examples:\n *   foo - Overwrites foo entirely with the provided value. If foo is not\n *         present in the companion ObjectValue, the field is deleted.\n *   foo.bar - Overwrites only the field bar of the object foo.\n *             If foo is not an object, foo is replaced with an object\n *             containing foo\n */\nclass Tt {\n    constructor(t) {\n        this.fields = t, \n        // TODO(dimond): validation of FieldMask\n        // Sort the field mask to support `FieldMask.isEqual()` and assert below.\n        t.sort(tt.comparator);\n    }\n    /**\n     * Verifies that `fieldPath` is included by at least one field in this field\n     * mask.\n     *\n     * This is an O(n) operation, where `n` is the size of the field mask.\n     */    covers(t) {\n        for (const e of this.fields) if (e.isPrefixOf(t)) return !0;\n        return !1;\n    }\n    isEqual(t) {\n        return _t(this.fields, t.fields, ((t, e) => t.isEqual(e)));\n    }\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/** Converts a Base64 encoded string to a binary string. */\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Immutable class that represents a \"proto\" byte string.\n *\n * Proto byte strings can either be Base64-encoded strings or Uint8Arrays when\n * sent on the wire. This class abstracts away this differentiation by holding\n * the proto byte string in a common class that must be converted into a string\n * before being sent as a proto.\n * @internal\n */\nclass It {\n    constructor(t) {\n        this.binaryString = t;\n    }\n    static fromBase64String(t) {\n        const e = atob(t);\n        return new It(e);\n    }\n    static fromUint8Array(t) {\n        const e = \n        /**\n * Helper function to convert an Uint8array to a binary string.\n */\n        function(t) {\n            let e = \"\";\n            for (let n = 0; n < t.length; ++n) e += String.fromCharCode(t[n]);\n            return e;\n        }\n        /**\n * Helper function to convert a binary string to an Uint8Array.\n */ (t);\n        return new It(e);\n    }\n    [Symbol.iterator]() {\n        let t = 0;\n        return {\n            next: () => t < this.binaryString.length ? {\n                value: this.binaryString.charCodeAt(t++),\n                done: !1\n            } : {\n                value: void 0,\n                done: !0\n            }\n        };\n    }\n    toBase64() {\n        return t = this.binaryString, btoa(t);\n        /** Converts a binary string to a Base64 encoded string. */\n        var t;\n    }\n    toUint8Array() {\n        return function(t) {\n            const e = new Uint8Array(t.length);\n            for (let n = 0; n < t.length; n++) e[n] = t.charCodeAt(n);\n            return e;\n        }\n        /**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n        // A RegExp matching ISO 8601 UTC timestamps with optional fraction.\n        (this.binaryString);\n    }\n    approximateByteSize() {\n        return 2 * this.binaryString.length;\n    }\n    compareTo(t) {\n        return yt(this.binaryString, t.binaryString);\n    }\n    isEqual(t) {\n        return this.binaryString === t.binaryString;\n    }\n}\n\nIt.EMPTY_BYTE_STRING = new It(\"\");\n\nconst At = new RegExp(/^\\d{4}-\\d\\d-\\d\\dT\\d\\d:\\d\\d:\\d\\d(?:\\.(\\d+))?Z$/);\n\n/**\n * Converts the possible Proto values for a timestamp value into a \"seconds and\n * nanos\" representation.\n */ function Rt(t) {\n    // The json interface (for the browser) will return an iso timestamp string,\n    // while the proto js library (for node) will return a\n    // google.protobuf.Timestamp instance.\n    if (v(!!t), \"string\" == typeof t) {\n        // The date string can have higher precision (nanos) than the Date class\n        // (millis), so we do some custom parsing here.\n        // Parse the nanos right out of the string.\n        let e = 0;\n        const n = At.exec(t);\n        if (v(!!n), n[1]) {\n            // Pad the fraction out to 9 digits (nanos).\n            let t = n[1];\n            t = (t + \"000000000\").substr(0, 9), e = Number(t);\n        }\n        // Parse the date to get the seconds.\n                const r = new Date(t);\n        return {\n            seconds: Math.floor(r.getTime() / 1e3),\n            nanos: e\n        };\n    }\n    return {\n        seconds: Pt(t.seconds),\n        nanos: Pt(t.nanos)\n    };\n}\n\n/**\n * Converts the possible Proto types for numbers into a JavaScript number.\n * Returns 0 if the value is not numeric.\n */ function Pt(t) {\n    // TODO(bjornick): Handle int64 greater than 53 bits.\n    return \"number\" == typeof t ? t : \"string\" == typeof t ? Number(t) : 0;\n}\n\n/** Converts the possible Proto types for Blobs into a ByteString. */ function Vt(t) {\n    return \"string\" == typeof t ? It.fromBase64String(t) : It.fromUint8Array(t);\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Represents a locally-applied ServerTimestamp.\n *\n * Server Timestamps are backed by MapValues that contain an internal field\n * `__type__` with a value of `server_timestamp`. The previous value and local\n * write time are stored in its `__previous_value__` and `__local_write_time__`\n * fields respectively.\n *\n * Notes:\n * - ServerTimestampValue instances are created as the result of applying a\n *   transform. They can only exist in the local view of a document. Therefore\n *   they do not need to be parsed or serialized.\n * - When evaluated locally (e.g. for snapshot.data()), they by default\n *   evaluate to `null`. This behavior can be configured by passing custom\n *   FieldValueOptions to value().\n * - With respect to other ServerTimestampValues, they sort by their\n *   localWriteTime.\n */ function Dt(t) {\n    var e, n;\n    return \"server_timestamp\" === (null === (n = ((null === (e = null == t ? void 0 : t.mapValue) || void 0 === e ? void 0 : e.fields) || {}).__type__) || void 0 === n ? void 0 : n.stringValue);\n}\n\n/**\n * Returns the value of the field before this ServerTimestamp was set.\n *\n * Preserving the previous values allows the user to display the last resoled\n * value until the backend responds with the timestamp.\n */ function Nt(t) {\n    const e = t.mapValue.fields.__previous_value__;\n    return Dt(e) ? Nt(e) : e;\n}\n\n/**\n * Returns the local time at which this timestamp was first set.\n */ function $t(t) {\n    const e = Rt(t.mapValue.fields.__local_write_time__.timestampValue);\n    return new gt(e.seconds, e.nanos);\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/** Extracts the backend's type order for the provided value. */ function St(t) {\n    return \"nullValue\" in t ? 0 /* NullValue */ : \"booleanValue\" in t ? 1 /* BooleanValue */ : \"integerValue\" in t || \"doubleValue\" in t ? 2 /* NumberValue */ : \"timestampValue\" in t ? 3 /* TimestampValue */ : \"stringValue\" in t ? 5 /* StringValue */ : \"bytesValue\" in t ? 6 /* BlobValue */ : \"referenceValue\" in t ? 7 /* RefValue */ : \"geoPointValue\" in t ? 8 /* GeoPointValue */ : \"arrayValue\" in t ? 9 /* ArrayValue */ : \"mapValue\" in t ? Dt(t) ? 4 /* ServerTimestampValue */ : 10 /* ObjectValue */ : g();\n}\n\n/** Tests `left` and `right` for equality based on the backend semantics. */ function Ft(t, e) {\n    if (t === e) return !0;\n    const n = St(t);\n    if (n !== St(e)) return !1;\n    switch (n) {\n      case 0 /* NullValue */ :\n        return !0;\n\n      case 1 /* BooleanValue */ :\n        return t.booleanValue === e.booleanValue;\n\n      case 4 /* ServerTimestampValue */ :\n        return $t(t).isEqual($t(e));\n\n      case 3 /* TimestampValue */ :\n        return function(t, e) {\n            if (\"string\" == typeof t.timestampValue && \"string\" == typeof e.timestampValue && t.timestampValue.length === e.timestampValue.length) \n            // Use string equality for ISO 8601 timestamps\n            return t.timestampValue === e.timestampValue;\n            const n = Rt(t.timestampValue), r = Rt(e.timestampValue);\n            return n.seconds === r.seconds && n.nanos === r.nanos;\n        }(t, e);\n\n      case 5 /* StringValue */ :\n        return t.stringValue === e.stringValue;\n\n      case 6 /* BlobValue */ :\n        return function(t, e) {\n            return Vt(t.bytesValue).isEqual(Vt(e.bytesValue));\n        }(t, e);\n\n      case 7 /* RefValue */ :\n        return t.referenceValue === e.referenceValue;\n\n      case 8 /* GeoPointValue */ :\n        return function(t, e) {\n            return Pt(t.geoPointValue.latitude) === Pt(e.geoPointValue.latitude) && Pt(t.geoPointValue.longitude) === Pt(e.geoPointValue.longitude);\n        }(t, e);\n\n      case 2 /* NumberValue */ :\n        return function(t, e) {\n            if (\"integerValue\" in t && \"integerValue\" in e) return Pt(t.integerValue) === Pt(e.integerValue);\n            if (\"doubleValue\" in t && \"doubleValue\" in e) {\n                const n = Pt(t.doubleValue), r = Pt(e.doubleValue);\n                return n === r ? at(n) === at(r) : isNaN(n) && isNaN(r);\n            }\n            return !1;\n        }(t, e);\n\n      case 9 /* ArrayValue */ :\n        return _t(t.arrayValue.values || [], e.arrayValue.values || [], Ft);\n\n      case 10 /* ObjectValue */ :\n        return function(t, e) {\n            const n = t.mapValue.fields || {}, r = e.mapValue.fields || {};\n            if (bt(n) !== bt(r)) return !1;\n            for (const t in n) if (n.hasOwnProperty(t) && (void 0 === r[t] || !Ft(n[t], r[t]))) return !1;\n            return !0;\n        }\n        /** Returns true if the ArrayValue contains the specified element. */ (t, e);\n\n      default:\n        return g();\n    }\n}\n\nfunction xt(t, e) {\n    return void 0 !== (t.values || []).find((t => Ft(t, e)));\n}\n\nfunction qt(t, e) {\n    if (t === e) return 0;\n    const n = St(t), r = St(e);\n    if (n !== r) return yt(n, r);\n    switch (n) {\n      case 0 /* NullValue */ :\n        return 0;\n\n      case 1 /* BooleanValue */ :\n        return yt(t.booleanValue, e.booleanValue);\n\n      case 2 /* NumberValue */ :\n        return function(t, e) {\n            const n = Pt(t.integerValue || t.doubleValue), r = Pt(e.integerValue || e.doubleValue);\n            return n < r ? -1 : n > r ? 1 : n === r ? 0 : \n            // one or both are NaN.\n            isNaN(n) ? isNaN(r) ? 0 : -1 : 1;\n        }(t, e);\n\n      case 3 /* TimestampValue */ :\n        return Ot(t.timestampValue, e.timestampValue);\n\n      case 4 /* ServerTimestampValue */ :\n        return Ot($t(t), $t(e));\n\n      case 5 /* StringValue */ :\n        return yt(t.stringValue, e.stringValue);\n\n      case 6 /* BlobValue */ :\n        return function(t, e) {\n            const n = Vt(t), r = Vt(e);\n            return n.compareTo(r);\n        }(t.bytesValue, e.bytesValue);\n\n      case 7 /* RefValue */ :\n        return function(t, e) {\n            const n = t.split(\"/\"), r = e.split(\"/\");\n            for (let t = 0; t < n.length && t < r.length; t++) {\n                const e = yt(n[t], r[t]);\n                if (0 !== e) return e;\n            }\n            return yt(n.length, r.length);\n        }(t.referenceValue, e.referenceValue);\n\n      case 8 /* GeoPointValue */ :\n        return function(t, e) {\n            const n = yt(Pt(t.latitude), Pt(e.latitude));\n            if (0 !== n) return n;\n            return yt(Pt(t.longitude), Pt(e.longitude));\n        }(t.geoPointValue, e.geoPointValue);\n\n      case 9 /* ArrayValue */ :\n        return function(t, e) {\n            const n = t.values || [], r = e.values || [];\n            for (let t = 0; t < n.length && t < r.length; ++t) {\n                const e = qt(n[t], r[t]);\n                if (e) return e;\n            }\n            return yt(n.length, r.length);\n        }(t.arrayValue, e.arrayValue);\n\n      case 10 /* ObjectValue */ :\n        return function(t, e) {\n            const n = t.fields || {}, r = Object.keys(n), s = e.fields || {}, i = Object.keys(s);\n            // Even though MapValues are likely sorted correctly based on their insertion\n            // order (e.g. when received from the backend), local modifications can bring\n            // elements out of order. We need to re-sort the elements to ensure that\n            // canonical IDs are independent of insertion order.\n            r.sort(), i.sort();\n            for (let t = 0; t < r.length && t < i.length; ++t) {\n                const e = yt(r[t], i[t]);\n                if (0 !== e) return e;\n                const o = qt(n[r[t]], s[i[t]]);\n                if (0 !== o) return o;\n            }\n            return yt(r.length, i.length);\n        }\n        /** Returns a reference value for the provided database and key. */ (t.mapValue, e.mapValue);\n\n      default:\n        throw g();\n    }\n}\n\nfunction Ot(t, e) {\n    if (\"string\" == typeof t && \"string\" == typeof e && t.length === e.length) return yt(t, e);\n    const n = Rt(t), r = Rt(e), s = yt(n.seconds, r.seconds);\n    return 0 !== s ? s : yt(n.nanos, r.nanos);\n}\n\nfunction Ct(t, e) {\n    return {\n        referenceValue: `projects/${t.projectId}/databases/${t.database}/documents/${e.path.canonicalString()}`\n    };\n}\n\n/** Returns true if `value` is an ArrayValue. */ function Lt(t) {\n    return !!t && \"arrayValue\" in t;\n}\n\n/** Returns true if `value` is a NullValue. */ function Ut(t) {\n    return !!t && \"nullValue\" in t;\n}\n\n/** Returns true if `value` is NaN. */ function kt(t) {\n    return !!t && \"doubleValue\" in t && isNaN(Number(t.doubleValue));\n}\n\n/** Returns true if `value` is a MapValue. */ function jt(t) {\n    return !!t && \"mapValue\" in t;\n}\n\n/** Creates a deep copy of `source`. */ function Mt(t) {\n    if (t.geoPointValue) return {\n        geoPointValue: Object.assign({}, t.geoPointValue)\n    };\n    if (t.timestampValue && \"object\" == typeof t.timestampValue) return {\n        timestampValue: Object.assign({}, t.timestampValue)\n    };\n    if (t.mapValue) {\n        const e = {\n            mapValue: {\n                fields: {}\n            }\n        };\n        return Et(t.mapValue.fields, ((t, n) => e.mapValue.fields[t] = Mt(n))), e;\n    }\n    if (t.arrayValue) {\n        const e = {\n            arrayValue: {\n                values: []\n            }\n        };\n        for (let n = 0; n < (t.arrayValue.values || []).length; ++n) e.arrayValue.values[n] = Mt(t.arrayValue.values[n]);\n        return e;\n    }\n    return Object.assign({}, t);\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * An ObjectValue represents a MapValue in the Firestore Proto and offers the\n * ability to add and remove fields (via the ObjectValueBuilder).\n */ class Bt {\n    constructor(t) {\n        this.value = t;\n    }\n    static empty() {\n        return new Bt({\n            mapValue: {}\n        });\n    }\n    /**\n     * Returns the value at the given path or null.\n     *\n     * @param path - the path to search\n     * @returns The value at the path or null if the path is not set.\n     */    field(t) {\n        if (t.isEmpty()) return this.value;\n        {\n            let e = this.value;\n            for (let n = 0; n < t.length - 1; ++n) if (e = (e.mapValue.fields || {})[t.get(n)], \n            !jt(e)) return null;\n            return e = (e.mapValue.fields || {})[t.lastSegment()], e || null;\n        }\n    }\n    /**\n     * Sets the field to the provided value.\n     *\n     * @param path - The field path to set.\n     * @param value - The value to set.\n     */    set(t, e) {\n        this.getFieldsMap(t.popLast())[t.lastSegment()] = Mt(e);\n    }\n    /**\n     * Sets the provided fields to the provided values.\n     *\n     * @param data - A map of fields to values (or null for deletes).\n     */    setAll(t) {\n        let e = tt.emptyPath(), n = {}, r = [];\n        t.forEach(((t, s) => {\n            if (!e.isImmediateParentOf(s)) {\n                // Insert the accumulated changes at this parent location\n                const t = this.getFieldsMap(e);\n                this.applyChanges(t, n, r), n = {}, r = [], e = s.popLast();\n            }\n            t ? n[s.lastSegment()] = Mt(t) : r.push(s.lastSegment());\n        }));\n        const s = this.getFieldsMap(e);\n        this.applyChanges(s, n, r);\n    }\n    /**\n     * Removes the field at the specified path. If there is no field at the\n     * specified path, nothing is changed.\n     *\n     * @param path - The field path to remove.\n     */    delete(t) {\n        const e = this.field(t.popLast());\n        jt(e) && e.mapValue.fields && delete e.mapValue.fields[t.lastSegment()];\n    }\n    isEqual(t) {\n        return Ft(this.value, t.value);\n    }\n    /**\n     * Returns the map that contains the leaf element of `path`. If the parent\n     * entry does not yet exist, or if it is not a map, a new map will be created.\n     */    getFieldsMap(t) {\n        let e = this.value;\n        e.mapValue.fields || (e.mapValue = {\n            fields: {}\n        });\n        for (let n = 0; n < t.length; ++n) {\n            let r = e.mapValue.fields[t.get(n)];\n            jt(r) && r.mapValue.fields || (r = {\n                mapValue: {\n                    fields: {}\n                }\n            }, e.mapValue.fields[t.get(n)] = r), e = r;\n        }\n        return e.mapValue.fields;\n    }\n    /**\n     * Modifies `fieldsMap` by adding, replacing or deleting the specified\n     * entries.\n     */    applyChanges(t, e, n) {\n        Et(e, ((e, n) => t[e] = n));\n        for (const e of n) delete t[e];\n    }\n    clone() {\n        return new Bt(Mt(this.value));\n    }\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Represents a document in Firestore with a key, version, data and whether it\n * has local mutations applied to it.\n *\n * Documents can transition between states via `convertToFoundDocument()`,\n * `convertToNoDocument()` and `convertToUnknownDocument()`. If a document does\n * not transition to one of these states even after all mutations have been\n * applied, `isValidDocument()` returns false and the document should be removed\n * from all views.\n */ class zt {\n    constructor(t, e, n, r, s, i) {\n        this.key = t, this.documentType = e, this.version = n, this.readTime = r, this.data = s, \n        this.documentState = i;\n    }\n    /**\n     * Creates a document with no known version or data, but which can serve as\n     * base document for mutations.\n     */    static newInvalidDocument(t) {\n        return new zt(t, 0 /* INVALID */ , vt.min(), vt.min(), Bt.empty(), 0 /* SYNCED */);\n    }\n    /**\n     * Creates a new document that is known to exist with the given data at the\n     * given version.\n     */    static newFoundDocument(t, e, n) {\n        return new zt(t, 1 /* FOUND_DOCUMENT */ , e, vt.min(), n, 0 /* SYNCED */);\n    }\n    /** Creates a new document that is known to not exist at the given version. */    static newNoDocument(t, e) {\n        return new zt(t, 2 /* NO_DOCUMENT */ , e, vt.min(), Bt.empty(), 0 /* SYNCED */);\n    }\n    /**\n     * Creates a new document that is known to exist at the given version but\n     * whose data is not known (e.g. a document that was updated without a known\n     * base document).\n     */    static newUnknownDocument(t, e) {\n        return new zt(t, 3 /* UNKNOWN_DOCUMENT */ , e, vt.min(), Bt.empty(), 2 /* HAS_COMMITTED_MUTATIONS */);\n    }\n    /**\n     * Changes the document type to indicate that it exists and that its version\n     * and data are known.\n     */    convertToFoundDocument(t, e) {\n        return this.version = t, this.documentType = 1 /* FOUND_DOCUMENT */ , this.data = e, \n        this.documentState = 0 /* SYNCED */ , this;\n    }\n    /**\n     * Changes the document type to indicate that it doesn't exist at the given\n     * version.\n     */    convertToNoDocument(t) {\n        return this.version = t, this.documentType = 2 /* NO_DOCUMENT */ , this.data = Bt.empty(), \n        this.documentState = 0 /* SYNCED */ , this;\n    }\n    /**\n     * Changes the document type to indicate that it exists at a given version but\n     * that its data is not known (e.g. a document that was updated without a known\n     * base document).\n     */    convertToUnknownDocument(t) {\n        return this.version = t, this.documentType = 3 /* UNKNOWN_DOCUMENT */ , this.data = Bt.empty(), \n        this.documentState = 2 /* HAS_COMMITTED_MUTATIONS */ , this;\n    }\n    setHasCommittedMutations() {\n        return this.documentState = 2 /* HAS_COMMITTED_MUTATIONS */ , this;\n    }\n    setHasLocalMutations() {\n        return this.documentState = 1 /* HAS_LOCAL_MUTATIONS */ , this;\n    }\n    setReadTime(t) {\n        return this.readTime = t, this;\n    }\n    get hasLocalMutations() {\n        return 1 /* HAS_LOCAL_MUTATIONS */ === this.documentState;\n    }\n    get hasCommittedMutations() {\n        return 2 /* HAS_COMMITTED_MUTATIONS */ === this.documentState;\n    }\n    get hasPendingWrites() {\n        return this.hasLocalMutations || this.hasCommittedMutations;\n    }\n    isValidDocument() {\n        return 0 /* INVALID */ !== this.documentType;\n    }\n    isFoundDocument() {\n        return 1 /* FOUND_DOCUMENT */ === this.documentType;\n    }\n    isNoDocument() {\n        return 2 /* NO_DOCUMENT */ === this.documentType;\n    }\n    isUnknownDocument() {\n        return 3 /* UNKNOWN_DOCUMENT */ === this.documentType;\n    }\n    isEqual(t) {\n        return t instanceof zt && this.key.isEqual(t.key) && this.version.isEqual(t.version) && this.documentType === t.documentType && this.documentState === t.documentState && this.data.isEqual(t.data);\n    }\n    mutableCopy() {\n        return new zt(this.key, this.documentType, this.version, this.readTime, this.data.clone(), this.documentState);\n    }\n    toString() {\n        return `Document(${this.key}, ${this.version}, ${JSON.stringify(this.data.value)}, {documentType: ${this.documentType}}), {documentState: ${this.documentState}})`;\n    }\n}\n\n/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n// Visible for testing\nclass Gt {\n    constructor(t, e = null, n = [], r = [], s = null, i = null, o = null) {\n        this.path = t, this.collectionGroup = e, this.orderBy = n, this.filters = r, this.limit = s, \n        this.startAt = i, this.endAt = o, this.P = null;\n    }\n}\n\n/**\n * Initializes a Target with a path and optional additional query constraints.\n * Path must currently be empty if this is a collection group query.\n *\n * NOTE: you should always construct `Target` from `Query.toTarget` instead of\n * using this factory method, because `Query` provides an implicit `orderBy`\n * property.\n */ function Qt(t, e = null, n = [], r = [], s = null, i = null, o = null) {\n    return new Gt(t, e, n, r, s, i, o);\n}\n\nclass Wt extends class {} {\n    constructor(t, e, n) {\n        super(), this.field = t, this.op = e, this.value = n;\n    }\n    /**\n     * Creates a filter based on the provided arguments.\n     */    static create(t, e, n) {\n        return t.isKeyField() ? \"in\" /* IN */ === e || \"not-in\" /* NOT_IN */ === e ? this.V(t, e, n) : new Yt(t, e, n) : \"array-contains\" /* ARRAY_CONTAINS */ === e ? new Xt(t, n) : \"in\" /* IN */ === e ? new Zt(t, n) : \"not-in\" /* NOT_IN */ === e ? new te(t, n) : \"array-contains-any\" /* ARRAY_CONTAINS_ANY */ === e ? new ee(t, n) : new Wt(t, e, n);\n    }\n    static V(t, e, n) {\n        return \"in\" /* IN */ === e ? new Ht(t, n) : new Kt(t, n);\n    }\n    matches(t) {\n        const e = t.data.field(this.field);\n        // Types do not have to match in NOT_EQUAL filters.\n                return \"!=\" /* NOT_EQUAL */ === this.op ? null !== e && this.D(qt(e, this.value)) : null !== e && St(this.value) === St(e) && this.D(qt(e, this.value));\n        // Only compare types with matching backend order (such as double and int).\n        }\n    D(t) {\n        switch (this.op) {\n          case \"<\" /* LESS_THAN */ :\n            return t < 0;\n\n          case \"<=\" /* LESS_THAN_OR_EQUAL */ :\n            return t <= 0;\n\n          case \"==\" /* EQUAL */ :\n            return 0 === t;\n\n          case \"!=\" /* NOT_EQUAL */ :\n            return 0 !== t;\n\n          case \">\" /* GREATER_THAN */ :\n            return t > 0;\n\n          case \">=\" /* GREATER_THAN_OR_EQUAL */ :\n            return t >= 0;\n\n          default:\n            return g();\n        }\n    }\n    N() {\n        return [ \"<\" /* LESS_THAN */ , \"<=\" /* LESS_THAN_OR_EQUAL */ , \">\" /* GREATER_THAN */ , \">=\" /* GREATER_THAN_OR_EQUAL */ , \"!=\" /* NOT_EQUAL */ , \"not-in\" /* NOT_IN */ ].indexOf(this.op) >= 0;\n    }\n}\n\n/** Filter that matches on key fields (i.e. '__name__'). */\nclass Yt extends Wt {\n    constructor(t, e, n) {\n        super(t, e, n), this.key = et.fromName(n.referenceValue);\n    }\n    matches(t) {\n        const e = et.comparator(t.key, this.key);\n        return this.D(e);\n    }\n}\n\n/** Filter that matches on key fields within an array. */ class Ht extends Wt {\n    constructor(t, e) {\n        super(t, \"in\" /* IN */ , e), this.keys = Jt(\"in\" /* IN */ , e);\n    }\n    matches(t) {\n        return this.keys.some((e => e.isEqual(t.key)));\n    }\n}\n\n/** Filter that matches on key fields not present within an array. */ class Kt extends Wt {\n    constructor(t, e) {\n        super(t, \"not-in\" /* NOT_IN */ , e), this.keys = Jt(\"not-in\" /* NOT_IN */ , e);\n    }\n    matches(t) {\n        return !this.keys.some((e => e.isEqual(t.key)));\n    }\n}\n\nfunction Jt(t, e) {\n    var n;\n    return ((null === (n = e.arrayValue) || void 0 === n ? void 0 : n.values) || []).map((t => et.fromName(t.referenceValue)));\n}\n\n/** A Filter that implements the array-contains operator. */ class Xt extends Wt {\n    constructor(t, e) {\n        super(t, \"array-contains\" /* ARRAY_CONTAINS */ , e);\n    }\n    matches(t) {\n        const e = t.data.field(this.field);\n        return Lt(e) && xt(e.arrayValue, this.value);\n    }\n}\n\n/** A Filter that implements the IN operator. */ class Zt extends Wt {\n    constructor(t, e) {\n        super(t, \"in\" /* IN */ , e);\n    }\n    matches(t) {\n        const e = t.data.field(this.field);\n        return null !== e && xt(this.value.arrayValue, e);\n    }\n}\n\n/** A Filter that implements the not-in operator. */ class te extends Wt {\n    constructor(t, e) {\n        super(t, \"not-in\" /* NOT_IN */ , e);\n    }\n    matches(t) {\n        if (xt(this.value.arrayValue, {\n            nullValue: \"NULL_VALUE\"\n        })) return !1;\n        const e = t.data.field(this.field);\n        return null !== e && !xt(this.value.arrayValue, e);\n    }\n}\n\n/** A Filter that implements the array-contains-any operator. */ class ee extends Wt {\n    constructor(t, e) {\n        super(t, \"array-contains-any\" /* ARRAY_CONTAINS_ANY */ , e);\n    }\n    matches(t) {\n        const e = t.data.field(this.field);\n        return !(!Lt(e) || !e.arrayValue.values) && e.arrayValue.values.some((t => xt(this.value.arrayValue, t)));\n    }\n}\n\n/**\n * Represents a bound of a query.\n *\n * The bound is specified with the given components representing a position and\n * whether it's just before or just after the position (relative to whatever the\n * query order is).\n *\n * The position represents a logical index position for a query. It's a prefix\n * of values for the (potentially implicit) order by clauses of a query.\n *\n * Bound provides a function to determine whether a document comes before or\n * after a bound. This is influenced by whether the position is just before or\n * just after the provided values.\n */ class ne {\n    constructor(t, e) {\n        this.position = t, this.inclusive = e;\n    }\n}\n\n/**\n * An ordering on a field, in some Direction. Direction defaults to ASCENDING.\n */ class re {\n    constructor(t, e = \"asc\" /* ASCENDING */) {\n        this.field = t, this.dir = e;\n    }\n}\n\nfunction se(t, e) {\n    return t.dir === e.dir && t.field.isEqual(e.field);\n}\n\nfunction ie(t, e) {\n    if (null === t) return null === e;\n    if (null === e) return !1;\n    if (t.inclusive !== e.inclusive || t.position.length !== e.position.length) return !1;\n    for (let n = 0; n < t.position.length; n++) {\n        if (!Ft(t.position[n], e.position[n])) return !1;\n    }\n    return !0;\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Query encapsulates all the query attributes we support in the SDK. It can\n * be run against the LocalStore, as well as be converted to a `Target` to\n * query the RemoteStore results.\n *\n * Visible for testing.\n */ class oe {\n    /**\n     * Initializes a Query with a path and optional additional query constraints.\n     * Path must currently be empty if this is a collection group query.\n     */\n    constructor(t, e = null, n = [], r = [], s = null, i = \"F\" /* First */ , o = null, u = null) {\n        this.path = t, this.collectionGroup = e, this.explicitOrderBy = n, this.filters = r, \n        this.limit = s, this.limitType = i, this.startAt = o, this.endAt = u, this.$ = null, \n        // The corresponding `Target` of this `Query` instance.\n        this.S = null, this.startAt, this.endAt;\n    }\n}\n\n/** Creates a new Query for a query that matches all documents at `path` */ function ue(t) {\n    return !ct(t.limit) && \"L\" /* Last */ === t.limitType;\n}\n\nfunction ce(t) {\n    return t.explicitOrderBy.length > 0 ? t.explicitOrderBy[0].field : null;\n}\n\nfunction ae(t) {\n    for (const e of t.filters) if (e.N()) return e.field;\n    return null;\n}\n\n/**\n * Checks if any of the provided Operators are included in the query and\n * returns the first one that is, or null if none are.\n */\n/**\n * Returns whether the query matches a collection group rather than a specific\n * collection.\n */\nfunction he(t) {\n    return null !== t.collectionGroup;\n}\n\n/**\n * Returns the implicit order by constraint that is used to execute the Query,\n * which can be different from the order by constraints the user provided (e.g.\n * the SDK and backend always orders by `__name__`).\n */ function le(t) {\n    const e = b(t);\n    if (null === e.$) {\n        e.$ = [];\n        const t = ae(e), n = ce(e);\n        if (null !== t && null === n) \n        // In order to implicitly add key ordering, we must also add the\n        // inequality filter field for it to be a valid query.\n        // Note that the default inequality field and key ordering is ascending.\n        t.isKeyField() || e.$.push(new re(t)), e.$.push(new re(tt.keyField(), \"asc\" /* ASCENDING */)); else {\n            let t = !1;\n            for (const n of e.explicitOrderBy) e.$.push(n), n.field.isKeyField() && (t = !0);\n            if (!t) {\n                // The order of the implicit key ordering always matches the last\n                // explicit order by\n                const t = e.explicitOrderBy.length > 0 ? e.explicitOrderBy[e.explicitOrderBy.length - 1].dir : \"asc\" /* ASCENDING */;\n                e.$.push(new re(tt.keyField(), t));\n            }\n        }\n    }\n    return e.$;\n}\n\n/**\n * Converts this `Query` instance to it's corresponding `Target` representation.\n */ function fe(t) {\n    const e = b(t);\n    if (!e.S) if (\"F\" /* First */ === e.limitType) e.S = Qt(e.path, e.collectionGroup, le(e), e.filters, e.limit, e.startAt, e.endAt); else {\n        // Flip the orderBy directions since we want the last results\n        const t = [];\n        for (const n of le(e)) {\n            const e = \"desc\" /* DESCENDING */ === n.dir ? \"asc\" /* ASCENDING */ : \"desc\" /* DESCENDING */;\n            t.push(new re(n.field, e));\n        }\n        // We need to swap the cursors to match the now-flipped query ordering.\n                const n = e.endAt ? new ne(e.endAt.position, !e.endAt.inclusive) : null, r = e.startAt ? new ne(e.startAt.position, !e.startAt.inclusive) : null;\n        // Now return as a LimitType.First query.\n        e.S = Qt(e.path, e.collectionGroup, t, e.filters, e.limit, n, r);\n    }\n    return e.S;\n}\n\nfunction de(t, e) {\n    return function(t, e) {\n        if (t.limit !== e.limit) return !1;\n        if (t.orderBy.length !== e.orderBy.length) return !1;\n        for (let n = 0; n < t.orderBy.length; n++) if (!se(t.orderBy[n], e.orderBy[n])) return !1;\n        if (t.filters.length !== e.filters.length) return !1;\n        for (let s = 0; s < t.filters.length; s++) if (n = t.filters[s], r = e.filters[s], \n        n.op !== r.op || !n.field.isEqual(r.field) || !Ft(n.value, r.value)) return !1;\n        var n, r;\n        return t.collectionGroup === e.collectionGroup && !!t.path.isEqual(e.path) && !!ie(t.startAt, e.startAt) && ie(t.endAt, e.endAt);\n    }(fe(t), fe(e)) && t.limitType === e.limitType;\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Returns an DoubleValue for `value` that is encoded based the serializer's\n * `useProto3Json` setting.\n */\n/**\n * Returns a value for a number that's appropriate to put into a proto.\n * The return value is an IntegerValue if it can safely represent the value,\n * otherwise a DoubleValue is returned.\n */\nfunction we(t, e) {\n    return function(t) {\n        return \"number\" == typeof t && Number.isInteger(t) && !at(t) && t <= Number.MAX_SAFE_INTEGER && t >= Number.MIN_SAFE_INTEGER;\n    }(e) ? \n    /**\n * Returns an IntegerValue for `value`.\n */\n    function(t) {\n        return {\n            integerValue: \"\" + t\n        };\n    }(e) : function(t, e) {\n        if (t.F) {\n            if (isNaN(e)) return {\n                doubleValue: \"NaN\"\n            };\n            if (e === 1 / 0) return {\n                doubleValue: \"Infinity\"\n            };\n            if (e === -1 / 0) return {\n                doubleValue: \"-Infinity\"\n            };\n        }\n        return {\n            doubleValue: at(e) ? \"-0\" : e\n        };\n    }(t, e);\n}\n\n/**\n * @license\n * Copyright 2018 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/** Used to represent a field transform on a mutation. */ class me {\n    constructor() {\n        // Make sure that the structural type of `TransformOperation` is unique.\n        // See https://github.com/microsoft/TypeScript/issues/5451\n        this._ = void 0;\n    }\n}\n\n/** Transforms a value into a server-generated timestamp. */ class pe extends me {}\n\n/** Transforms an array value via a union operation. */ class ye extends me {\n    constructor(t) {\n        super(), this.elements = t;\n    }\n}\n\n/** Transforms an array value via a remove operation. */ class _e extends me {\n    constructor(t) {\n        super(), this.elements = t;\n    }\n}\n\n/**\n * Implements the backend semantics for locally computed NUMERIC_ADD (increment)\n * transforms. Converts all field values to integers or doubles, but unlike the\n * backend does not cap integer values at 2^63. Instead, JavaScript number\n * arithmetic is used and precision loss can occur for values greater than 2^53.\n */ class ge extends me {\n    constructor(t, e) {\n        super(), this.q = t, this.O = e;\n    }\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/** A field path and the TransformOperation to perform upon it. */ class ve {\n    constructor(t, e) {\n        this.field = t, this.transform = e;\n    }\n}\n\n/**\n * Encodes a precondition for a mutation. This follows the model that the\n * backend accepts with the special case of an explicit \"empty\" precondition\n * (meaning no precondition).\n */ class be {\n    constructor(t, e) {\n        this.updateTime = t, this.exists = e;\n    }\n    /** Creates a new empty Precondition. */    static none() {\n        return new be;\n    }\n    /** Creates a new Precondition with an exists flag. */    static exists(t) {\n        return new be(void 0, t);\n    }\n    /** Creates a new Precondition based on a version a document exists at. */    static updateTime(t) {\n        return new be(t);\n    }\n    /** Returns whether this Precondition is empty. */    get isNone() {\n        return void 0 === this.updateTime && void 0 === this.exists;\n    }\n    isEqual(t) {\n        return this.exists === t.exists && (this.updateTime ? !!t.updateTime && this.updateTime.isEqual(t.updateTime) : !t.updateTime);\n    }\n}\n\n/**\n * A mutation describes a self-contained change to a document. Mutations can\n * create, replace, delete, and update subsets of documents.\n *\n * Mutations not only act on the value of the document but also its version.\n *\n * For local mutations (mutations that haven't been committed yet), we preserve\n * the existing version for Set and Patch mutations. For Delete mutations, we\n * reset the version to 0.\n *\n * Here's the expected transition table.\n *\n * MUTATION           APPLIED TO            RESULTS IN\n *\n * SetMutation        Document(v3)          Document(v3)\n * SetMutation        NoDocument(v3)        Document(v0)\n * SetMutation        InvalidDocument(v0)   Document(v0)\n * PatchMutation      Document(v3)          Document(v3)\n * PatchMutation      NoDocument(v3)        NoDocument(v3)\n * PatchMutation      InvalidDocument(v0)   UnknownDocument(v3)\n * DeleteMutation     Document(v3)          NoDocument(v0)\n * DeleteMutation     NoDocument(v3)        NoDocument(v0)\n * DeleteMutation     InvalidDocument(v0)   NoDocument(v0)\n *\n * For acknowledged mutations, we use the updateTime of the WriteResponse as\n * the resulting version for Set and Patch mutations. As deletes have no\n * explicit update time, we use the commitTime of the WriteResponse for\n * Delete mutations.\n *\n * If a mutation is acknowledged by the backend but fails the precondition check\n * locally, we transition to an `UnknownDocument` and rely on Watch to send us\n * the updated version.\n *\n * Field transforms are used only with Patch and Set Mutations. We use the\n * `updateTransforms` message to store transforms, rather than the `transforms`s\n * messages.\n *\n * ## Subclassing Notes\n *\n * Every type of mutation needs to implement its own applyToRemoteDocument() and\n * applyToLocalView() to implement the actual behavior of applying the mutation\n * to some source document (see `setMutationApplyToRemoteDocument()` for an\n * example).\n */ class Ee {}\n\n/**\n * A mutation that creates or replaces the document at the given key with the\n * object value contents.\n */ class Te extends Ee {\n    constructor(t, e, n, r = []) {\n        super(), this.key = t, this.value = e, this.precondition = n, this.fieldTransforms = r, \n        this.type = 0 /* Set */;\n    }\n}\n\n/**\n * A mutation that modifies fields of the document at the given key with the\n * given values. The values are applied through a field mask:\n *\n *  * When a field is in both the mask and the values, the corresponding field\n *    is updated.\n *  * When a field is in neither the mask nor the values, the corresponding\n *    field is unmodified.\n *  * When a field is in the mask but not in the values, the corresponding field\n *    is deleted.\n *  * When a field is not in the mask but is in the values, the values map is\n *    ignored.\n */ class Ie extends Ee {\n    constructor(t, e, n, r, s = []) {\n        super(), this.key = t, this.data = e, this.fieldMask = n, this.precondition = r, \n        this.fieldTransforms = s, this.type = 1 /* Patch */;\n    }\n}\n\n/** A mutation that deletes the document at the given key. */ class Ae extends Ee {\n    constructor(t, e) {\n        super(), this.key = t, this.precondition = e, this.type = 2 /* Delete */ , this.fieldTransforms = [];\n    }\n}\n\n/**\n * A mutation that verifies the existence of the document at the given key with\n * the provided precondition.\n *\n * The `verify` operation is only used in Transactions, and this class serves\n * primarily to facilitate serialization into protos.\n */ class Re extends Ee {\n    constructor(t, e) {\n        super(), this.key = t, this.precondition = e, this.type = 3 /* Verify */ , this.fieldTransforms = [];\n    }\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */ const Pe = (() => {\n    const t = {\n        asc: \"ASCENDING\",\n        desc: \"DESCENDING\"\n    };\n    return t;\n})(), Ve = (() => {\n    const t = {\n        \"<\": \"LESS_THAN\",\n        \"<=\": \"LESS_THAN_OR_EQUAL\",\n        \">\": \"GREATER_THAN\",\n        \">=\": \"GREATER_THAN_OR_EQUAL\",\n        \"==\": \"EQUAL\",\n        \"!=\": \"NOT_EQUAL\",\n        \"array-contains\": \"ARRAY_CONTAINS\",\n        in: \"IN\",\n        \"not-in\": \"NOT_IN\",\n        \"array-contains-any\": \"ARRAY_CONTAINS_ANY\"\n    };\n    return t;\n})();\n\n/**\n * This class generates JsonObject values for the Datastore API suitable for\n * sending to either GRPC stub methods or via the JSON/HTTP REST API.\n *\n * The serializer supports both Protobuf.js and Proto3 JSON formats. By\n * setting `useProto3Json` to true, the serializer will use the Proto3 JSON\n * format.\n *\n * For a description of the Proto3 JSON format check\n * https://developers.google.com/protocol-buffers/docs/proto3#json\n *\n * TODO(klimt): We can remove the databaseId argument if we keep the full\n * resource name in documents.\n */\nclass De {\n    constructor(t, e) {\n        this.databaseId = t, this.F = e;\n    }\n}\n\n/**\n * Returns a value for a number (or null) that's appropriate to put into\n * a google.protobuf.Int32Value proto.\n * DO NOT USE THIS FOR ANYTHING ELSE.\n * This method cheats. It's typed as returning \"number\" because that's what\n * our generated proto interfaces say Int32Value must be. But GRPC actually\n * expects a { value: <number> } struct.\n */\n/**\n * Returns a value for a Date that's appropriate to put into a proto.\n */\nfunction Ne(t, e) {\n    if (t.F) {\n        return `${new Date(1e3 * e.seconds).toISOString().replace(/\\.\\d*/, \"\").replace(\"Z\", \"\")}.${(\"000000000\" + e.nanoseconds).slice(-9)}Z`;\n    }\n    return {\n        seconds: \"\" + e.seconds,\n        nanos: e.nanoseconds\n    };\n}\n\n/**\n * Returns a value for bytes that's appropriate to put in a proto.\n *\n * Visible for testing.\n */\nfunction $e(t, e) {\n    return t.F ? e.toBase64() : e.toUint8Array();\n}\n\nfunction Se(t, e) {\n    return Ne(t, e.toTimestamp());\n}\n\nfunction Fe(t) {\n    return v(!!t), vt.fromTimestamp(function(t) {\n        const e = Rt(t);\n        return new gt(e.seconds, e.nanos);\n    }(t));\n}\n\nfunction xe(t, e) {\n    return function(t) {\n        return new X([ \"projects\", t.projectId, \"databases\", t.database ]);\n    }(t).child(\"documents\").child(e).canonicalString();\n}\n\nfunction qe(t, e) {\n    return xe(t.databaseId, e.path);\n}\n\nfunction Oe(t, e) {\n    const n = function(t) {\n        const e = X.fromString(t);\n        return v(We(e)), e;\n    }(e);\n    if (n.get(1) !== t.databaseId.projectId) throw new U(A, \"Tried to deserialize key from different project: \" + n.get(1) + \" vs \" + t.databaseId.projectId);\n    if (n.get(3) !== t.databaseId.database) throw new U(A, \"Tried to deserialize key from different database: \" + n.get(3) + \" vs \" + t.databaseId.database);\n    return new et((v((r = n).length > 4 && \"documents\" === r.get(4)), r.popFirst(5)));\n    var r;\n    /** Creates a Document proto from key and fields (but no create/update time) */}\n\nfunction Ce(t, e) {\n    return xe(t.databaseId, e);\n}\n\nfunction Le(t) {\n    return new X([ \"projects\", t.databaseId.projectId, \"databases\", t.databaseId.database ]).canonicalString();\n}\n\nfunction Ue(t, e, n) {\n    return {\n        name: qe(t, e),\n        fields: n.value.mapValue.fields\n    };\n}\n\nfunction ke(t, e) {\n    return \"found\" in e ? function(t, e) {\n        v(!!e.found), e.found.name, e.found.updateTime;\n        const n = Oe(t, e.found.name), r = Fe(e.found.updateTime), s = new Bt({\n            mapValue: {\n                fields: e.found.fields\n            }\n        });\n        return zt.newFoundDocument(n, r, s);\n    }(t, e) : \"missing\" in e ? function(t, e) {\n        v(!!e.missing), v(!!e.readTime);\n        const n = Oe(t, e.missing), r = Fe(e.readTime);\n        return zt.newNoDocument(n, r);\n    }(t, e) : g();\n}\n\nfunction je(t, e) {\n    let n;\n    if (e instanceof Te) n = {\n        update: Ue(t, e.key, e.value)\n    }; else if (e instanceof Ae) n = {\n        delete: qe(t, e.key)\n    }; else if (e instanceof Ie) n = {\n        update: Ue(t, e.key, e.data),\n        updateMask: Qe(e.fieldMask)\n    }; else {\n        if (!(e instanceof Re)) return g();\n        n = {\n            verify: qe(t, e.key)\n        };\n    }\n    return e.fieldTransforms.length > 0 && (n.updateTransforms = e.fieldTransforms.map((t => function(t, e) {\n        const n = e.transform;\n        if (n instanceof pe) return {\n            fieldPath: e.field.canonicalString(),\n            setToServerValue: \"REQUEST_TIME\"\n        };\n        if (n instanceof ye) return {\n            fieldPath: e.field.canonicalString(),\n            appendMissingElements: {\n                values: n.elements\n            }\n        };\n        if (n instanceof _e) return {\n            fieldPath: e.field.canonicalString(),\n            removeAllFromArray: {\n                values: n.elements\n            }\n        };\n        if (n instanceof ge) return {\n            fieldPath: e.field.canonicalString(),\n            increment: n.O\n        };\n        throw g();\n    }(0, t)))), e.precondition.isNone || (n.currentDocument = function(t, e) {\n        return void 0 !== e.updateTime ? {\n            updateTime: Se(t, e.updateTime)\n        } : void 0 !== e.exists ? {\n            exists: e.exists\n        } : g();\n    }(t, e.precondition)), n;\n}\n\nfunction Me(t, e) {\n    // Dissect the path into parent, collectionId, and optional key filter.\n    const n = {\n        structuredQuery: {}\n    }, r = e.path;\n    null !== e.collectionGroup ? (n.parent = Ce(t, r), n.structuredQuery.from = [ {\n        collectionId: e.collectionGroup,\n        allDescendants: !0\n    } ]) : (n.parent = Ce(t, r.popLast()), n.structuredQuery.from = [ {\n        collectionId: r.lastSegment()\n    } ]);\n    const s = function(t) {\n        if (0 === t.length) return;\n        const e = t.map((t => \n        // visible for testing\n        function(t) {\n            if (\"==\" /* EQUAL */ === t.op) {\n                if (kt(t.value)) return {\n                    unaryFilter: {\n                        field: Ge(t.field),\n                        op: \"IS_NAN\"\n                    }\n                };\n                if (Ut(t.value)) return {\n                    unaryFilter: {\n                        field: Ge(t.field),\n                        op: \"IS_NULL\"\n                    }\n                };\n            } else if (\"!=\" /* NOT_EQUAL */ === t.op) {\n                if (kt(t.value)) return {\n                    unaryFilter: {\n                        field: Ge(t.field),\n                        op: \"IS_NOT_NAN\"\n                    }\n                };\n                if (Ut(t.value)) return {\n                    unaryFilter: {\n                        field: Ge(t.field),\n                        op: \"IS_NOT_NULL\"\n                    }\n                };\n            }\n            return {\n                fieldFilter: {\n                    field: Ge(t.field),\n                    op: ze(t.op),\n                    value: t.value\n                }\n            };\n        }(t)));\n        if (1 === e.length) return e[0];\n        return {\n            compositeFilter: {\n                op: \"AND\",\n                filters: e\n            }\n        };\n    }(e.filters);\n    s && (n.structuredQuery.where = s);\n    const i = function(t) {\n        if (0 === t.length) return;\n        return t.map((t => \n        // visible for testing\n        function(t) {\n            return {\n                field: Ge(t.field),\n                direction: Be(t.dir)\n            };\n        }(t)));\n    }(e.orderBy);\n    i && (n.structuredQuery.orderBy = i);\n    const o = function(t, e) {\n        return t.F || ct(e) ? e : {\n            value: e\n        };\n    }(t, e.limit);\n    var u;\n    return null !== o && (n.structuredQuery.limit = o), e.startAt && (n.structuredQuery.startAt = {\n        before: (u = e.startAt).inclusive,\n        values: u.position\n    }), e.endAt && (n.structuredQuery.endAt = function(t) {\n        return {\n            before: !t.inclusive,\n            values: t.position\n        };\n    }\n    // visible for testing\n    (e.endAt)), n;\n}\n\nfunction Be(t) {\n    return Pe[t];\n}\n\n// visible for testing\nfunction ze(t) {\n    return Ve[t];\n}\n\nfunction Ge(t) {\n    return {\n        fieldPath: t.canonicalString()\n    };\n}\n\nfunction Qe(t) {\n    const e = [];\n    return t.fields.forEach((t => e.push(t.canonicalString()))), {\n        fieldPaths: e\n    };\n}\n\nfunction We(t) {\n    // Resource names have at least 4 components (project ID, database ID)\n    return t.length >= 4 && \"projects\" === t.get(0) && \"databases\" === t.get(2);\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */ function Ye(t) {\n    return new De(t, /* useProto3Json= */ !0);\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * A helper for running delayed tasks following an exponential backoff curve\n * between attempts.\n *\n * Each delay is made up of a \"base\" delay which follows the exponential\n * backoff curve, and a +/- 50% \"jitter\" that is calculated and added to the\n * base delay. This prevents clients from accidentally synchronizing their\n * delays causing spikes of load to the backend.\n */\nclass He {\n    constructor(\n    /**\n     * The AsyncQueue to run backoff operations on.\n     */\n    t, \n    /**\n     * The ID to use when scheduling backoff operations on the AsyncQueue.\n     */\n    e, \n    /**\n     * The initial delay (used as the base delay on the first retry attempt).\n     * Note that jitter will still be applied, so the actual delay could be as\n     * little as 0.5*initialDelayMs.\n     */\n    n = 1e3\n    /**\n     * The multiplier to use to determine the extended base delay after each\n     * attempt.\n     */ , r = 1.5\n    /**\n     * The maximum base delay after which no further backoff is performed.\n     * Note that jitter will still be applied, so the actual delay could be as\n     * much as 1.5*maxDelayMs.\n     */ , s = 6e4) {\n        this.C = t, this.timerId = e, this.L = n, this.U = r, this.k = s, this.j = 0, this.M = null, \n        /** The last backoff attempt, as epoch milliseconds. */\n        this.B = Date.now(), this.reset();\n    }\n    /**\n     * Resets the backoff delay.\n     *\n     * The very next backoffAndWait() will have no delay. If it is called again\n     * (i.e. due to an error), initialDelayMs (plus jitter) will be used, and\n     * subsequent ones will increase according to the backoffFactor.\n     */    reset() {\n        this.j = 0;\n    }\n    /**\n     * Resets the backoff delay to the maximum delay (e.g. for use after a\n     * RESOURCE_EXHAUSTED error).\n     */    G() {\n        this.j = this.k;\n    }\n    /**\n     * Returns a promise that resolves after currentDelayMs, and increases the\n     * delay for any subsequent attempts. If there was a pending backoff operation\n     * already, it will be canceled.\n     */    W(t) {\n        // Cancel any pending backoff operation.\n        this.cancel();\n        // First schedule using the current base (which may be 0 and should be\n        // honored as such).\n        const e = Math.floor(this.j + this.Y()), n = Math.max(0, Date.now() - this.B), r = Math.max(0, e - n);\n        // Guard against lastAttemptTime being in the future due to a clock change.\n                r > 0 && m(\"ExponentialBackoff\", `Backing off for ${r} ms (base delay: ${this.j} ms, delay with jitter: ${e} ms, last attempt: ${n} ms ago)`), \n        this.M = this.C.enqueueAfterDelay(this.timerId, r, (() => (this.B = Date.now(), \n        t()))), \n        // Apply backoff factor to determine next delay and ensure it is within\n        // bounds.\n        this.j *= this.U, this.j < this.L && (this.j = this.L), this.j > this.k && (this.j = this.k);\n    }\n    H() {\n        null !== this.M && (this.M.skipDelay(), this.M = null);\n    }\n    cancel() {\n        null !== this.M && (this.M.cancel(), this.M = null);\n    }\n    /** Returns a random value in the range [-currentBaseMs/2, currentBaseMs/2] */    Y() {\n        return (Math.random() - .5) * this.j;\n    }\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Datastore and its related methods are a wrapper around the external Google\n * Cloud Datastore grpc API, which provides an interface that is more convenient\n * for the rest of the client SDK architecture to consume.\n */\n/**\n * An implementation of Datastore that exposes additional state for internal\n * consumption.\n */\nclass Ke extends class {} {\n    constructor(t, e, n, r) {\n        super(), this.authCredentials = t, this.appCheckCredentials = e, this.K = n, this.q = r, \n        this.J = !1;\n    }\n    X() {\n        if (this.J) throw new U(S, \"The client has already been terminated.\");\n    }\n    /** Invokes the provided RPC with auth and AppCheck tokens. */    m(t, e, n) {\n        return this.X(), Promise.all([ this.authCredentials.getToken(), this.appCheckCredentials.getToken() ]).then((([r, s]) => this.K.m(t, e, n, r, s))).catch((t => {\n            throw \"FirebaseError\" === t.name ? (t.code === N && (this.authCredentials.invalidateToken(), \n            this.appCheckCredentials.invalidateToken()), t) : new U(I, t.toString());\n        }));\n    }\n    /** Invokes the provided RPC with streamed results with auth and AppCheck tokens. */    T(t, e, n) {\n        return this.X(), Promise.all([ this.authCredentials.getToken(), this.appCheckCredentials.getToken() ]).then((([r, s]) => this.K.T(t, e, n, r, s))).catch((t => {\n            throw \"FirebaseError\" === t.name ? (t.code === N && (this.authCredentials.invalidateToken(), \n            this.appCheckCredentials.invalidateToken()), t) : new U(I, t.toString());\n        }));\n    }\n    terminate() {\n        this.J = !0;\n    }\n}\n\n// TODO(firestorexp): Make sure there is only one Datastore instance per\n// firestore-exp client.\nasync function Je(t, e) {\n    const n = b(t), r = Le(n.q) + \"/documents\", s = {\n        writes: e.map((t => je(n.q, t)))\n    };\n    await n.m(\"Commit\", r, s);\n}\n\nasync function Xe(t, e) {\n    const n = b(t), r = Le(n.q) + \"/documents\", s = {\n        documents: e.map((t => qe(n.q, t)))\n    }, i = await n.T(\"BatchGetDocuments\", r, s), o = new Map;\n    i.forEach((t => {\n        const e = ke(n.q, t);\n        o.set(e.key.toString(), e);\n    }));\n    const u = [];\n    return e.forEach((t => {\n        const e = o.get(t.toString());\n        v(!!e), u.push(e);\n    })), u;\n}\n\nasync function Ze(t, e) {\n    const n = b(t), r = Me(n.q, fe(e));\n    return (await n.T(\"RunQuery\", r.parent, {\n        structuredQuery: r.structuredQuery\n    })).filter((t => !!t.document)).map((t => function(t, e, n) {\n        const r = Oe(t, e.name), s = Fe(e.updateTime), i = new Bt({\n            mapValue: {\n                fields: e.fields\n            }\n        }), o = zt.newFoundDocument(r, s, i);\n        return n && o.setHasCommittedMutations(), n ? o.setHasCommittedMutations() : o;\n    }(n.q, t.document, void 0)));\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */ const tn = new Map;\n\n/**\n * An instance map that ensures only one Datastore exists per Firestore\n * instance.\n */\n/**\n * Returns an initialized and started Datastore for the given Firestore\n * instance. Callers must invoke removeComponents() when the Firestore\n * instance is terminated.\n */\nfunction en(t) {\n    if (t._terminated) throw new U(S, \"The client has already been terminated.\");\n    if (!tn.has(t)) {\n        m(\"ComponentProvider\", \"Initializing Datastore\");\n        const i = function(t) {\n            return new wt(t, fetch.bind(null));\n        }((e = t._databaseId, n = t.app.options.appId || \"\", r = t._persistenceKey, s = t._freezeSettings(), \n        new H(e, n, r, s.host, s.ssl, s.experimentalForceLongPolling, s.experimentalAutoDetectLongPolling, s.useFetchStreams))), o = Ye(t._databaseId), u = function(t, e, n, r) {\n            return new Ke(t, e, n, r);\n        }(t._authCredentials, t._appCheckCredentials, i, o);\n        tn.set(t, u);\n    }\n    var e, n, r, s;\n    /**\n * @license\n * Copyright 2018 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */    return tn.get(t);\n}\n\n/**\n * Removes all components associated with the provided instance. Must be called\n * when the `Firestore` instance is terminated.\n */\n/**\n * A concrete type describing all the values that can be applied via a\n * user-supplied `FirestoreSettings` object. This is a separate type so that\n * defaults can be supplied and the value can be checked for equality.\n */\nclass nn {\n    constructor(t) {\n        var e;\n        if (void 0 === t.host) {\n            if (void 0 !== t.ssl) throw new U(A, \"Can't provide ssl option if host option is not set\");\n            this.host = \"firestore.googleapis.com\", this.ssl = true;\n        } else this.host = t.host, this.ssl = null === (e = t.ssl) || void 0 === e || e;\n        if (this.credentials = t.credentials, this.ignoreUndefinedProperties = !!t.ignoreUndefinedProperties, \n        void 0 === t.cacheSizeBytes) this.cacheSizeBytes = 41943040; else {\n            if (-1 !== t.cacheSizeBytes && t.cacheSizeBytes < 1048576) throw new U(A, \"cacheSizeBytes must be at least 1048576\");\n            this.cacheSizeBytes = t.cacheSizeBytes;\n        }\n        this.experimentalForceLongPolling = !!t.experimentalForceLongPolling, this.experimentalAutoDetectLongPolling = !!t.experimentalAutoDetectLongPolling, \n        this.useFetchStreams = !!t.useFetchStreams, function(t, e, n, r) {\n            if (!0 === e && !0 === r) throw new U(A, `${t} and ${n} cannot be used together.`);\n        }(\"experimentalForceLongPolling\", t.experimentalForceLongPolling, \"experimentalAutoDetectLongPolling\", t.experimentalAutoDetectLongPolling);\n    }\n    isEqual(t) {\n        return this.host === t.host && this.ssl === t.ssl && this.credentials === t.credentials && this.cacheSizeBytes === t.cacheSizeBytes && this.experimentalForceLongPolling === t.experimentalForceLongPolling && this.experimentalAutoDetectLongPolling === t.experimentalAutoDetectLongPolling && this.ignoreUndefinedProperties === t.ignoreUndefinedProperties && this.useFetchStreams === t.useFetchStreams;\n    }\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * The Cloud Firestore service interface.\n *\n * Do not call this constructor directly. Instead, use {@link getFirestore}.\n */ class rn {\n    /** @hideconstructor */\n    constructor(t, e, n) {\n        this._authCredentials = e, this._appCheckCredentials = n, \n        /**\n         * Whether it's a Firestore or Firestore Lite instance.\n         */\n        this.type = \"firestore-lite\", this._persistenceKey = \"(lite)\", this._settings = new nn({}), \n        this._settingsFrozen = !1, t instanceof K ? this._databaseId = t : (this._app = t, \n        this._databaseId = function(t) {\n            if (!Object.prototype.hasOwnProperty.apply(t.options, [ \"projectId\" ])) throw new U(A, '\"projectId\" not provided in firebase.initializeApp.');\n            return new K(t.options.projectId);\n        }\n        /**\n * Initializes a new instance of Cloud Firestore with the provided settings.\n * Can only be called before any other functions, including\n * {@link getFirestore}. If the custom settings are empty, this function is\n * equivalent to calling {@link getFirestore}.\n *\n * @param app - The {@link @firebase/app#FirebaseApp} with which the `Firestore` instance will\n * be associated.\n * @param settings - A settings object to configure the `Firestore` instance.\n * @returns A newly initialized `Firestore` instance.\n */ (t));\n    }\n    /**\n     * The {@link @firebase/app#FirebaseApp} associated with this `Firestore` service\n     * instance.\n     */    get app() {\n        if (!this._app) throw new U(S, \"Firestore was not initialized using the Firebase SDK. 'app' is not available\");\n        return this._app;\n    }\n    get _initialized() {\n        return this._settingsFrozen;\n    }\n    get _terminated() {\n        return void 0 !== this._terminateTask;\n    }\n    _setSettings(t) {\n        if (this._settingsFrozen) throw new U(S, \"Firestore has already been started and its settings can no longer be changed. You can only modify settings before calling any other methods on a Firestore object.\");\n        this._settings = new nn(t), void 0 !== t.credentials && (this._authCredentials = function(t) {\n            if (!t) return new M;\n            switch (t.type) {\n              case \"gapi\":\n                const e = t.client;\n                // Make sure this really is a Gapi client.\n                                return v(!(\"object\" != typeof e || null === e || !e.auth || !e.auth.getAuthHeaderValueForFirstParty)), \n                new Q(e, t.sessionIndex || \"0\", t.iamToken || null);\n\n              case \"provider\":\n                return t.client;\n\n              default:\n                throw new U(A, \"makeAuthCredentialsProvider failed due to invalid credential type\");\n            }\n        }(t.credentials));\n    }\n    _getSettings() {\n        return this._settings;\n    }\n    _freezeSettings() {\n        return this._settingsFrozen = !0, this._settings;\n    }\n    _delete() {\n        return this._terminateTask || (this._terminateTask = this._terminate()), this._terminateTask;\n    }\n    /** Returns a JSON-serializable representation of this `Firestore` instance. */    toJSON() {\n        return {\n            app: this._app,\n            databaseId: this._databaseId,\n            settings: this._settings\n        };\n    }\n    /**\n     * Terminates all components used by this client. Subclasses can override\n     * this method to clean up their own dependencies, but must also call this\n     * method.\n     *\n     * Only ever called once.\n     */    _terminate() {\n        return function(t) {\n            const e = tn.get(t);\n            e && (m(\"ComponentProvider\", \"Removing Datastore\"), tn.delete(t), e.terminate());\n        }(this), Promise.resolve();\n    }\n}\n\nfunction sn(t, e) {\n    const n = _getProvider(t, \"firestore/lite\");\n    if (n.isInitialized()) throw new U(S, \"Firestore can only be initialized once per app.\");\n    return n.initialize({\n        options: e\n    });\n}\n\n/**\n * Returns the existing `Firestore` instance that is associated with the\n * provided {@link @firebase/app#FirebaseApp}. If no instance exists, initializes a new\n * instance with default settings.\n *\n * @param app - The {@link @firebase/app#FirebaseApp} instance that the returned `Firestore`\n * instance is associated with.\n * @returns The `Firestore` instance of the provided app.\n */ function on(e = getApp()) {\n    return _getProvider(e, \"firestore/lite\").getImmediate();\n}\n\n/**\n * Modify this instance to communicate with the Cloud Firestore emulator.\n *\n * Note: This must be called before this instance has been used to do any\n * operations.\n *\n * @param firestore - The `Firestore` instance to configure to connect to the\n * emulator.\n * @param host - the emulator host (ex: localhost).\n * @param port - the emulator port (ex: 9000).\n * @param options.mockUserToken - the mock auth token to use for unit testing\n * Security Rules.\n */ function un(t, e, n, r = {}) {\n    var s;\n    const i = (t = ot(t, rn))._getSettings();\n    if (\"firestore.googleapis.com\" !== i.host && i.host !== e && y(\"Host has been set in both settings() and useEmulator(), emulator host will be used\"), \n    t._setSettings(Object.assign(Object.assign({}, i), {\n        host: `${e}:${n}`,\n        ssl: !1\n    })), r.mockUserToken) {\n        let e, n;\n        if (\"string\" == typeof r.mockUserToken) e = r.mockUserToken, n = l.MOCK_USER; else {\n            // Let createMockUserToken validate first (catches common mistakes like\n            // invalid field \"uid\" and missing field \"sub\" / \"user_id\".)\n            e = createMockUserToken(r.mockUserToken, null === (s = t._app) || void 0 === s ? void 0 : s.options.projectId);\n            const i = r.mockUserToken.sub || r.mockUserToken.user_id;\n            if (!i) throw new U(A, \"mockUserToken must contain 'sub' or 'user_id' field!\");\n            n = new l(i);\n        }\n        t._authCredentials = new B(new j(e, n));\n    }\n}\n\n/**\n * Terminates the provided `Firestore` instance.\n *\n * After calling `terminate()` only the `clearIndexedDbPersistence()` functions\n * may be used. Any other function will throw a `FirestoreError`. Termination\n * does not cancel any pending writes, and any promises that are awaiting a\n * response from the server will not be resolved.\n *\n * To restart after termination, create a new instance of `Firestore` with\n * {@link getFirestore}.\n *\n * Note: Under normal circumstances, calling `terminate()` is not required. This\n * function is useful only when you want to force this instance to release all of\n * its resources or in combination with {@link clearIndexedDbPersistence} to\n * ensure that all local state is destroyed between test runs.\n *\n * @param firestore - The `Firestore` instance to terminate.\n * @returns A `Promise` that is resolved when the instance has been successfully\n * terminated.\n */ function cn(t) {\n    return t = ot(t, rn), _removeServiceInstance(t.app, \"firestore/lite\"), t._delete();\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * A `DocumentReference` refers to a document location in a Firestore database\n * and can be used to write, read, or listen to the location. The document at\n * the referenced location may or may not exist.\n */\nclass an {\n    /** @hideconstructor */\n    constructor(t, \n    /**\n     * If provided, the `FirestoreDataConverter` associated with this instance.\n     */\n    e, n) {\n        this.converter = e, this._key = n, \n        /** The type of this Firestore reference. */\n        this.type = \"document\", this.firestore = t;\n    }\n    get _path() {\n        return this._key.path;\n    }\n    /**\n     * The document's identifier within its collection.\n     */    get id() {\n        return this._key.path.lastSegment();\n    }\n    /**\n     * A string representing the path of the referenced document (relative\n     * to the root of the database).\n     */    get path() {\n        return this._key.path.canonicalString();\n    }\n    /**\n     * The collection this `DocumentReference` belongs to.\n     */    get parent() {\n        return new ln(this.firestore, this.converter, this._key.path.popLast());\n    }\n    withConverter(t) {\n        return new an(this.firestore, t, this._key);\n    }\n}\n\n/**\n * A `Query` refers to a query which you can read or listen to. You can also\n * construct refined `Query` objects by adding filters and ordering.\n */ class hn {\n    // This is the lite version of the Query class in the main SDK.\n    /** @hideconstructor protected */\n    constructor(t, \n    /**\n     * If provided, the `FirestoreDataConverter` associated with this instance.\n     */\n    e, n) {\n        this.converter = e, this._query = n, \n        /** The type of this Firestore reference. */\n        this.type = \"query\", this.firestore = t;\n    }\n    withConverter(t) {\n        return new hn(this.firestore, t, this._query);\n    }\n}\n\n/**\n * A `CollectionReference` object can be used for adding documents, getting\n * document references, and querying for documents (using {@link query}).\n */ class ln extends hn {\n    /** @hideconstructor */\n    constructor(t, e, n) {\n        super(t, e, new oe(n)), this._path = n, \n        /** The type of this Firestore reference. */\n        this.type = \"collection\";\n    }\n    /** The collection's identifier. */    get id() {\n        return this._query.path.lastSegment();\n    }\n    /**\n     * A string representing the path of the referenced collection (relative\n     * to the root of the database).\n     */    get path() {\n        return this._query.path.canonicalString();\n    }\n    /**\n     * A reference to the containing `DocumentReference` if this is a\n     * subcollection. If this isn't a subcollection, the reference is null.\n     */    get parent() {\n        const t = this._path.popLast();\n        return t.isEmpty() ? null : new an(this.firestore, \n        /* converter= */ null, new et(t));\n    }\n    withConverter(t) {\n        return new ln(this.firestore, t, this._path);\n    }\n}\n\nfunction fn(t, e, ...n) {\n    if (t = getModularInstance(t), nt(\"collection\", \"path\", e), t instanceof rn) {\n        const r = X.fromString(e, ...n);\n        return st(r), new ln(t, /* converter= */ null, r);\n    }\n    {\n        if (!(t instanceof an || t instanceof ln)) throw new U(A, \"Expected first argument to collection() to be a CollectionReference, a DocumentReference or FirebaseFirestore\");\n        const r = t._path.child(X.fromString(e, ...n));\n        return st(r), new ln(t.firestore, \n        /* converter= */ null, r);\n    }\n}\n\n// TODO(firestorelite): Consider using ErrorFactory -\n// https://github.com/firebase/firebase-js-sdk/blob/0131e1f/packages/util/src/errors.ts#L106\n/**\n * Creates and returns a new `Query` instance that includes all documents in the\n * database that are contained in a collection or subcollection with the\n * given `collectionId`.\n *\n * @param firestore - A reference to the root `Firestore` instance.\n * @param collectionId - Identifies the collections to query over. Every\n * collection or subcollection with this ID as the last segment of its path\n * will be included. Cannot contain a slash.\n * @returns The created `Query`.\n */ function dn(t, e) {\n    if (t = ot(t, rn), nt(\"collectionGroup\", \"collection id\", e), e.indexOf(\"/\") >= 0) throw new U(A, `Invalid collection ID '${e}' passed to function collectionGroup(). Collection IDs must not contain '/'.`);\n    return new hn(t, \n    /* converter= */ null, \n    /**\n * Creates a new Query for a collection group query that matches all documents\n * within the provided collection group.\n */\n    function(t) {\n        return new oe(X.emptyPath(), t);\n    }(e));\n}\n\nfunction wn(t, e, ...n) {\n    if (t = getModularInstance(t), \n    // We allow omission of 'pathString' but explicitly prohibit passing in both\n    // 'undefined' and 'null'.\n    1 === arguments.length && (e = pt.R()), nt(\"doc\", \"path\", e), t instanceof rn) {\n        const r = X.fromString(e, ...n);\n        return rt(r), new an(t, \n        /* converter= */ null, new et(r));\n    }\n    {\n        if (!(t instanceof an || t instanceof ln)) throw new U(A, \"Expected first argument to collection() to be a CollectionReference, a DocumentReference or FirebaseFirestore\");\n        const r = t._path.child(X.fromString(e, ...n));\n        return rt(r), new an(t.firestore, t instanceof ln ? t.converter : null, new et(r));\n    }\n}\n\n/**\n * Returns true if the provided references are equal.\n *\n * @param left - A reference to compare.\n * @param right - A reference to compare.\n * @returns true if the references point to the same location in the same\n * Firestore database.\n */ function mn(t, e) {\n    return t = getModularInstance(t), e = getModularInstance(e), (t instanceof an || t instanceof ln) && (e instanceof an || e instanceof ln) && (t.firestore === e.firestore && t.path === e.path && t.converter === e.converter);\n}\n\n/**\n * Returns true if the provided queries point to the same collection and apply\n * the same constraints.\n *\n * @param left - A `Query` to compare.\n * @param right - A `Query` to compare.\n * @returns true if the references point to the same location in the same\n * Firestore database.\n */ function pn(t, e) {\n    return t = getModularInstance(t), e = getModularInstance(e), t instanceof hn && e instanceof hn && (t.firestore === e.firestore && de(t._query, e._query) && t.converter === e.converter);\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * A `FieldPath` refers to a field in a document. The path may consist of a\n * single field name (referring to a top-level field in the document), or a\n * list of field names (referring to a nested field in the document).\n *\n * Create a `FieldPath` by providing field names. If more than one field\n * name is provided, the path will point to a nested field in a document.\n */ class yn {\n    /**\n     * Creates a `FieldPath` from the provided field names. If more than one field\n     * name is provided, the path will point to a nested field in a document.\n     *\n     * @param fieldNames - A list of field names.\n     */\n    constructor(...t) {\n        for (let e = 0; e < t.length; ++e) if (0 === t[e].length) throw new U(A, \"Invalid field name at argument $(i + 1). Field names must not be empty.\");\n        this._internalPath = new tt(t);\n    }\n    /**\n     * Returns true if this `FieldPath` is equal to the provided one.\n     *\n     * @param other - The `FieldPath` to compare against.\n     * @returns true if this `FieldPath` is equal to the provided one.\n     */    isEqual(t) {\n        return this._internalPath.isEqual(t._internalPath);\n    }\n}\n\n/**\n * Returns a special sentinel `FieldPath` to refer to the ID of a document.\n * It can be used in queries to sort or filter by the document ID.\n */ function _n() {\n    return new yn(\"__name__\");\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * An immutable object representing an array of bytes.\n */ class gn {\n    /** @hideconstructor */\n    constructor(t) {\n        this._byteString = t;\n    }\n    /**\n     * Creates a new `Bytes` object from the given Base64 string, converting it to\n     * bytes.\n     *\n     * @param base64 - The Base64 string used to create the `Bytes` object.\n     */    static fromBase64String(t) {\n        try {\n            return new gn(It.fromBase64String(t));\n        } catch (t) {\n            throw new U(A, \"Failed to construct data from Base64 string: \" + t);\n        }\n    }\n    /**\n     * Creates a new `Bytes` object from the given Uint8Array.\n     *\n     * @param array - The Uint8Array used to create the `Bytes` object.\n     */    static fromUint8Array(t) {\n        return new gn(It.fromUint8Array(t));\n    }\n    /**\n     * Returns the underlying bytes as a Base64-encoded string.\n     *\n     * @returns The Base64-encoded string created from the `Bytes` object.\n     */    toBase64() {\n        return this._byteString.toBase64();\n    }\n    /**\n     * Returns the underlying bytes in a new `Uint8Array`.\n     *\n     * @returns The Uint8Array created from the `Bytes` object.\n     */    toUint8Array() {\n        return this._byteString.toUint8Array();\n    }\n    /**\n     * Returns a string representation of the `Bytes` object.\n     *\n     * @returns A string representation of the `Bytes` object.\n     */    toString() {\n        return \"Bytes(base64: \" + this.toBase64() + \")\";\n    }\n    /**\n     * Returns true if this `Bytes` object is equal to the provided one.\n     *\n     * @param other - The `Bytes` object to compare against.\n     * @returns true if this `Bytes` object is equal to the provided one.\n     */    isEqual(t) {\n        return this._byteString.isEqual(t._byteString);\n    }\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Sentinel values that can be used when writing document fields with `set()`\n * or `update()`.\n */ class vn {\n    /**\n     * @param _methodName - The public API endpoint that returns this class.\n     * @hideconstructor\n     */\n    constructor(t) {\n        this._methodName = t;\n    }\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * An immutable object representing a geographic location in Firestore. The\n * location is represented as latitude/longitude pair.\n *\n * Latitude values are in the range of [-90, 90].\n * Longitude values are in the range of [-180, 180].\n */ class bn {\n    /**\n     * Creates a new immutable `GeoPoint` object with the provided latitude and\n     * longitude values.\n     * @param latitude - The latitude as number between -90 and 90.\n     * @param longitude - The longitude as number between -180 and 180.\n     */\n    constructor(t, e) {\n        if (!isFinite(t) || t < -90 || t > 90) throw new U(A, \"Latitude must be a number between -90 and 90, but was: \" + t);\n        if (!isFinite(e) || e < -180 || e > 180) throw new U(A, \"Longitude must be a number between -180 and 180, but was: \" + e);\n        this._lat = t, this._long = e;\n    }\n    /**\n     * The latitude of this `GeoPoint` instance.\n     */    get latitude() {\n        return this._lat;\n    }\n    /**\n     * The longitude of this `GeoPoint` instance.\n     */    get longitude() {\n        return this._long;\n    }\n    /**\n     * Returns true if this `GeoPoint` is equal to the provided one.\n     *\n     * @param other - The `GeoPoint` to compare against.\n     * @returns true if this `GeoPoint` is equal to the provided one.\n     */    isEqual(t) {\n        return this._lat === t._lat && this._long === t._long;\n    }\n    /** Returns a JSON-serializable representation of this GeoPoint. */    toJSON() {\n        return {\n            latitude: this._lat,\n            longitude: this._long\n        };\n    }\n    /**\n     * Actually private to JS consumers of our API, so this function is prefixed\n     * with an underscore.\n     */    _compareTo(t) {\n        return yt(this._lat, t._lat) || yt(this._long, t._long);\n    }\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */ const En = /^__.*__$/;\n\n/** The result of parsing document data (e.g. for a setData call). */ class Tn {\n    constructor(t, e, n) {\n        this.data = t, this.fieldMask = e, this.fieldTransforms = n;\n    }\n    toMutation(t, e) {\n        return null !== this.fieldMask ? new Ie(t, this.data, this.fieldMask, e, this.fieldTransforms) : new Te(t, this.data, e, this.fieldTransforms);\n    }\n}\n\n/** The result of parsing \"update\" data (i.e. for an updateData call). */ class In {\n    constructor(t, \n    // The fieldMask does not include document transforms.\n    e, n) {\n        this.data = t, this.fieldMask = e, this.fieldTransforms = n;\n    }\n    toMutation(t, e) {\n        return new Ie(t, this.data, this.fieldMask, e, this.fieldTransforms);\n    }\n}\n\nfunction An(t) {\n    switch (t) {\n      case 0 /* Set */ :\n // fall through\n              case 2 /* MergeSet */ :\n // fall through\n              case 1 /* Update */ :\n        return !0;\n\n      case 3 /* Argument */ :\n      case 4 /* ArrayArgument */ :\n        return !1;\n\n      default:\n        throw g();\n    }\n}\n\n/** A \"context\" object passed around while parsing user data. */ class Rn {\n    /**\n     * Initializes a ParseContext with the given source and path.\n     *\n     * @param settings - The settings for the parser.\n     * @param databaseId - The database ID of the Firestore instance.\n     * @param serializer - The serializer to use to generate the Value proto.\n     * @param ignoreUndefinedProperties - Whether to ignore undefined properties\n     * rather than throw.\n     * @param fieldTransforms - A mutable list of field transforms encountered\n     * while parsing the data.\n     * @param fieldMask - A mutable list of field paths encountered while parsing\n     * the data.\n     *\n     * TODO(b/34871131): We don't support array paths right now, so path can be\n     * null to indicate the context represents any location within an array (in\n     * which case certain features will not work and errors will be somewhat\n     * compromised).\n     */\n    constructor(t, e, n, r, s, i) {\n        this.settings = t, this.databaseId = e, this.q = n, this.ignoreUndefinedProperties = r, \n        // Minor hack: If fieldTransforms is undefined, we assume this is an\n        // external call and we need to validate the entire path.\n        void 0 === s && this.Z(), this.fieldTransforms = s || [], this.fieldMask = i || [];\n    }\n    get path() {\n        return this.settings.path;\n    }\n    get tt() {\n        return this.settings.tt;\n    }\n    /** Returns a new context with the specified settings overwritten. */    et(t) {\n        return new Rn(Object.assign(Object.assign({}, this.settings), t), this.databaseId, this.q, this.ignoreUndefinedProperties, this.fieldTransforms, this.fieldMask);\n    }\n    nt(t) {\n        var e;\n        const n = null === (e = this.path) || void 0 === e ? void 0 : e.child(t), r = this.et({\n            path: n,\n            rt: !1\n        });\n        return r.st(t), r;\n    }\n    it(t) {\n        var e;\n        const n = null === (e = this.path) || void 0 === e ? void 0 : e.child(t), r = this.et({\n            path: n,\n            rt: !1\n        });\n        return r.Z(), r;\n    }\n    ot(t) {\n        // TODO(b/34871131): We don't support array paths right now; so make path\n        // undefined.\n        return this.et({\n            path: void 0,\n            rt: !0\n        });\n    }\n    ut(t) {\n        return Qn(t, this.settings.methodName, this.settings.ct || !1, this.path, this.settings.at);\n    }\n    /** Returns 'true' if 'fieldPath' was traversed when creating this context. */    contains(t) {\n        return void 0 !== this.fieldMask.find((e => t.isPrefixOf(e))) || void 0 !== this.fieldTransforms.find((e => t.isPrefixOf(e.field)));\n    }\n    Z() {\n        // TODO(b/34871131): Remove null check once we have proper paths for fields\n        // within arrays.\n        if (this.path) for (let t = 0; t < this.path.length; t++) this.st(this.path.get(t));\n    }\n    st(t) {\n        if (0 === t.length) throw this.ut(\"Document fields must not be empty\");\n        if (An(this.tt) && En.test(t)) throw this.ut('Document fields cannot begin and end with \"__\"');\n    }\n}\n\n/**\n * Helper for parsing raw user input (provided via the API) into internal model\n * classes.\n */ class Pn {\n    constructor(t, e, n) {\n        this.databaseId = t, this.ignoreUndefinedProperties = e, this.q = n || Ye(t);\n    }\n    /** Creates a new top-level parse context. */    ht(t, e, n, r = !1) {\n        return new Rn({\n            tt: t,\n            methodName: e,\n            at: n,\n            path: tt.emptyPath(),\n            rt: !1,\n            ct: r\n        }, this.databaseId, this.q, this.ignoreUndefinedProperties);\n    }\n}\n\nfunction Vn(t) {\n    const e = t._freezeSettings(), n = Ye(t._databaseId);\n    return new Pn(t._databaseId, !!e.ignoreUndefinedProperties, n);\n}\n\n/** Parse document data from a set() call. */ function Dn(t, e, n, r, s, i = {}) {\n    const o = t.ht(i.merge || i.mergeFields ? 2 /* MergeSet */ : 0 /* Set */ , e, n, s);\n    Mn(\"Data must be an object, but it was:\", o, r);\n    const u = kn(r, o);\n    let c, a;\n    if (i.merge) c = new Tt(o.fieldMask), a = o.fieldTransforms; else if (i.mergeFields) {\n        const t = [];\n        for (const r of i.mergeFields) {\n            const s = Bn(e, r, n);\n            if (!o.contains(s)) throw new U(A, `Field '${s}' is specified in your field mask but missing from your input data.`);\n            Wn(t, s) || t.push(s);\n        }\n        c = new Tt(t), a = o.fieldTransforms.filter((t => c.covers(t.field)));\n    } else c = null, a = o.fieldTransforms;\n    return new Tn(new Bt(u), c, a);\n}\n\nclass Nn extends vn {\n    _toFieldTransform(t) {\n        if (2 /* MergeSet */ !== t.tt) throw 1 /* Update */ === t.tt ? t.ut(`${this._methodName}() can only appear at the top level of your update data`) : t.ut(`${this._methodName}() cannot be used with set() unless you pass {merge:true}`);\n        // No transform to add for a delete, but we need to add it to our\n        // fieldMask so it gets deleted.\n        return t.fieldMask.push(t.path), null;\n    }\n    isEqual(t) {\n        return t instanceof Nn;\n    }\n}\n\n/**\n * Creates a child context for parsing SerializableFieldValues.\n *\n * This is different than calling `ParseContext.contextWith` because it keeps\n * the fieldTransforms and fieldMask separate.\n *\n * The created context has its `dataSource` set to `UserDataSource.Argument`.\n * Although these values are used with writes, any elements in these FieldValues\n * are not considered writes since they cannot contain any FieldValue sentinels,\n * etc.\n *\n * @param fieldValue - The sentinel FieldValue for which to create a child\n *     context.\n * @param context - The parent context.\n * @param arrayElement - Whether or not the FieldValue has an array.\n */ function $n(t, e, n) {\n    return new Rn({\n        tt: 3 /* Argument */ ,\n        at: e.settings.at,\n        methodName: t._methodName,\n        rt: n\n    }, e.databaseId, e.q, e.ignoreUndefinedProperties);\n}\n\nclass Sn extends vn {\n    _toFieldTransform(t) {\n        return new ve(t.path, new pe);\n    }\n    isEqual(t) {\n        return t instanceof Sn;\n    }\n}\n\nclass Fn extends vn {\n    constructor(t, e) {\n        super(t), this.lt = e;\n    }\n    _toFieldTransform(t) {\n        const e = $n(this, t, \n        /*array=*/ !0), n = this.lt.map((t => Un(t, e))), r = new ye(n);\n        return new ve(t.path, r);\n    }\n    isEqual(t) {\n        // TODO(mrschmidt): Implement isEquals\n        return this === t;\n    }\n}\n\nclass xn extends vn {\n    constructor(t, e) {\n        super(t), this.lt = e;\n    }\n    _toFieldTransform(t) {\n        const e = $n(this, t, \n        /*array=*/ !0), n = this.lt.map((t => Un(t, e))), r = new _e(n);\n        return new ve(t.path, r);\n    }\n    isEqual(t) {\n        // TODO(mrschmidt): Implement isEquals\n        return this === t;\n    }\n}\n\nclass qn extends vn {\n    constructor(t, e) {\n        super(t), this.ft = e;\n    }\n    _toFieldTransform(t) {\n        const e = new ge(t.q, we(t.q, this.ft));\n        return new ve(t.path, e);\n    }\n    isEqual(t) {\n        // TODO(mrschmidt): Implement isEquals\n        return this === t;\n    }\n}\n\n/** Parse update data from an update() call. */ function On(t, e, n, r) {\n    const s = t.ht(1 /* Update */ , e, n);\n    Mn(\"Data must be an object, but it was:\", s, r);\n    const i = [], o = Bt.empty();\n    Et(r, ((t, r) => {\n        const u = Gn(e, t, n);\n        // For Compat types, we have to \"extract\" the underlying types before\n        // performing validation.\n                r = getModularInstance(r);\n        const c = s.it(u);\n        if (r instanceof Nn) \n        // Add it to the field mask, but don't add anything to updateData.\n        i.push(u); else {\n            const t = Un(r, c);\n            null != t && (i.push(u), o.set(u, t));\n        }\n    }));\n    const u = new Tt(i);\n    return new In(o, u, s.fieldTransforms);\n}\n\n/** Parse update data from a list of field/value arguments. */ function Cn(t, e, n, r, s, i) {\n    const o = t.ht(1 /* Update */ , e, n), u = [ Bn(e, r, n) ], c = [ s ];\n    if (i.length % 2 != 0) throw new U(A, `Function ${e}() needs to be called with an even number of arguments that alternate between field names and values.`);\n    for (let t = 0; t < i.length; t += 2) u.push(Bn(e, i[t])), c.push(i[t + 1]);\n    const a = [], l = Bt.empty();\n    // We iterate in reverse order to pick the last value for a field if the\n    // user specified the field multiple times.\n    for (let t = u.length - 1; t >= 0; --t) if (!Wn(a, u[t])) {\n        const e = u[t];\n        let n = c[t];\n        // For Compat types, we have to \"extract\" the underlying types before\n        // performing validation.\n                n = getModularInstance(n);\n        const r = o.it(e);\n        if (n instanceof Nn) \n        // Add it to the field mask, but don't add anything to updateData.\n        a.push(e); else {\n            const t = Un(n, r);\n            null != t && (a.push(e), l.set(e, t));\n        }\n    }\n    const f = new Tt(a);\n    return new In(l, f, o.fieldTransforms);\n}\n\n/**\n * Parse a \"query value\" (e.g. value in a where filter or a value in a cursor\n * bound).\n *\n * @param allowArrays - Whether the query value is an array that may directly\n * contain additional arrays (e.g. the operand of an `in` query).\n */ function Ln(t, e, n, r = !1) {\n    return Un(n, t.ht(r ? 4 /* ArrayArgument */ : 3 /* Argument */ , e));\n}\n\n/**\n * Parses user data to Protobuf Values.\n *\n * @param input - Data to be parsed.\n * @param context - A context object representing the current path being parsed,\n * the source of the data being parsed, etc.\n * @returns The parsed value, or null if the value was a FieldValue sentinel\n * that should not be included in the resulting parsed data.\n */ function Un(t, e) {\n    if (jn(\n    // Unwrap the API type from the Compat SDK. This will return the API type\n    // from firestore-exp.\n    t = getModularInstance(t))) return Mn(\"Unsupported field value:\", e, t), kn(t, e);\n    if (t instanceof vn) \n    // FieldValues usually parse into transforms (except deleteField())\n    // in which case we do not want to include this field in our parsed data\n    // (as doing so will overwrite the field directly prior to the transform\n    // trying to transform it). So we don't add this location to\n    // context.fieldMask and we return null as our parsing result.\n    /**\n * \"Parses\" the provided FieldValueImpl, adding any necessary transforms to\n * context.fieldTransforms.\n */\n    return function(t, e) {\n        // Sentinels are only supported with writes, and not within arrays.\n        if (!An(e.tt)) throw e.ut(`${t._methodName}() can only be used with update() and set()`);\n        if (!e.path) throw e.ut(`${t._methodName}() is not currently supported inside arrays`);\n        const n = t._toFieldTransform(e);\n        n && e.fieldTransforms.push(n);\n    }\n    /**\n * Helper to parse a scalar value (i.e. not an Object, Array, or FieldValue)\n *\n * @returns The parsed value\n */ (t, e), null;\n    if (void 0 === t && e.ignoreUndefinedProperties) \n    // If the input is undefined it can never participate in the fieldMask, so\n    // don't handle this below. If `ignoreUndefinedProperties` is false,\n    // `parseScalarValue` will reject an undefined value.\n    return null;\n    if (\n    // If context.path is null we are inside an array and we don't support\n    // field mask paths more granular than the top-level array.\n    e.path && e.fieldMask.push(e.path), t instanceof Array) {\n        // TODO(b/34871131): Include the path containing the array in the error\n        // message.\n        // In the case of IN queries, the parsed data is an array (representing\n        // the set of values to be included for the IN query) that may directly\n        // contain additional arrays (each representing an individual field\n        // value), so we disable this validation.\n        if (e.settings.rt && 4 /* ArrayArgument */ !== e.tt) throw e.ut(\"Nested arrays are not supported\");\n        return function(t, e) {\n            const n = [];\n            let r = 0;\n            for (const s of t) {\n                let t = Un(s, e.ot(r));\n                null == t && (\n                // Just include nulls in the array for fields being replaced with a\n                // sentinel.\n                t = {\n                    nullValue: \"NULL_VALUE\"\n                }), n.push(t), r++;\n            }\n            return {\n                arrayValue: {\n                    values: n\n                }\n            };\n        }(t, e);\n    }\n    return function(t, e) {\n        if (null === (t = getModularInstance(t))) return {\n            nullValue: \"NULL_VALUE\"\n        };\n        if (\"number\" == typeof t) return we(e.q, t);\n        if (\"boolean\" == typeof t) return {\n            booleanValue: t\n        };\n        if (\"string\" == typeof t) return {\n            stringValue: t\n        };\n        if (t instanceof Date) {\n            const n = gt.fromDate(t);\n            return {\n                timestampValue: Ne(e.q, n)\n            };\n        }\n        if (t instanceof gt) {\n            // Firestore backend truncates precision down to microseconds. To ensure\n            // offline mode works the same with regards to truncation, perform the\n            // truncation immediately without waiting for the backend to do that.\n            const n = new gt(t.seconds, 1e3 * Math.floor(t.nanoseconds / 1e3));\n            return {\n                timestampValue: Ne(e.q, n)\n            };\n        }\n        if (t instanceof bn) return {\n            geoPointValue: {\n                latitude: t.latitude,\n                longitude: t.longitude\n            }\n        };\n        if (t instanceof gn) return {\n            bytesValue: $e(e.q, t._byteString)\n        };\n        if (t instanceof an) {\n            const n = e.databaseId, r = t.firestore._databaseId;\n            if (!r.isEqual(n)) throw e.ut(`Document reference is for database ${r.projectId}/${r.database} but should be for database ${n.projectId}/${n.database}`);\n            return {\n                referenceValue: xe(t.firestore._databaseId || e.databaseId, t._key.path)\n            };\n        }\n        throw e.ut(`Unsupported field value: ${it(t)}`);\n    }\n    /**\n * Checks whether an object looks like a JSON object that should be converted\n * into a struct. Normal class/prototype instances are considered to look like\n * JSON objects since they should be converted to a struct value. Arrays, Dates,\n * GeoPoints, etc. are not considered to look like JSON objects since they map\n * to specific FieldValue types other than ObjectValue.\n */ (t, e);\n}\n\nfunction kn(t, e) {\n    const n = {};\n    return !function(t) {\n        for (const e in t) if (Object.prototype.hasOwnProperty.call(t, e)) return !1;\n        return !0;\n    }(t) ? Et(t, ((t, r) => {\n        const s = Un(r, e.nt(t));\n        null != s && (n[t] = s);\n    })) : \n    // If we encounter an empty object, we explicitly add it to the update\n    // mask to ensure that the server creates a map entry.\n    e.path && e.path.length > 0 && e.fieldMask.push(e.path), {\n        mapValue: {\n            fields: n\n        }\n    };\n}\n\nfunction jn(t) {\n    return !(\"object\" != typeof t || null === t || t instanceof Array || t instanceof Date || t instanceof gt || t instanceof bn || t instanceof gn || t instanceof an || t instanceof vn);\n}\n\nfunction Mn(t, e, n) {\n    if (!jn(n) || !function(t) {\n        return \"object\" == typeof t && null !== t && (Object.getPrototypeOf(t) === Object.prototype || null === Object.getPrototypeOf(t));\n    }(n)) {\n        const r = it(n);\n        throw \"an object\" === r ? e.ut(t + \" a custom object\") : e.ut(t + \" \" + r);\n    }\n}\n\n/**\n * Helper that calls fromDotSeparatedString() but wraps any error thrown.\n */ function Bn(t, e, n) {\n    if ((\n    // If required, replace the FieldPath Compat class with with the firestore-exp\n    // FieldPath.\n    e = getModularInstance(e)) instanceof yn) return e._internalPath;\n    if (\"string\" == typeof e) return Gn(t, e);\n    throw Qn(\"Field path arguments must be of type string or \", t, \n    /* hasConverter= */ !1, \n    /* path= */ void 0, n);\n}\n\n/**\n * Matches any characters in a field path string that are reserved.\n */ const zn = new RegExp(\"[~\\\\*/\\\\[\\\\]]\");\n\n/**\n * Wraps fromDotSeparatedString with an error message about the method that\n * was thrown.\n * @param methodName - The publicly visible method name\n * @param path - The dot-separated string form of a field path which will be\n * split on dots.\n * @param targetDoc - The document against which the field path will be\n * evaluated.\n */ function Gn(t, e, n) {\n    if (e.search(zn) >= 0) throw Qn(`Invalid field path (${e}). Paths must not contain '~', '*', '/', '[', or ']'`, t, \n    /* hasConverter= */ !1, \n    /* path= */ void 0, n);\n    try {\n        return new yn(...e.split(\".\"))._internalPath;\n    } catch (r) {\n        throw Qn(`Invalid field path (${e}). Paths must not be empty, begin with '.', end with '.', or contain '..'`, t, \n        /* hasConverter= */ !1, \n        /* path= */ void 0, n);\n    }\n}\n\nfunction Qn(t, e, n, r, s) {\n    const i = r && !r.isEmpty(), o = void 0 !== s;\n    let u = `Function ${e}() called with invalid data`;\n    n && (u += \" (via `toFirestore()`)\"), u += \". \";\n    let c = \"\";\n    return (i || o) && (c += \" (found\", i && (c += ` in field ${r}`), o && (c += ` in document ${s}`), \n    c += \")\"), new U(A, u + t + c);\n}\n\n/** Checks `haystack` if FieldPath `needle` is present. Runs in O(n). */ function Wn(t, e) {\n    return t.some((t => t.isEqual(e)));\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * A `DocumentSnapshot` contains data read from a document in your Firestore\n * database. The data can be extracted with `.data()` or `.get(<field>)` to\n * get a specific field.\n *\n * For a `DocumentSnapshot` that points to a non-existing document, any data\n * access will return 'undefined'. You can use the `exists()` method to\n * explicitly verify a document's existence.\n */ class Yn {\n    // Note: This class is stripped down version of the DocumentSnapshot in\n    // the legacy SDK. The changes are:\n    // - No support for SnapshotMetadata.\n    // - No support for SnapshotOptions.\n    /** @hideconstructor protected */\n    constructor(t, e, n, r, s) {\n        this._firestore = t, this._userDataWriter = e, this._key = n, this._document = r, \n        this._converter = s;\n    }\n    /** Property of the `DocumentSnapshot` that provides the document's ID. */    get id() {\n        return this._key.path.lastSegment();\n    }\n    /**\n     * The `DocumentReference` for the document included in the `DocumentSnapshot`.\n     */    get ref() {\n        return new an(this._firestore, this._converter, this._key);\n    }\n    /**\n     * Signals whether or not the document at the snapshot's location exists.\n     *\n     * @returns true if the document exists.\n     */    exists() {\n        return null !== this._document;\n    }\n    /**\n     * Retrieves all fields in the document as an `Object`. Returns `undefined` if\n     * the document doesn't exist.\n     *\n     * @returns An `Object` containing all fields in the document or `undefined`\n     * if the document doesn't exist.\n     */    data() {\n        if (this._document) {\n            if (this._converter) {\n                // We only want to use the converter and create a new DocumentSnapshot\n                // if a converter has been provided.\n                const t = new Hn(this._firestore, this._userDataWriter, this._key, this._document, \n                /* converter= */ null);\n                return this._converter.fromFirestore(t);\n            }\n            return this._userDataWriter.convertValue(this._document.data.value);\n        }\n    }\n    /**\n     * Retrieves the field specified by `fieldPath`. Returns `undefined` if the\n     * document or field doesn't exist.\n     *\n     * @param fieldPath - The path (for example 'foo' or 'foo.bar') to a specific\n     * field.\n     * @returns The data at the specified field location or undefined if no such\n     * field exists in the document.\n     */\n    // We are using `any` here to avoid an explicit cast by our users.\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    get(t) {\n        if (this._document) {\n            const e = this._document.data.field(Xn(\"DocumentSnapshot.get\", t));\n            if (null !== e) return this._userDataWriter.convertValue(e);\n        }\n    }\n}\n\n/**\n * A `QueryDocumentSnapshot` contains data read from a document in your\n * Firestore database as part of a query. The document is guaranteed to exist\n * and its data can be extracted with `.data()` or `.get(<field>)` to get a\n * specific field.\n *\n * A `QueryDocumentSnapshot` offers the same API surface as a\n * `DocumentSnapshot`. Since query results contain only existing documents, the\n * `exists` property will always be true and `data()` will never return\n * 'undefined'.\n */ class Hn extends Yn {\n    /**\n     * Retrieves all fields in the document as an `Object`.\n     *\n     * @override\n     * @returns An `Object` containing all fields in the document.\n     */\n    data() {\n        return super.data();\n    }\n}\n\n/**\n * A `QuerySnapshot` contains zero or more `DocumentSnapshot` objects\n * representing the results of a query. The documents can be accessed as an\n * array via the `docs` property or enumerated using the `forEach` method. The\n * number of documents can be determined via the `empty` and `size`\n * properties.\n */ class Kn {\n    /** @hideconstructor */\n    constructor(t, e) {\n        this._docs = e, this.query = t;\n    }\n    /** An array of all the documents in the `QuerySnapshot`. */    get docs() {\n        return [ ...this._docs ];\n    }\n    /** The number of documents in the `QuerySnapshot`. */    get size() {\n        return this.docs.length;\n    }\n    /** True if there are no documents in the `QuerySnapshot`. */    get empty() {\n        return 0 === this.docs.length;\n    }\n    /**\n     * Enumerates all of the documents in the `QuerySnapshot`.\n     *\n     * @param callback - A callback to be called with a `QueryDocumentSnapshot` for\n     * each document in the snapshot.\n     * @param thisArg - The `this` binding for the callback.\n     */    forEach(t, e) {\n        this._docs.forEach(t, e);\n    }\n}\n\n/**\n * Returns true if the provided snapshots are equal.\n *\n * @param left - A snapshot to compare.\n * @param right - A snapshot to compare.\n * @returns true if the snapshots are equal.\n */ function Jn(t, e) {\n    return t = getModularInstance(t), e = getModularInstance(e), t instanceof Yn && e instanceof Yn ? t._firestore === e._firestore && t._key.isEqual(e._key) && (null === t._document ? null === e._document : t._document.isEqual(e._document)) && t._converter === e._converter : t instanceof Kn && e instanceof Kn && (pn(t.query, e.query) && _t(t.docs, e.docs, Jn));\n}\n\n/**\n * Helper that calls `fromDotSeparatedString()` but wraps any error thrown.\n */ function Xn(t, e) {\n    return \"string\" == typeof e ? Gn(t, e) : e instanceof yn ? e._internalPath : e._delegate._internalPath;\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * A `QueryConstraint` is used to narrow the set of documents returned by a\n * Firestore query. `QueryConstraint`s are created by invoking {@link where},\n * {@link orderBy}, {@link (startAt:1)}, {@link (startAfter:1)}, {@link\n * endBefore:1}, {@link (endAt:1)}, {@link limit} or {@link limitToLast} and\n * can then be passed to {@link query} to create a new query instance that\n * also contains this `QueryConstraint`.\n */\nclass Zn {}\n\n/**\n * Creates a new immutable instance of {@link Query} that is extended to also include\n * additional query constraints.\n *\n * @param query - The {@link Query} instance to use as a base for the new constraints.\n * @param queryConstraints - The list of {@link QueryConstraint}s to apply.\n * @throws if any of the provided query constraints cannot be combined with the\n * existing or new constraints.\n */ function tr(t, ...e) {\n    for (const n of e) t = n._apply(t);\n    return t;\n}\n\nclass er extends Zn {\n    constructor(t, e, n) {\n        super(), this.dt = t, this.wt = e, this.yt = n, this.type = \"where\";\n    }\n    _apply(t) {\n        const e = Vn(t.firestore), n = function(t, e, n, r, s, i, o) {\n            let u;\n            if (s.isKeyField()) {\n                if (\"array-contains\" /* ARRAY_CONTAINS */ === i || \"array-contains-any\" /* ARRAY_CONTAINS_ANY */ === i) throw new U(A, `Invalid Query. You can't perform '${i}' queries on documentId().`);\n                if (\"in\" /* IN */ === i || \"not-in\" /* NOT_IN */ === i) {\n                    pr(o, i);\n                    const e = [];\n                    for (const n of o) e.push(mr(r, t, n));\n                    u = {\n                        arrayValue: {\n                            values: e\n                        }\n                    };\n                } else u = mr(r, t, o);\n            } else \"in\" /* IN */ !== i && \"not-in\" /* NOT_IN */ !== i && \"array-contains-any\" /* ARRAY_CONTAINS_ANY */ !== i || pr(o, i), \n            u = Ln(n, e, o, \n            /* allowArrays= */ \"in\" /* IN */ === i || \"not-in\" /* NOT_IN */ === i);\n            const c = Wt.create(s, i, u);\n            return function(t, e) {\n                if (e.N()) {\n                    const n = ae(t);\n                    if (null !== n && !n.isEqual(e.field)) throw new U(A, `Invalid query. All where filters with an inequality (<, <=, !=, not-in, >, or >=) must be on the same field. But you have inequality filters on '${n.toString()}' and '${e.field.toString()}'`);\n                    const r = ce(t);\n                    null !== r && yr(t, e.field, r);\n                }\n                const n = function(t, e) {\n                    for (const n of t.filters) if (e.indexOf(n.op) >= 0) return n.op;\n                    return null;\n                }(t, \n                /**\n * Given an operator, returns the set of operators that cannot be used with it.\n *\n * Operators in a query must adhere to the following set of rules:\n * 1. Only one array operator is allowed.\n * 2. Only one disjunctive operator is allowed.\n * 3. `NOT_EQUAL` cannot be used with another `NOT_EQUAL` operator.\n * 4. `NOT_IN` cannot be used with array, disjunctive, or `NOT_EQUAL` operators.\n *\n * Array operators: `ARRAY_CONTAINS`, `ARRAY_CONTAINS_ANY`\n * Disjunctive operators: `IN`, `ARRAY_CONTAINS_ANY`, `NOT_IN`\n */\n                function(t) {\n                    switch (t) {\n                      case \"!=\" /* NOT_EQUAL */ :\n                        return [ \"!=\" /* NOT_EQUAL */ , \"not-in\" /* NOT_IN */ ];\n\n                      case \"array-contains\" /* ARRAY_CONTAINS */ :\n                        return [ \"array-contains\" /* ARRAY_CONTAINS */ , \"array-contains-any\" /* ARRAY_CONTAINS_ANY */ , \"not-in\" /* NOT_IN */ ];\n\n                      case \"in\" /* IN */ :\n                        return [ \"array-contains-any\" /* ARRAY_CONTAINS_ANY */ , \"in\" /* IN */ , \"not-in\" /* NOT_IN */ ];\n\n                      case \"array-contains-any\" /* ARRAY_CONTAINS_ANY */ :\n                        return [ \"array-contains\" /* ARRAY_CONTAINS */ , \"array-contains-any\" /* ARRAY_CONTAINS_ANY */ , \"in\" /* IN */ , \"not-in\" /* NOT_IN */ ];\n\n                      case \"not-in\" /* NOT_IN */ :\n                        return [ \"array-contains\" /* ARRAY_CONTAINS */ , \"array-contains-any\" /* ARRAY_CONTAINS_ANY */ , \"in\" /* IN */ , \"not-in\" /* NOT_IN */ , \"!=\" /* NOT_EQUAL */ ];\n\n                      default:\n                        return [];\n                    }\n                }(e.op));\n                if (null !== n) \n                // Special case when it's a duplicate op to give a slightly clearer error message.\n                throw n === e.op ? new U(A, `Invalid query. You cannot use more than one '${e.op.toString()}' filter.`) : new U(A, `Invalid query. You cannot use '${e.op.toString()}' filters with '${n.toString()}' filters.`);\n            }(t, c), c;\n        }(t._query, \"where\", e, t.firestore._databaseId, this.dt, this.wt, this.yt);\n        return new hn(t.firestore, t.converter, function(t, e) {\n            const n = t.filters.concat([ e ]);\n            return new oe(t.path, t.collectionGroup, t.explicitOrderBy.slice(), n, t.limit, t.limitType, t.startAt, t.endAt);\n        }(t._query, n));\n    }\n}\n\n/**\n * Creates a {@link QueryConstraint} that enforces that documents must contain the\n * specified field and that the value should satisfy the relation constraint\n * provided.\n *\n * @param fieldPath - The path to compare\n * @param opStr - The operation string (e.g \"&lt;\", \"&lt;=\", \"==\", \"&lt;\",\n *   \"&lt;=\", \"!=\").\n * @param value - The value for comparison\n * @returns The created {@link Query}.\n */ function nr(t, e, n) {\n    const r = e, s = Xn(\"where\", t);\n    return new er(s, r, n);\n}\n\nclass rr extends Zn {\n    constructor(t, e) {\n        super(), this.dt = t, this._t = e, this.type = \"orderBy\";\n    }\n    _apply(t) {\n        const e = function(t, e, n) {\n            if (null !== t.startAt) throw new U(A, \"Invalid query. You must not call startAt() or startAfter() before calling orderBy().\");\n            if (null !== t.endAt) throw new U(A, \"Invalid query. You must not call endAt() or endBefore() before calling orderBy().\");\n            const r = new re(e, n);\n            return function(t, e) {\n                if (null === ce(t)) {\n                    // This is the first order by. It must match any inequality.\n                    const n = ae(t);\n                    null !== n && yr(t, n, e.field);\n                }\n            }(t, r), r;\n        }\n        /**\n * Create a `Bound` from a query and a document.\n *\n * Note that the `Bound` will always include the key of the document\n * and so only the provided document will compare equal to the returned\n * position.\n *\n * Will throw if the document does not contain all fields of the order by\n * of the query or if any of the fields in the order by are an uncommitted\n * server timestamp.\n */ (t._query, this.dt, this._t);\n        return new hn(t.firestore, t.converter, function(t, e) {\n            // TODO(dimond): validate that orderBy does not list the same key twice.\n            const n = t.explicitOrderBy.concat([ e ]);\n            return new oe(t.path, t.collectionGroup, n, t.filters.slice(), t.limit, t.limitType, t.startAt, t.endAt);\n        }(t._query, e));\n    }\n}\n\n/**\n * Creates a {@link QueryConstraint} that sorts the query result by the\n * specified field, optionally in descending order instead of ascending.\n *\n * @param fieldPath - The field to sort by.\n * @param directionStr - Optional direction to sort by ('asc' or 'desc'). If\n * not specified, order will be ascending.\n * @returns The created {@link Query}.\n */ function sr(t, e = \"asc\") {\n    const n = e, r = Xn(\"orderBy\", t);\n    return new rr(r, n);\n}\n\nclass ir extends Zn {\n    constructor(t, e, n) {\n        super(), this.type = t, this.gt = e, this.vt = n;\n    }\n    _apply(t) {\n        return new hn(t.firestore, t.converter, function(t, e, n) {\n            return new oe(t.path, t.collectionGroup, t.explicitOrderBy.slice(), t.filters.slice(), e, n, t.startAt, t.endAt);\n        }(t._query, this.gt, this.vt));\n    }\n}\n\n/**\n * Creates a {@link QueryConstraint} that only returns the first matching documents.\n *\n * @param limit - The maximum number of items to return.\n * @returns The created {@link Query}.\n */ function or(t) {\n    return ut(\"limit\", t), new ir(\"limit\", t, \"F\" /* First */);\n}\n\n/**\n * Creates a {@link QueryConstraint} that only returns the last matching documents.\n *\n * You must specify at least one `orderBy` clause for `limitToLast` queries,\n * otherwise an exception will be thrown during execution.\n *\n * @param limit - The maximum number of items to return.\n * @returns The created {@link Query}.\n */ function ur(t) {\n    return ut(\"limitToLast\", t), new ir(\"limitToLast\", t, \"L\" /* Last */);\n}\n\nclass cr extends Zn {\n    constructor(t, e, n) {\n        super(), this.type = t, this.bt = e, this.Et = n;\n    }\n    _apply(t) {\n        const e = wr(t, this.type, this.bt, this.Et);\n        return new hn(t.firestore, t.converter, function(t, e) {\n            return new oe(t.path, t.collectionGroup, t.explicitOrderBy.slice(), t.filters.slice(), t.limit, t.limitType, e, t.endAt);\n        }(t._query, e));\n    }\n}\n\nfunction ar(...t) {\n    return new cr(\"startAt\", t, \n    /*inclusive=*/ !0);\n}\n\nfunction hr(...t) {\n    return new cr(\"startAfter\", t, \n    /*inclusive=*/ !1);\n}\n\nclass lr extends Zn {\n    constructor(t, e, n) {\n        super(), this.type = t, this.bt = e, this.Et = n;\n    }\n    _apply(t) {\n        const e = wr(t, this.type, this.bt, this.Et);\n        return new hn(t.firestore, t.converter, function(t, e) {\n            return new oe(t.path, t.collectionGroup, t.explicitOrderBy.slice(), t.filters.slice(), t.limit, t.limitType, t.startAt, e);\n        }(t._query, e));\n    }\n}\n\nfunction fr(...t) {\n    return new lr(\"endBefore\", t, \n    /*inclusive=*/ !1);\n}\n\nfunction dr(...t) {\n    return new lr(\"endAt\", t, /*inclusive=*/ !0);\n}\n\n/** Helper function to create a bound from a document or fields */ function wr(t, e, n, r) {\n    if (n[0] = getModularInstance(n[0]), n[0] instanceof Yn) return function(t, e, n, r, s) {\n        if (!r) throw new U(P, `Can't use a DocumentSnapshot that doesn't exist for ${n}().`);\n        const i = [];\n        // Because people expect to continue/end a query at the exact document\n        // provided, we need to use the implicit sort order rather than the explicit\n        // sort order, because it's guaranteed to contain the document key. That way\n        // the position becomes unambiguous and the query continues/ends exactly at\n        // the provided document. Without the key (by using the explicit sort\n        // orders), multiple documents could match the position, yielding duplicate\n        // results.\n                for (const n of le(t)) if (n.field.isKeyField()) i.push(Ct(e, r.key)); else {\n            const t = r.data.field(n.field);\n            if (Dt(t)) throw new U(A, 'Invalid query. You are trying to start or end a query using a document for which the field \"' + n.field + '\" is an uncommitted server timestamp. (Since the value of this field is unknown, you cannot start/end a query with it.)');\n            if (null === t) {\n                const t = n.field.canonicalString();\n                throw new U(A, `Invalid query. You are trying to start or end a query using a document for which the field '${t}' (used as the orderBy) does not exist.`);\n            }\n            i.push(t);\n        }\n        return new ne(i, s);\n    }\n    /**\n * Converts a list of field values to a `Bound` for the given query.\n */ (t._query, t.firestore._databaseId, e, n[0]._document, r);\n    {\n        const s = Vn(t.firestore);\n        return function(t, e, n, r, s, i) {\n            // Use explicit order by's because it has to match the query the user made\n            const o = t.explicitOrderBy;\n            if (s.length > o.length) throw new U(A, `Too many arguments provided to ${r}(). The number of arguments must be less than or equal to the number of orderBy() clauses`);\n            const u = [];\n            for (let i = 0; i < s.length; i++) {\n                const c = s[i];\n                if (o[i].field.isKeyField()) {\n                    if (\"string\" != typeof c) throw new U(A, `Invalid query. Expected a string for document ID in ${r}(), but got a ${typeof c}`);\n                    if (!he(t) && -1 !== c.indexOf(\"/\")) throw new U(A, `Invalid query. When querying a collection and ordering by documentId(), the value passed to ${r}() must be a plain document ID, but '${c}' contains a slash.`);\n                    const n = t.path.child(X.fromString(c));\n                    if (!et.isDocumentKey(n)) throw new U(A, `Invalid query. When querying a collection group and ordering by documentId(), the value passed to ${r}() must result in a valid document path, but '${n}' is not because it contains an odd number of segments.`);\n                    const s = new et(n);\n                    u.push(Ct(e, s));\n                } else {\n                    const t = Ln(n, r, c);\n                    u.push(t);\n                }\n            }\n            return new ne(u, i);\n        }\n        /**\n * Parses the given `documentIdValue` into a `ReferenceValue`, throwing\n * appropriate errors if the value is anything other than a `DocumentReference`\n * or `string`, or if the string is malformed.\n */ (t._query, t.firestore._databaseId, s, e, n, r);\n    }\n}\n\nfunction mr(t, e, n) {\n    if (\"string\" == typeof (n = getModularInstance(n))) {\n        if (\"\" === n) throw new U(A, \"Invalid query. When querying with documentId(), you must provide a valid document ID, but it was an empty string.\");\n        if (!he(e) && -1 !== n.indexOf(\"/\")) throw new U(A, `Invalid query. When querying a collection by documentId(), you must provide a plain document ID, but '${n}' contains a '/' character.`);\n        const r = e.path.child(X.fromString(n));\n        if (!et.isDocumentKey(r)) throw new U(A, `Invalid query. When querying a collection group by documentId(), the value provided must result in a valid document path, but '${r}' is not because it has an odd number of segments (${r.length}).`);\n        return Ct(t, new et(r));\n    }\n    if (n instanceof an) return Ct(t, n._key);\n    throw new U(A, `Invalid query. When querying with documentId(), you must provide a valid string or a DocumentReference, but it was: ${it(n)}.`);\n}\n\n/**\n * Validates that the value passed into a disjunctive filter satisfies all\n * array requirements.\n */ function pr(t, e) {\n    if (!Array.isArray(t) || 0 === t.length) throw new U(A, `Invalid Query. A non-empty array is required for '${e.toString()}' filters.`);\n    if (t.length > 10) throw new U(A, `Invalid Query. '${e.toString()}' filters support a maximum of 10 elements in the value array.`);\n}\n\nfunction yr(t, e, n) {\n    if (!n.isEqual(e)) throw new U(A, `Invalid query. You have a where filter with an inequality (<, <=, !=, not-in, >, or >=) on field '${e.toString()}' and so you must also use '${e.toString()}' as your first argument to orderBy(), but your first orderBy() is on field '${n.toString()}' instead.`);\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Converts Firestore's internal types to the JavaScript types that we expose\n * to the user.\n *\n * @internal\n */\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Converts custom model object of type T into `DocumentData` by applying the\n * converter if it exists.\n *\n * This function is used when converting user objects to `DocumentData`\n * because we want to provide the user with a more specific error message if\n * their `set()` or fails due to invalid data originating from a `toFirestore()`\n * call.\n */\nfunction _r(t, e, n) {\n    let r;\n    // Cast to `any` in order to satisfy the union type constraint on\n    // toFirestore().\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    return r = t ? n && (n.merge || n.mergeFields) ? t.toFirestore(e, n) : t.toFirestore(e) : e, \n    r;\n}\n\nclass gr extends class {\n    convertValue(t, e = \"none\") {\n        switch (St(t)) {\n          case 0 /* NullValue */ :\n            return null;\n\n          case 1 /* BooleanValue */ :\n            return t.booleanValue;\n\n          case 2 /* NumberValue */ :\n            return Pt(t.integerValue || t.doubleValue);\n\n          case 3 /* TimestampValue */ :\n            return this.convertTimestamp(t.timestampValue);\n\n          case 4 /* ServerTimestampValue */ :\n            return this.convertServerTimestamp(t, e);\n\n          case 5 /* StringValue */ :\n            return t.stringValue;\n\n          case 6 /* BlobValue */ :\n            return this.convertBytes(Vt(t.bytesValue));\n\n          case 7 /* RefValue */ :\n            return this.convertReference(t.referenceValue);\n\n          case 8 /* GeoPointValue */ :\n            return this.convertGeoPoint(t.geoPointValue);\n\n          case 9 /* ArrayValue */ :\n            return this.convertArray(t.arrayValue, e);\n\n          case 10 /* ObjectValue */ :\n            return this.convertObject(t.mapValue, e);\n\n          default:\n            throw g();\n        }\n    }\n    convertObject(t, e) {\n        const n = {};\n        return Et(t.fields, ((t, r) => {\n            n[t] = this.convertValue(r, e);\n        })), n;\n    }\n    convertGeoPoint(t) {\n        return new bn(Pt(t.latitude), Pt(t.longitude));\n    }\n    convertArray(t, e) {\n        return (t.values || []).map((t => this.convertValue(t, e)));\n    }\n    convertServerTimestamp(t, e) {\n        switch (e) {\n          case \"previous\":\n            const n = Nt(t);\n            return null == n ? null : this.convertValue(n, e);\n\n          case \"estimate\":\n            return this.convertTimestamp($t(t));\n\n          default:\n            return null;\n        }\n    }\n    convertTimestamp(t) {\n        const e = Rt(t);\n        return new gt(e.seconds, e.nanos);\n    }\n    convertDocumentKey(t, e) {\n        const n = X.fromString(t);\n        v(We(n));\n        const r = new K(n.get(1), n.get(3)), s = new et(n.popFirst(5));\n        return r.isEqual(e) || \n        // TODO(b/64130202): Somehow support foreign references.\n        p(`Document ${s} contains a document reference within a different database (${r.projectId}/${r.database}) which is not supported. It will be treated as a reference in the current database (${e.projectId}/${e.database}) instead.`), \n        s;\n    }\n} {\n    constructor(t) {\n        super(), this.firestore = t;\n    }\n    convertBytes(t) {\n        return new gn(t);\n    }\n    convertReference(t) {\n        const e = this.convertDocumentKey(t, this.firestore._databaseId);\n        return new an(this.firestore, /* converter= */ null, e);\n    }\n}\n\n/**\n * Reads the document referred to by the specified document reference.\n *\n * All documents are directly fetched from the server, even if the document was\n * previously read or modified. Recent modifications are only reflected in the\n * retrieved `DocumentSnapshot` if they have already been applied by the\n * backend. If the client is offline, the read fails. If you like to use\n * caching or see local modifications, please use the full Firestore SDK.\n *\n * @param reference - The reference of the document to fetch.\n * @returns A Promise resolved with a `DocumentSnapshot` containing the current\n * document contents.\n */ function vr(t) {\n    const e = en((t = ot(t, an)).firestore), n = new gr(t.firestore);\n    return Xe(e, [ t._key ]).then((e => {\n        v(1 === e.length);\n        const r = e[0];\n        return new Yn(t.firestore, n, t._key, r.isFoundDocument() ? r : null, t.converter);\n    }));\n}\n\n/**\n * Executes the query and returns the results as a {@link QuerySnapshot}.\n *\n * All queries are executed directly by the server, even if the the query was\n * previously executed. Recent modifications are only reflected in the retrieved\n * results if they have already been applied by the backend. If the client is\n * offline, the operation fails. To see previously cached result and local\n * modifications, use the full Firestore SDK.\n *\n * @param query - The `Query` to execute.\n * @returns A Promise that will be resolved with the results of the query.\n */ function br(t) {\n    !function(t) {\n        if (ue(t) && 0 === t.explicitOrderBy.length) throw new U(q, \"limitToLast() queries require specifying at least one orderBy() clause\");\n    }((t = ot(t, hn))._query);\n    const e = en(t.firestore), n = new gr(t.firestore);\n    return Ze(e, t._query).then((e => {\n        const r = e.map((e => new Hn(t.firestore, n, e.key, e, t.converter)));\n        return ue(t._query) && \n        // Limit to last queries reverse the orderBy constraint that was\n        // specified by the user. As such, we need to reverse the order of the\n        // results to return the documents in the expected order.\n        r.reverse(), new Kn(t, r);\n    }));\n}\n\nfunction Er(t, e, n) {\n    const r = _r((t = ot(t, an)).converter, e, n), s = Dn(Vn(t.firestore), \"setDoc\", t._key, r, null !== t.converter, n);\n    return Je(en(t.firestore), [ s.toMutation(t._key, be.none()) ]);\n}\n\nfunction Tr(t, e, n, ...r) {\n    const s = Vn((t = ot(t, an)).firestore);\n    // For Compat types, we have to \"extract\" the underlying types before\n    // performing validation.\n        let i;\n    i = \"string\" == typeof (e = getModularInstance(e)) || e instanceof yn ? Cn(s, \"updateDoc\", t._key, e, n, r) : On(s, \"updateDoc\", t._key, e);\n    return Je(en(t.firestore), [ i.toMutation(t._key, be.exists(!0)) ]);\n}\n\n/**\n * Deletes the document referred to by the specified `DocumentReference`.\n *\n * The deletion will only be reflected in document reads that occur after the\n * returned promise resolves. If the client is offline, the\n * delete fails. If you would like to see local modifications or buffer writes\n * until the client is online, use the full Firestore SDK.\n *\n * @param reference - A reference to the document to delete.\n * @returns A `Promise` resolved once the document has been successfully\n * deleted from the backend.\n */ function Ir(t) {\n    return Je(en((t = ot(t, an)).firestore), [ new Ae(t._key, be.none()) ]);\n}\n\n/**\n * Add a new document to specified `CollectionReference` with the given data,\n * assigning it a document ID automatically.\n *\n * The result of this write will only be reflected in document reads that occur\n * after the returned promise resolves. If the client is offline, the\n * write fails. If you would like to see local modifications or buffer writes\n * until the client is online, use the full Firestore SDK.\n *\n * @param reference - A reference to the collection to add this document to.\n * @param data - An Object containing the data for the new document.\n * @throws Error - If the provided input is not a valid Firestore document.\n * @returns A `Promise` resolved with a `DocumentReference` pointing to the\n * newly created document after it has been written to the backend.\n */ function Ar(t, e) {\n    const n = wn(t = ot(t, ln)), r = _r(t.converter, e), s = Dn(Vn(t.firestore), \"addDoc\", n._key, r, null !== n.converter, {});\n    return Je(en(t.firestore), [ s.toMutation(n._key, be.exists(!1)) ]).then((() => n));\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Returns a sentinel for use with {@link @firebase/firestore/lite#(updateDoc:1)} or\n * {@link @firebase/firestore/lite#(setDoc:1)} with `{merge: true}` to mark a field for deletion.\n */ function Rr() {\n    return new Nn(\"deleteField\");\n}\n\n/**\n * Returns a sentinel used with {@link @firebase/firestore/lite#(setDoc:1)} or {@link @firebase/firestore/lite#(updateDoc:1)} to\n * include a server-generated timestamp in the written data.\n */ function Pr() {\n    return new Sn(\"serverTimestamp\");\n}\n\n/**\n * Returns a special value that can be used with {@link @firebase/firestore/lite#(setDoc:1)} or {@link\n * @firebase/firestore/lite#(updateDoc:1)} that tells the server to union the given elements with any array\n * value that already exists on the server. Each specified element that doesn't\n * already exist in the array will be added to the end. If the field being\n * modified is not already an array it will be overwritten with an array\n * containing exactly the specified elements.\n *\n * @param elements - The elements to union into the array.\n * @returns The `FieldValue` sentinel for use in a call to `setDoc()` or\n * `updateDoc()`.\n */ function Vr(...t) {\n    // NOTE: We don't actually parse the data until it's used in set() or\n    // update() since we'd need the Firestore instance to do this.\n    return new Fn(\"arrayUnion\", t);\n}\n\n/**\n * Returns a special value that can be used with {@link (setDoc:1)} or {@link\n * updateDoc:1} that tells the server to remove the given elements from any\n * array value that already exists on the server. All instances of each element\n * specified will be removed from the array. If the field being modified is not\n * already an array it will be overwritten with an empty array.\n *\n * @param elements - The elements to remove from the array.\n * @returns The `FieldValue` sentinel for use in a call to `setDoc()` or\n * `updateDoc()`\n */ function Dr(...t) {\n    // NOTE: We don't actually parse the data until it's used in set() or\n    // update() since we'd need the Firestore instance to do this.\n    return new xn(\"arrayRemove\", t);\n}\n\n/**\n * Returns a special value that can be used with {@link @firebase/firestore/lite#(setDoc:1)} or {@link\n * @firebase/firestore/lite#(updateDoc:1)} that tells the server to increment the field's current value by\n * the given value.\n *\n * If either the operand or the current field value uses floating point\n * precision, all arithmetic follows IEEE 754 semantics. If both values are\n * integers, values outside of JavaScript's safe number range\n * (`Number.MIN_SAFE_INTEGER` to `Number.MAX_SAFE_INTEGER`) are also subject to\n * precision loss. Furthermore, once processed by the Firestore backend, all\n * integer operations are capped between -2^63 and 2^63-1.\n *\n * If the current field value is not of type `number`, or if the field does not\n * yet exist, the transformation sets the field to the given value.\n *\n * @param n - The value to increment by.\n * @returns The `FieldValue` sentinel for use in a call to `setDoc()` or\n * `updateDoc()`\n */ function Nr(t) {\n    return new qn(\"increment\", t);\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * A write batch, used to perform multiple writes as a single atomic unit.\n *\n * A `WriteBatch` object can be acquired by calling {@link writeBatch}. It\n * provides methods for adding writes to the write batch. None of the writes\n * will be committed (or visible locally) until {@link WriteBatch.commit} is\n * called.\n */ class $r {\n    /** @hideconstructor */\n    constructor(t, e) {\n        this._firestore = t, this._commitHandler = e, this._mutations = [], this._committed = !1, \n        this._dataReader = Vn(t);\n    }\n    set(t, e, n) {\n        this._verifyNotCommitted();\n        const r = Sr(t, this._firestore), s = _r(r.converter, e, n), i = Dn(this._dataReader, \"WriteBatch.set\", r._key, s, null !== r.converter, n);\n        return this._mutations.push(i.toMutation(r._key, be.none())), this;\n    }\n    update(t, e, n, ...r) {\n        this._verifyNotCommitted();\n        const s = Sr(t, this._firestore);\n        // For Compat types, we have to \"extract\" the underlying types before\n        // performing validation.\n                let i;\n        return i = \"string\" == typeof (e = getModularInstance(e)) || e instanceof yn ? Cn(this._dataReader, \"WriteBatch.update\", s._key, e, n, r) : On(this._dataReader, \"WriteBatch.update\", s._key, e), \n        this._mutations.push(i.toMutation(s._key, be.exists(!0))), this;\n    }\n    /**\n     * Deletes the document referred to by the provided {@link DocumentReference}.\n     *\n     * @param documentRef - A reference to the document to be deleted.\n     * @returns This `WriteBatch` instance. Used for chaining method calls.\n     */    delete(t) {\n        this._verifyNotCommitted();\n        const e = Sr(t, this._firestore);\n        return this._mutations = this._mutations.concat(new Ae(e._key, be.none())), this;\n    }\n    /**\n     * Commits all of the writes in this write batch as a single atomic unit.\n     *\n     * The result of these writes will only be reflected in document reads that\n     * occur after the returned promise resolves. If the client is offline, the\n     * write fails. If you would like to see local modifications or buffer writes\n     * until the client is online, use the full Firestore SDK.\n     *\n     * @returns A `Promise` resolved once all of the writes in the batch have been\n     * successfully written to the backend as an atomic unit (note that it won't\n     * resolve while you're offline).\n     */    commit() {\n        return this._verifyNotCommitted(), this._committed = !0, this._mutations.length > 0 ? this._commitHandler(this._mutations) : Promise.resolve();\n    }\n    _verifyNotCommitted() {\n        if (this._committed) throw new U(S, \"A write batch can no longer be used after commit() has been called.\");\n    }\n}\n\nfunction Sr(t, e) {\n    if ((t = getModularInstance(t)).firestore !== e) throw new U(A, \"Provided document reference is from a different Firestore instance.\");\n    return t;\n}\n\n/**\n * Creates a write batch, used for performing multiple writes as a single\n * atomic operation. The maximum number of writes allowed in a single WriteBatch\n * is 500.\n *\n * The result of these writes will only be reflected in document reads that\n * occur after the returned promise resolves. If the client is offline, the\n * write fails. If you would like to see local modifications or buffer writes\n * until the client is online, use the full Firestore SDK.\n *\n * @returns A `WriteBatch` that can be used to atomically execute multiple\n * writes.\n */ function Fr(t) {\n    const e = en(t = ot(t, rn));\n    return new $r(t, (t => Je(e, t)));\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Internal transaction object responsible for accumulating the mutations to\n * perform and the base versions for any documents read.\n */ class xr {\n    constructor(t) {\n        this.datastore = t, \n        // The version of each document that was read during this transaction.\n        this.readVersions = new Map, this.mutations = [], this.committed = !1, \n        /**\n         * A deferred usage error that occurred previously in this transaction that\n         * will cause the transaction to fail once it actually commits.\n         */\n        this.lastWriteError = null, \n        /**\n         * Set of documents that have been written in the transaction.\n         *\n         * When there's more than one write to the same key in a transaction, any\n         * writes after the first are handled differently.\n         */\n        this.writtenDocs = new Set;\n    }\n    async lookup(t) {\n        if (this.ensureCommitNotCalled(), this.mutations.length > 0) throw new U(A, \"Firestore transactions require all reads to be executed before all writes.\");\n        const e = await Xe(this.datastore, t);\n        return e.forEach((t => this.recordVersion(t))), e;\n    }\n    set(t, e) {\n        this.write(e.toMutation(t, this.precondition(t))), this.writtenDocs.add(t.toString());\n    }\n    update(t, e) {\n        try {\n            this.write(e.toMutation(t, this.preconditionForUpdate(t)));\n        } catch (t) {\n            this.lastWriteError = t;\n        }\n        this.writtenDocs.add(t.toString());\n    }\n    delete(t) {\n        this.write(new Ae(t, this.precondition(t))), this.writtenDocs.add(t.toString());\n    }\n    async commit() {\n        if (this.ensureCommitNotCalled(), this.lastWriteError) throw this.lastWriteError;\n        const t = this.readVersions;\n        // For each mutation, note that the doc was written.\n                this.mutations.forEach((e => {\n            t.delete(e.key.toString());\n        })), \n        // For each document that was read but not written to, we want to perform\n        // a `verify` operation.\n        t.forEach(((t, e) => {\n            const n = et.fromPath(e);\n            this.mutations.push(new Re(n, this.precondition(n)));\n        })), await Je(this.datastore, this.mutations), this.committed = !0;\n    }\n    recordVersion(t) {\n        let e;\n        if (t.isFoundDocument()) e = t.version; else {\n            if (!t.isNoDocument()) throw g();\n            // For deleted docs, we must use baseVersion 0 when we overwrite them.\n            e = vt.min();\n        }\n        const n = this.readVersions.get(t.key.toString());\n        if (n) {\n            if (!e.isEqual(n)) \n            // This transaction will fail no matter what.\n            throw new U(F, \"Document version changed between two reads.\");\n        } else this.readVersions.set(t.key.toString(), e);\n    }\n    /**\n     * Returns the version of this document when it was read in this transaction,\n     * as a precondition, or no precondition if it was not read.\n     */    precondition(t) {\n        const e = this.readVersions.get(t.toString());\n        return !this.writtenDocs.has(t.toString()) && e ? be.updateTime(e) : be.none();\n    }\n    /**\n     * Returns the precondition for a document if the operation is an update.\n     */    preconditionForUpdate(t) {\n        const e = this.readVersions.get(t.toString());\n        // The first time a document is written, we want to take into account the\n        // read time and existence\n                if (!this.writtenDocs.has(t.toString()) && e) {\n            if (e.isEqual(vt.min())) \n            // The document doesn't exist, so fail the transaction.\n            // This has to be validated locally because you can't send a\n            // precondition that a document does not exist without changing the\n            // semantics of the backend write to be an insert. This is the reverse\n            // of what we want, since we want to assert that the document doesn't\n            // exist but then send the update and have it fail. Since we can't\n            // express that to the backend, we have to validate locally.\n            // Note: this can change once we can send separate verify writes in the\n            // transaction.\n            throw new U(A, \"Can't update a document that doesn't exist.\");\n            // Document exists, base precondition on document update time.\n                        return be.updateTime(e);\n        }\n        // Document was not read, so we just use the preconditions for a blind\n        // update.\n        return be.exists(!0);\n    }\n    write(t) {\n        this.ensureCommitNotCalled(), this.mutations.push(t);\n    }\n    ensureCommitNotCalled() {}\n}\n\n/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * TransactionRunner encapsulates the logic needed to run and retry transactions\n * with backoff.\n */\nclass qr {\n    constructor(t, e, n, r) {\n        this.asyncQueue = t, this.datastore = e, this.updateFunction = n, this.deferred = r, \n        this.Tt = 5, this.It = new He(this.asyncQueue, \"transaction_retry\" /* TransactionRetry */);\n    }\n    /** Runs the transaction and sets the result on deferred. */    run() {\n        this.Tt -= 1, this.At();\n    }\n    At() {\n        this.It.W((async () => {\n            const t = new xr(this.datastore), e = this.Rt(t);\n            e && e.then((e => {\n                this.asyncQueue.enqueueAndForget((() => t.commit().then((() => {\n                    this.deferred.resolve(e);\n                })).catch((t => {\n                    this.Pt(t);\n                }))));\n            })).catch((t => {\n                this.Pt(t);\n            }));\n        }));\n    }\n    Rt(t) {\n        try {\n            const e = this.updateFunction(t);\n            return !ct(e) && e.catch && e.then ? e : (this.deferred.reject(Error(\"Transaction callback must return a Promise\")), \n            null);\n        } catch (t) {\n            // Do not retry errors thrown by user provided updateFunction.\n            return this.deferred.reject(t), null;\n        }\n    }\n    Pt(t) {\n        this.Tt > 0 && this.Vt(t) ? (this.Tt -= 1, this.asyncQueue.enqueueAndForget((() => (this.At(), \n        Promise.resolve())))) : this.deferred.reject(t);\n    }\n    Vt(t) {\n        if (\"FirebaseError\" === t.name) {\n            // In transactions, the backend will fail outdated reads with FAILED_PRECONDITION and\n            // non-matching document versions with ABORTED. These errors should be retried.\n            const e = t.code;\n            return \"aborted\" === e || \"failed-precondition\" === e || !\n            /**\n * Determines whether an error code represents a permanent error when received\n * in response to a non-write operation.\n *\n * See isPermanentWriteError for classifying write errors.\n */\n            function(t) {\n                switch (t) {\n                  default:\n                    return g();\n\n                  case T:\n                  case I:\n                  case R:\n                  case $:\n                  case O:\n                  case C:\n // Unauthenticated means something went wrong with our token and we need\n                    // to retry with new credentials which will happen automatically.\n                                      case N:\n                    return !1;\n\n                  case A:\n                  case P:\n                  case V:\n                  case D:\n                  case S:\n // Aborted might be retried in some scenarios, but that is dependant on\n                    // the context and should handled individually by the calling code.\n                    // See https://cloud.google.com/apis/design/errors.\n                                      case F:\n                  case x:\n                  case q:\n                  case L:\n                    return !0;\n                }\n            }(e);\n        }\n        return !1;\n    }\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/** The Platform's 'document' implementation or null if not available. */ function Or() {\n    // `document` is not always available, e.g. in ReactNative and WebWorkers.\n    // eslint-disable-next-line no-restricted-globals\n    return \"undefined\" != typeof document ? document : null;\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Represents an operation scheduled to be run in the future on an AsyncQueue.\n *\n * It is created via DelayedOperation.createAndSchedule().\n *\n * Supports cancellation (via cancel()) and early execution (via skipDelay()).\n *\n * Note: We implement `PromiseLike` instead of `Promise`, as the `Promise` type\n * in newer versions of TypeScript defines `finally`, which is not available in\n * IE.\n */ class Cr {\n    constructor(t, e, n, r, s) {\n        this.asyncQueue = t, this.timerId = e, this.targetTimeMs = n, this.op = r, this.removalCallback = s, \n        this.deferred = new k, this.then = this.deferred.promise.then.bind(this.deferred.promise), \n        // It's normal for the deferred promise to be canceled (due to cancellation)\n        // and so we attach a dummy catch callback to avoid\n        // 'UnhandledPromiseRejectionWarning' log spam.\n        this.deferred.promise.catch((t => {}));\n    }\n    /**\n     * Creates and returns a DelayedOperation that has been scheduled to be\n     * executed on the provided asyncQueue after the provided delayMs.\n     *\n     * @param asyncQueue - The queue to schedule the operation on.\n     * @param id - A Timer ID identifying the type of operation this is.\n     * @param delayMs - The delay (ms) before the operation should be scheduled.\n     * @param op - The operation to run.\n     * @param removalCallback - A callback to be called synchronously once the\n     *   operation is executed or canceled, notifying the AsyncQueue to remove it\n     *   from its delayedOperations list.\n     *   PORTING NOTE: This exists to prevent making removeDelayedOperation() and\n     *   the DelayedOperation class public.\n     */    static createAndSchedule(t, e, n, r, s) {\n        const i = Date.now() + n, o = new Cr(t, e, i, r, s);\n        return o.start(n), o;\n    }\n    /**\n     * Starts the timer. This is called immediately after construction by\n     * createAndSchedule().\n     */    start(t) {\n        this.timerHandle = setTimeout((() => this.handleDelayElapsed()), t);\n    }\n    /**\n     * Queues the operation to run immediately (if it hasn't already been run or\n     * canceled).\n     */    skipDelay() {\n        return this.handleDelayElapsed();\n    }\n    /**\n     * Cancels the operation if it hasn't already been executed or canceled. The\n     * promise will be rejected.\n     *\n     * As long as the operation has not yet been run, calling cancel() provides a\n     * guarantee that the operation will not be run.\n     */    cancel(t) {\n        null !== this.timerHandle && (this.clearTimeout(), this.deferred.reject(new U(T, \"Operation cancelled\" + (t ? \": \" + t : \"\"))));\n    }\n    handleDelayElapsed() {\n        this.asyncQueue.enqueueAndForget((() => null !== this.timerHandle ? (this.clearTimeout(), \n        this.op().then((t => this.deferred.resolve(t)))) : Promise.resolve()));\n    }\n    clearTimeout() {\n        null !== this.timerHandle && (this.removalCallback(this), clearTimeout(this.timerHandle), \n        this.timerHandle = null);\n    }\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */ class Lr {\n    constructor() {\n        // The last promise in the queue.\n        this.Dt = Promise.resolve(), \n        // A list of retryable operations. Retryable operations are run in order and\n        // retried with backoff.\n        this.Nt = [], \n        // Is this AsyncQueue being shut down? Once it is set to true, it will not\n        // be changed again.\n        this.$t = !1, \n        // Operations scheduled to be queued in the future. Operations are\n        // automatically removed after they are run or canceled.\n        this.St = [], \n        // visible for testing\n        this.Ft = null, \n        // Flag set while there's an outstanding AsyncQueue operation, used for\n        // assertion sanity-checks.\n        this.xt = !1, \n        // Enabled during shutdown on Safari to prevent future access to IndexedDB.\n        this.qt = !1, \n        // List of TimerIds to fast-forward delays for.\n        this.Ot = [], \n        // Backoff timer used to schedule retries for retryable operations\n        this.It = new He(this, \"async_queue_retry\" /* AsyncQueueRetry */), \n        // Visibility handler that triggers an immediate retry of all retryable\n        // operations. Meant to speed up recovery when we regain file system access\n        // after page comes into foreground.\n        this.Ct = () => {\n            const t = Or();\n            t && m(\"AsyncQueue\", \"Visibility state changed to \" + t.visibilityState), this.It.H();\n        };\n        const t = Or();\n        t && \"function\" == typeof t.addEventListener && t.addEventListener(\"visibilitychange\", this.Ct);\n    }\n    get isShuttingDown() {\n        return this.$t;\n    }\n    /**\n     * Adds a new operation to the queue without waiting for it to complete (i.e.\n     * we ignore the Promise result).\n     */    enqueueAndForget(t) {\n        // eslint-disable-next-line @typescript-eslint/no-floating-promises\n        this.enqueue(t);\n    }\n    enqueueAndForgetEvenWhileRestricted(t) {\n        this.Lt(), \n        // eslint-disable-next-line @typescript-eslint/no-floating-promises\n        this.Ut(t);\n    }\n    enterRestrictedMode(t) {\n        if (!this.$t) {\n            this.$t = !0, this.qt = t || !1;\n            const e = Or();\n            e && \"function\" == typeof e.removeEventListener && e.removeEventListener(\"visibilitychange\", this.Ct);\n        }\n    }\n    enqueue(t) {\n        if (this.Lt(), this.$t) \n        // Return a Promise which never resolves.\n        return new Promise((() => {}));\n        // Create a deferred Promise that we can return to the callee. This\n        // allows us to return a \"hanging Promise\" only to the callee and still\n        // advance the queue even when the operation is not run.\n                const e = new k;\n        return this.Ut((() => this.$t && this.qt ? Promise.resolve() : (t().then(e.resolve, e.reject), \n        e.promise))).then((() => e.promise));\n    }\n    enqueueRetryable(t) {\n        this.enqueueAndForget((() => (this.Nt.push(t), this.kt())));\n    }\n    /**\n     * Runs the next operation from the retryable queue. If the operation fails,\n     * reschedules with backoff.\n     */    async kt() {\n        if (0 !== this.Nt.length) {\n            try {\n                await this.Nt[0](), this.Nt.shift(), this.It.reset();\n            } catch (t) {\n                if (!\n                /**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n                /** Verifies whether `e` is an IndexedDbTransactionError. */\n                function(t) {\n                    // Use name equality, as instanceof checks on errors don't work with errors\n                    // that wrap other errors.\n                    return \"IndexedDbTransactionError\" === t.name;\n                }\n                /**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */ (t)) throw t;\n // Failure will be handled by AsyncQueue\n                                m(\"AsyncQueue\", \"Operation failed with retryable error: \" + t);\n            }\n            this.Nt.length > 0 && \n            // If there are additional operations, we re-schedule `retryNextOp()`.\n            // This is necessary to run retryable operations that failed during\n            // their initial attempt since we don't know whether they are already\n            // enqueued. If, for example, `op1`, `op2`, `op3` are enqueued and `op1`\n            // needs to  be re-run, we will run `op1`, `op1`, `op2` using the\n            // already enqueued calls to `retryNextOp()`. `op3()` will then run in the\n            // call scheduled here.\n            // Since `backoffAndRun()` cancels an existing backoff and schedules a\n            // new backoff on every call, there is only ever a single additional\n            // operation in the queue.\n            this.It.W((() => this.kt()));\n        }\n    }\n    Ut(t) {\n        const e = this.Dt.then((() => (this.xt = !0, t().catch((t => {\n            this.Ft = t, this.xt = !1;\n            const e = \n            /**\n * Chrome includes Error.message in Error.stack. Other browsers do not.\n * This returns expected output of message + stack when available.\n * @param error - Error or FirestoreError\n */\n            function(t) {\n                let e = t.message || \"\";\n                t.stack && (e = t.stack.includes(t.message) ? t.stack : t.message + \"\\n\" + t.stack);\n                return e;\n            }\n            /**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n            // TODO(mrschmidt) Consider using `BaseTransaction` as the base class in the\n            // legacy SDK.\n            /**\n * A reference to a transaction.\n *\n * The `Transaction` object passed to a transaction's `updateFunction` provides\n * the methods to read and write data within the transaction context. See\n * {@link runTransaction}.\n */ (t);\n            // Re-throw the error so that this.tail becomes a rejected Promise and\n            // all further attempts to chain (via .then) will just short-circuit\n            // and return the rejected Promise.\n            throw p(\"INTERNAL UNHANDLED ERROR: \", e), t;\n        })).then((t => (this.xt = !1, t))))));\n        return this.Dt = e, e;\n    }\n    enqueueAfterDelay(t, e, n) {\n        this.Lt(), \n        // Fast-forward delays for timerIds that have been overriden.\n        this.Ot.indexOf(t) > -1 && (e = 0);\n        const r = Cr.createAndSchedule(this, t, e, n, (t => this.jt(t)));\n        return this.St.push(r), r;\n    }\n    Lt() {\n        this.Ft && g();\n    }\n    verifyOperationInProgress() {}\n    /**\n     * Waits until all currently queued tasks are finished executing. Delayed\n     * operations are not run.\n     */    async Mt() {\n        // Operations in the queue prior to draining may have enqueued additional\n        // operations. Keep draining the queue until the tail is no longer advanced,\n        // which indicates that no more new operations were enqueued and that all\n        // operations were executed.\n        let t;\n        do {\n            t = this.Dt, await t;\n        } while (t !== this.Dt);\n    }\n    /**\n     * For Tests: Determine if a delayed operation with a particular TimerId\n     * exists.\n     */    Bt(t) {\n        for (const e of this.St) if (e.timerId === t) return !0;\n        return !1;\n    }\n    /**\n     * For Tests: Runs some or all delayed operations early.\n     *\n     * @param lastTimerId - Delayed operations up to and including this TimerId\n     * will be drained. Pass TimerId.All to run all delayed operations.\n     * @returns a Promise that resolves once all operations have been run.\n     */    zt(t) {\n        // Note that draining may generate more delayed ops, so we do that first.\n        return this.Mt().then((() => {\n            // Run ops in the same order they'd run if they ran naturally.\n            this.St.sort(((t, e) => t.targetTimeMs - e.targetTimeMs));\n            for (const e of this.St) if (e.skipDelay(), \"all\" /* All */ !== t && e.timerId === t) break;\n            return this.Mt();\n        }));\n    }\n    /**\n     * For Tests: Skip all subsequent delays for a timer id.\n     */    Gt(t) {\n        this.Ot.push(t);\n    }\n    /** Called once a DelayedOperation is run or canceled. */    jt(t) {\n        // NOTE: indexOf / slice are O(n), but delayedOperations is expected to be small.\n        const e = this.St.indexOf(t);\n        this.St.splice(e, 1);\n    }\n}\n\nclass Ur {\n    /** @hideconstructor */\n    constructor(t, e) {\n        this._firestore = t, this._transaction = e, this._dataReader = Vn(t);\n    }\n    /**\n     * Reads the document referenced by the provided {@link DocumentReference}.\n     *\n     * @param documentRef - A reference to the document to be read.\n     * @returns A `DocumentSnapshot` with the read data.\n     */    get(t) {\n        const e = Sr(t, this._firestore), n = new gr(this._firestore);\n        return this._transaction.lookup([ e._key ]).then((t => {\n            if (!t || 1 !== t.length) return g();\n            const r = t[0];\n            if (r.isFoundDocument()) return new Yn(this._firestore, n, r.key, r, e.converter);\n            if (r.isNoDocument()) return new Yn(this._firestore, n, e._key, null, e.converter);\n            throw g();\n        }));\n    }\n    set(t, e, n) {\n        const r = Sr(t, this._firestore), s = _r(r.converter, e, n), i = Dn(this._dataReader, \"Transaction.set\", r._key, s, null !== r.converter, n);\n        return this._transaction.set(r._key, i), this;\n    }\n    update(t, e, n, ...r) {\n        const s = Sr(t, this._firestore);\n        // For Compat types, we have to \"extract\" the underlying types before\n        // performing validation.\n                let i;\n        return i = \"string\" == typeof (e = getModularInstance(e)) || e instanceof yn ? Cn(this._dataReader, \"Transaction.update\", s._key, e, n, r) : On(this._dataReader, \"Transaction.update\", s._key, e), \n        this._transaction.update(s._key, i), this;\n    }\n    /**\n     * Deletes the document referred to by the provided {@link DocumentReference}.\n     *\n     * @param documentRef - A reference to the document to be deleted.\n     * @returns This `Transaction` instance. Used for chaining method calls.\n     */    delete(t) {\n        const e = Sr(t, this._firestore);\n        return this._transaction.delete(e._key), this;\n    }\n}\n\n/**\n * Executes the given `updateFunction` and then attempts to commit the changes\n * applied within the transaction. If any document read within the transaction\n * has changed, Cloud Firestore retries the `updateFunction`. If it fails to\n * commit after 5 attempts, the transaction fails.\n *\n * The maximum number of writes allowed in a single transaction is 500.\n *\n * @param firestore - A reference to the Firestore database to run this\n * transaction against.\n * @param updateFunction - The function to execute within the transaction\n * context.\n * @returns If the transaction completed successfully or was explicitly aborted\n * (the `updateFunction` returned a failed promise), the promise returned by the\n * `updateFunction `is returned here. Otherwise, if the transaction failed, a\n * rejected promise with the corresponding failure error is returned.\n */ function kr(t, e) {\n    const n = en(t = ot(t, rn)), r = new k;\n    return new qr(new Lr, n, (n => e(new Ur(t, n))), r).run(), r.promise;\n}\n\n/**\n * Firestore Lite\n *\n * @remarks Firestore Lite is a small online-only SDK that allows read\n * and write access to your Firestore database. All operations connect\n * directly to the backend, and `onSnapshot()` APIs are not supported.\n * @packageDocumentation\n */ !function(t) {\n    f = t;\n}(`${SDK_VERSION}_lite`), _registerComponent(new Component(\"firestore/lite\", ((t, {options: e}) => {\n    const n = t.getProvider(\"app\").getImmediate(), r = new rn(n, new z(t.getProvider(\"auth-internal\")), new Y(t.getProvider(\"app-check-internal\")));\n    return e && r._setSettings(e), r;\n}), \"PUBLIC\")), \n// RUNTIME_ENV and BUILD_TARGET are replaced by real values during the compilation\nregisterVersion(\"firestore-lite\", \"3.4.5\", \"\"), registerVersion(\"firestore-lite\", \"3.4.5\", \"esm2017\");\n\nexport { gn as Bytes, ln as CollectionReference, an as DocumentReference, Yn as DocumentSnapshot, yn as FieldPath, vn as FieldValue, rn as Firestore, U as FirestoreError, bn as GeoPoint, hn as Query, Zn as QueryConstraint, Hn as QueryDocumentSnapshot, Kn as QuerySnapshot, gt as Timestamp, Ur as Transaction, $r as WriteBatch, Ar as addDoc, Dr as arrayRemove, Vr as arrayUnion, fn as collection, dn as collectionGroup, un as connectFirestoreEmulator, Ir as deleteDoc, Rr as deleteField, wn as doc, _n as documentId, dr as endAt, fr as endBefore, vr as getDoc, br as getDocs, on as getFirestore, Nr as increment, sn as initializeFirestore, or as limit, ur as limitToLast, sr as orderBy, tr as query, pn as queryEqual, mn as refEqual, kr as runTransaction, Pr as serverTimestamp, Er as setDoc, w as setLogLevel, Jn as snapshotEqual, hr as startAfter, ar as startAt, cn as terminate, Tr as updateDoc, nr as where, Fr as writeBatch };\n"]},"metadata":{},"sourceType":"module"}